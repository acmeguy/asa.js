{"version":3,"sources":["webpack:///tests.js","webpack:///webpack/bootstrap 5f045019ab4deb14feae?a5b6","webpack:///./src/parseuri.js?12e3","webpack:///./src/auto_track.js?7fa5","webpack:///./src/session.js?9fc0","webpack:///./src/debug.js?16c9","webpack:///./src/user.js?0f14","webpack:///./src/cookies.js?fb1a","webpack:///./src/domain_hash.js?56b4","webpack:///./src/randomness.js?c941","webpack:///./src/inbox.js?0881","webpack:///./src/microdata.js?46c9","webpack:///./src/DOM.js?6b41","webpack:///./src/event.js?d060","webpack:///./src/version.js?901f","webpack:///./src/features.js?2c55","webpack:///./src/utils.js?2ff8","webpack:///./src/server.js?d054","webpack:///./~/superagent/lib/client.js?a54e","webpack:///./~/superagent/~/component-emitter/index.js?7aa5","webpack:///./~/superagent/~/reduce-component/index.js?b42d","webpack:///./src/ajax.js?aa61","webpack:///./test/inbox.js","webpack:///./~/chai/index.js","webpack:///./~/chai/lib/chai.js","webpack:///./~/chai/~/assertion-error/index.js","webpack:///./~/chai/lib/chai/utils/index.js","webpack:///./~/chai/lib/chai/utils/test.js","webpack:///./~/chai/lib/chai/utils/flag.js","webpack:///./~/chai/~/type-detect/index.js","webpack:///./~/chai/~/type-detect/lib/type.js","webpack:///./~/chai/lib/chai/utils/expectTypes.js","webpack:///./~/chai/lib/chai/utils/getMessage.js","webpack:///./~/chai/lib/chai/utils/getActual.js","webpack:///./~/chai/lib/chai/utils/inspect.js","webpack:///./~/chai/lib/chai/utils/getName.js","webpack:///./~/chai/lib/chai/utils/getProperties.js","webpack:///./~/chai/lib/chai/utils/getEnumerableProperties.js","webpack:///./~/chai/lib/chai/utils/objDisplay.js","webpack:///./~/chai/lib/chai/config.js","webpack:///./~/chai/lib/chai/utils/transferFlags.js","webpack:///./~/chai/~/deep-eql/index.js","webpack:///./~/chai/~/deep-eql/lib/eql.js","webpack:///./~/chai/~/deep-eql/~/type-detect/index.js","webpack:///./~/chai/~/deep-eql/~/type-detect/lib/type.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/index.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/ieee754/index.js","webpack:///(webpack)/~/node-libs-browser/~/buffer/~/is-array/index.js","webpack:///./~/chai/lib/chai/utils/getPathValue.js","webpack:///./~/chai/lib/chai/utils/getPathInfo.js","webpack:///./~/chai/lib/chai/utils/hasProperty.js","webpack:///./~/chai/lib/chai/utils/addProperty.js","webpack:///./~/chai/lib/chai/utils/addMethod.js","webpack:///./~/chai/lib/chai/utils/overwriteProperty.js","webpack:///./~/chai/lib/chai/utils/overwriteMethod.js","webpack:///./~/chai/lib/chai/utils/addChainableMethod.js","webpack:///./~/chai/lib/chai/utils/overwriteChainableMethod.js","webpack:///./~/chai/lib/chai/assertion.js","webpack:///./~/chai/lib/chai/core/assertions.js","webpack:///./~/chai/lib/chai/interface/expect.js","webpack:///./~/chai/lib/chai/interface/should.js","webpack:///./~/chai/lib/chai/interface/assert.js","webpack:///./test/microdata.js","webpack:///./test/setup.js","webpack:///./test/version.js"],"names":["modules","__webpack_require__","moduleId","installedModules","exports","module","id","loaded","call","m","c","p","parseUri","str","o","options","parser","strictMode","exec","uri","i","key","q","name","replace","$0","$1","$2","strict","loose","session","sections","locationHashChanged","oldHash","newHash","asa","substr","storedHash","window","setInterval","location","hash","links","domains","domainsTracked","tracker","ev","href","target","destination","indexOf","authority","alreadyHasParams","encodeURIComponent","asaId","getSessionId","document","addEventListener","debug","user","randomness","SESSION_EXPIRE_TIMEOUT","SESSION_COOKIE_NAME","store","hasItem","item","sessionStorage","getItem","JSON","parse","t","Date","v","setItem","value","timeout","stringify","updateTimeout","sessionStore","ourSessionManager","extendSession","log","getDomainId","getUserId","getNumber","providedSessionManager","sessionManager","customSession","getSession","console","noLog","doLog","unshift","arguments","apply","me","setDebugMode","on","forceLog","cookies","USER_ID_COOKIE","generateUserId","host","Infinity","getUserHash","parseInt","split","docCookies","sKey","decodeURIComponent","cookie","RegExp","sValue","vEnd","sPath","sDomain","bSecure","test","sExpires","constructor","Number","String","toUTCString","removeItem","this","keys","aKeys","nLen","length","nIdx","d","h","a","charCodeAt","Math","round","random","microdata","autoTrack","event","transport","setMapper","e","jq","collectReferencedProperties","element","refString","attr","refs","ref","refItem","collectProperties","get","collectComplexProperty","type","properties","collectSimpleProperty","el","tag","prop","text","children","each","_","child","findTopLevelItems","undefined","items","tagName","processElement","itemScope","itemProp","push","theOneMapper","__items","extractFromHead","meta","noMapper","callbackWrapper","cb","extract","mapper","DOMElement","DOMElements","els","_els","prototype","_element","textContent","attrValue","getAttribute","$doms","n","$DOM","callback","index","query","Element","Error","wrapper","trim","elem","elems","getElementById","querySelectorAll","exception","info","DOMMeta","pageview","title","protocol","pathname","search","page","sectionentered","section","custom","gatherMetaInfo","eventBody","slice","gatherSystemInfo","uid","partnerId","partnerSId","partner_id","partner_sid","tenant_id","version","package","eventname","domElement","extra","override","features","major","minor","build","experiments","experimentsLive","join","defineExperiment","percentage","isExperiment","exp","clearExperiments","result","hasOwnProperty","MINI_AJAX","copyProps","o1","o2","batchIntervalHandler","r","ajax","pendingSubmission","done","postalAddress","post","packet","request","setRequestHeader","send","submitNow","Array","err","set","end","res","submitNow2","splice","submitEvent","batchEvent","batchOn","batchSize","min","batchOff","clearInterval","noop","isHost","obj","toString","isObject","Object","serialize","pairs","parseString","parts","pair","len","parseHeader","line","field","val","lines","fields","pop","toLowerCase","shift","params","reduce","Response","req","xhr","method","responseType","responseText","statusText","setStatusProperties","status","header","headers","getAllResponseHeaders","getResponseHeader","setHeaderProperties","body","parseBody","response","Request","url","self","Emitter","_query","_header","original","emit","new_err","root","getXHR","XMLHttpRequest","ActiveXObject","s","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","ct","fn","statusCode","statusType","ok","clientError","serverError","error","toError","accepted","noContent","badRequest","unauthorized","notAcceptable","notFound","forbidden","msg","use","ms","_timeout","clearTimeout","_timer","abort","aborted","unset","getHeader","accept","auth","pass","btoa","_formData","FormData","append","attach","file","filename","data","_data","_callback","crossDomainError","crossDomain","timeoutError","withCredentials","_withCredentials","onreadystatechange","readyState","timedout","handleProgress","total","percent","hasListeners","onprogress","upload","setTimeout","open","contentType","then","fulfill","reject","head","del","patch","put","mixin","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","args","listeners","arr","initial","idx","curr","XDomainRequest","onerror","onload","inbox","expect","core","describe","requests","lastRequest","keepSession","requestBody","adjustSystemInfo","beforeEach","sinon","useFakeXMLHttpRequest","onCreate","afterEach","restore","it","to","equal","expectation","og:description","og:url","og:title","og:site_name","og:type","keywords","eql","price","reviews","ratingValue","bestRating","ratingCount","batchingInbox","used","AssertionError","util","config","assertion","should","assert","exclude","excludeProps","forEach","excludes","message","_props","ssf","extend","props","showDiff","callee","captureStackTrace","stack","create","toJSON","expectTypes","getMessage","getActual","inspect","objDisplay","flag","transferFlags","getPathValue","getPathInfo","hasProperty","getName","addProperty","addMethod","overwriteProperty","overwriteMethod","addChainableMethod","overwriteChainableMethod","negate","expr","flags","__flags","getType","match","objectTypeRegexp","Promise","Library","tests","of","define","ReferenceError","map","sort","art","charAt","or","some","expected","actual","flagMsg","_obj","showHidden","depth","colors","ctx","seen","stylize","formatValue","recurseTimes","ret","primitive","formatPrimitive","isDOMElement","outerHTML","xmlVersion","xmlSerializer","XMLSerializer","serializeToString","ns","container","createElementNS","appendChild","cloneNode","innerHTML","visibleKeys","getEnumerableProperties","getProperties","isError","nameSuffix","isRegExp","isDate","formatError","base","array","braces","isArray","output","formatArray","formatProperty","reduceToSingleString","simple","l","__lookupGetter__","__lookupSetter__","numLinesEst","prev","cur","ar","objectToString","re","object","HTMLElement","nodeType","nodeName","func","property","getOwnPropertyNames","proto","getPrototypeOf","truncateThreshold","kstr","includeStack","includeAll","deepEqual","b","sameValue","dateEqual","regexpEqual","Buffer","isBuffer","bufferEqual","argumentsEqual","typeEqual","objectEqual","getTime","enumerable","iterableEqual","isValue","ka","kb","ex","natives","[object Array]","[object RegExp]","[object Function]","[object Arguments]","[object Date]","global","typedArraySupport","Bar","Uint8Array","foo","subarray","byteLength","kMaxLength","TYPED_ARRAY_SUPPORT","arg","parent","fromNumber","fromString","fromObject","that","allocate","checked","string","encoding","write","fromBuffer","fromArray","TypeError","ArrayBuffer","buffer","fromTypedArray","fromArrayBuffer","fromArrayLike","fromJsonObject","copy","_augment","__proto__","_isBuffer","fromPool","poolSize","rootParent","RangeError","SlowBuffer","subject","buf","loweredCase","utf8ToBytes","base64ToBytes","slowToString","start","hexSlice","utf8Slice","asciiSlice","binarySlice","base64Slice","utf16leSlice","hexWrite","offset","remaining","strLen","parsed","isNaN","utf8Write","blitBuffer","asciiWrite","asciiToBytes","binaryWrite","base64Write","ucs2Write","utf16leToBytes","base64","fromByteArray","firstByte","codePoint","bytesPerSequence","secondByte","thirdByte","fourthByte","tempCodePoint","decodeCodePointsArray","codePoints","MAX_ARGUMENTS_LENGTH","fromCharCode","out","toHex","bytes","checkOffset","ext","checkInt","max","objectWriteUInt16","littleEndian","j","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","ieee754","writeDouble","base64clean","stringtrim","INVALID_BASE64_RE","units","leadSurrogate","byteArray","hi","lo","toByteArray","src","dst","INSPECT_MAX_BYTES","compare","x","y","isEncoding","concat","list","pos","equals","byteOffset","arrayIndexOf","foundIndex","readUInt8","writeUInt8","isFinite","swap","_arr","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt16LE","readUInt16BE","readUInt32LE","readUInt32BE","readIntLE","pow","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","read","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","writeUIntBE","floor","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","limit","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","_set","fill","toArrayBuffer","BP","toLocaleString","lookup","decode","elt","code","PLUS","PLUS_URL_SAFE","SLASH","SLASH_URL_SAFE","NUMBER","UPPER","LOWER","b64ToByteArray","b64","L","tmp","placeHolders","Arr","uint8ToBase64","uint8","encode","num","tripletToBase64","temp","extraBytes","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","rt","abs","LN2","path","parsePath","mArr","parseFloat","_getPathValue","part","last","exists","literals","number","ot","getter","defineProperty","old_ssfi","configurable","_get","getOwnPropertyDescriptor","_super","_method","hasProtoSupport","excludeNames","Function","chainingBehavior","chainableBehavior","__methods","asserterNames","asserterName","pd","_chainingBehavior","_chai","Assertion","warn","negateMsg","_actual","chai","an","article","includeChainingBehavior","include","k","subset","checkArguments","assertEqual","assertEql","assertAbove","have","assertLeast","assertBelow","assertMost","assertInstanceOf","assertOwnProperty","assertOwnPropertyDescriptor","descriptor","actualDescriptor","assertLengthChain","assertLength","assertMatch","assertKeys","mixedArgsMsg","any","all","intersection","filter","every","assertThrows","errMsg","is","thrown","desiredError","thrownError","actuallyGot","expectedThrown","respondTo","itself","context","satisfy","matcher","closeTo","delta","isSubsetOf","superset","cmp","elem2","oneOf","be","assertChanges","assertIncreases","assertDecreases","chain","finish","range","isDeep","pathInfo","isExtensible","isSealed","isFrozen","fail","operator","loadShould","shouldGetter","Boolean","valueOf","shouldSetter","writable","val1","val2","Throw","errt","errs","exist","not","Should","express","errmsg","isOk","isNotOk","act","notEqual","strictEqual","notStrictEqual","notDeepEqual","isAbove","abv","above","isAtLeast","atlst","least","isBelow","blw","below","isAtMost","atmst","most","isTrue","isNotTrue","isFalse","isNotFalse","isNull","isNotNull","isNotNaN","isUndefined","isDefined","isFunction","isNotFunction","isNotObject","isNotArray","isString","isNotString","isNumber","isNotNumber","isBoolean","isNotBoolean","typeOf","notTypeOf","instanceOf","notInstanceOf","inc","notInclude","notMatch","notProperty","deepProperty","deep","notDeepProperty","propertyVal","propertyNotVal","deepPropertyVal","deepPropertyNotVal","lengthOf","assertErr","doesNotThrow","approximately","sameMembers","set1","set2","same","members","sameDeepMembers","includeMembers","inList","changes","change","doesNotChange","increases","increase","doesNotIncrease","decreases","decrease","doesNotDecrease","ifError","extensible","isNotExtensible","sealed","isNotSealed","frozen","isNotFrozen","alias","as","dasdf","asdfasdf","headerMeta"],"mappings":"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","file":"tests.js","sourcesContent":["/******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t__webpack_require__(22);\n\t__webpack_require__(63);\n\t__webpack_require__(64);\n\tmodule.exports = __webpack_require__(65);\n\n\n/***/ },\n/* 1 */,\n/* 2 */\n/***/ function(module, exports) {\n\n\t// parseUri 1.2.2\n\t// (c) Steven Levithan <stevenlevithan.com>\n\t// MIT License\n\t\n\tfunction parseUri (str) {\n\t\tvar\to   = parseUri.options,\n\t\t\tm   = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str),\n\t\t\turi = {},\n\t\t\ti   = 14;\n\t\n\t\twhile (i--) uri[o.key[i]] = m[i] || \"\";\n\t\n\t\turi[o.q.name] = {};\n\t\turi[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t\t\tif ($1) uri[o.q.name][$1] = $2;\n\t\t});\n\t\n\t\treturn uri;\n\t}\n\t\n\tparseUri.options = {\n\t\tstrictMode: false,\n\t\tkey: [\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],\n\t\tq:   {\n\t\t\tname:   \"queryKey\",\n\t\t\tparser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t\t},\n\t\tparser: {\n\t\t\tstrict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t\t\tloose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t\t}\n\t};\n\t\n\tmodule.exports = parseUri;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar session = __webpack_require__(4);\n\tvar parseUri = __webpack_require__(2);\n\tmodule.exports = {\n\t\tsections: function () {\n\t\t\tvar locationHashChanged = function (oldHash, newHash) {\n\t\t\t\tasa('sectionentered', newHash.substr(1));\n\t\t\t};\n\t\t\tvar storedHash = '';\n\t\t\twindow.setInterval(function () {\n\t\t\t\tif (window.location.hash != storedHash) {\n\t\t\t\t\tvar newHash = window.location.hash;\n\t\t\t\t\tlocationHashChanged(storedHash, newHash);\n\t\t\t\t\tstoredHash = newHash;\n\t\t\t\t}\n\t\t\t}, 100);\n\t\t},\n\t\n\t\tlinks: function (domains) {\n\t\t\tvar domainsTracked = domains;\n\t\t\tvar tracker = function (ev) {\n\t\t\t\tvar href = ev.target.href;\n\t\t\t\tif (href) {\n\t\t\t\t\tvar destination = parseUri(href);\n\t\t\t\t\tif (domainsTracked.indexOf(destination.authority) > -1) {\n\t\t\t\t\t\tvar alreadyHasParams = ev.target.href.indexOf('?') !== -1;\n\t\t\t\t\t\thref = href + (alreadyHasParams ? '&' : '?') + '__asa_partner_id=' + encodeURIComponent(window.asaId) + '&__asa_partner_sid=' + encodeURIComponent(session.getSessionId());\n\t\t\t\t\t\tev.target.href = href;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\tdocument.addEventListener('mousedown', tracker);\n\t\t\tdocument.addEventListener('keyup', tracker);\n\t\t\tdocument.addEventListener('touchstart', tracker);\n\t\t}\n\t};\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar debug = __webpack_require__(5);\n\tvar user = __webpack_require__(6);\n\tvar randomness = __webpack_require__(9);\n\tvar hash = __webpack_require__(8);\n\t\n\t\n\tvar SESSION_EXPIRE_TIMEOUT = 30 * 60;\n\t// SESSION_EXPIRE_TIMEOUT = 30 * 60;\n\tvar SESSION_COOKIE_NAME = '__asa_session';\n\t\n\tvar store = {\n\t\thasItem: function (name) {\n\t\t\tvar item = window.sessionStorage.getItem(name);\n\t\t\treturn item && JSON.parse(item).t > (1 * new Date());\n\t\t},\n\t\tgetItem: function (name) {\n\t\t\treturn JSON.parse(window.sessionStorage.getItem(name)).v;\n\t\t},\n\t\tsetItem: function (name, value, timeout) {\n\t\t\twindow.sessionStorage.setItem(name, JSON.stringify({\n\t\t\t\tv: value,\n\t\t\t\tt: (1 * new Date()) + (1000 * timeout)\n\t\t\t}));\n\t\t},\n\t\tupdateTimeout: function (name, timeout) {\n\t\t\tvar item = JSON.parse(window.sessionStorage.getItem(name));\n\t\t\tstore.setItem(name, item.v, timeout);\n\t\t}\n\t};\n\t\n\tvar sessionStore = store;\n\tvar ourSessionManager = {\n\t\textendSession: function () {\n\t\t\tif (!sessionStore.hasItem(SESSION_COOKIE_NAME)) {\n\t\t\t\tdebug.log('starting session');\n\t\t\t\tsessionStore.setItem(SESSION_COOKIE_NAME, user.getDomainId() + '.' + hash(user.getUserId() + '.' + randomness.getNumber()), SESSION_EXPIRE_TIMEOUT);\n\t\t\t} else {\n\t\t\t\tsessionStore.updateTimeout(SESSION_COOKIE_NAME, SESSION_EXPIRE_TIMEOUT);\n\t\t\t}\n\t\t},\n\t\n\t\tgetSessionId: function () {\n\t\t\treturn sessionStore.getItem(SESSION_COOKIE_NAME);\n\t\t}\n\t    \n\t};\n\tvar providedSessionManager = function(getSessionId, extendSession){\n\t    return {\n\t        extendSession: function () {\n\t            if (extendSession) extendSession();\n\t        },\n\t    \n\t        getSessionId: function () {\n\t            return getSessionId();\n\t        }    \n\t    };\n\t};\n\tvar sessionManager = ourSessionManager;\n\tmodule.exports = {\n\t\textendSession: function () {\n\t        sessionManager.extendSession();\n\t\t},\n\t\n\t\tgetSessionId: function () {\n\t\t\treturn sessionManager.getSessionId();\n\t\t},\n\t    customSession : function(getSession, extendSession){\n\t        sessionManager = providedSessionManager(getSession, extendSession);\n\t    }\n\t};\n\n/***/ },\n/* 5 */\n/***/ function(module, exports) {\n\n\t// old ie\n\tif (typeof console === 'undefined') {\n\t\twindow.console = {};\n\t}\n\tif (typeof console.log === 'undefined'){\n\t\twindow.console.log = function(){};\n\t}\n\t\n\tvar noLog = function noLog() { };\n\tvar doLog = function doLog() {\n\t\t[].unshift.call(arguments, 'asa.js:');\n\t\tconsole.log.apply(console, arguments);\n\t};\n\tvar me = module.exports = {\n\t\tlog: noLog,\n\t\tsetDebugMode: function (on) {\n\t\t\tme.log = on ? doLog : noLog;\n\t\t},\n\t\tforceLog:doLog\n\t};\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cookies = __webpack_require__(7);\n\tvar hash = __webpack_require__(8);\n\tvar randomness = __webpack_require__(9);\n\tvar USER_ID_COOKIE = '__as_user';\n\tvar generateUserId = function () {\n\t\treturn hash(window.location.host) + '.' + hash('' + randomness.getNumber());\n\t};\n\tvar getUserId = function () {\n\t\tif (!cookies.hasItem(USER_ID_COOKIE)) {\n\t\t\tcookies.setItem(USER_ID_COOKIE, generateUserId(), Infinity, '/');\n\t\t}\n\t\n\t\treturn cookies.getItem(USER_ID_COOKIE);\n\t};\n\t\n\tmodule.exports = {\n\t\tgetUserId: getUserId,\n\t\tgetDomainId: function () {\n\t\t\treturn hash(window.location.host);\n\t\t},\n\t\tgetUserHash: function () {\n\t\t\treturn parseInt(getUserId().split('.')[1], 10);\n\t\t}\n\t};\n\n/***/ },\n/* 7 */\n/***/ function(module, exports) {\n\n\t/*\\\n\t|*|\n\t|*|  :: cookies.js ::\n\t|*|\n\t|*|  A complete cookies reader/writer framework with full unicode support.\n\t|*|\n\t|*|  Revision #1 - September 4, 2014\n\t|*|\n\t|*|  https://developer.mozilla.org/en-US/docs/Web/API/document.cookie\n\t|*|  https://developer.mozilla.org/User:fusionchess\n\t|*|\n\t|*|  This framework is released under the GNU Public License, version 3 or later.\n\t|*|  http://www.gnu.org/licenses/gpl-3.0-standalone.html\n\t|*|\n\t|*|  Syntaxes:\n\t|*|\n\t|*|  * docCookies.setItem(name, value[, end[, path[, domain[, secure]]]])\n\t|*|  * docCookies.getItem(name)\n\t|*|  * docCookies.removeItem(name[, path[, domain]])\n\t|*|  * docCookies.hasItem(name)\n\t|*|  * docCookies.keys()\n\t|*|\n\t\\*/\n\t\n\tvar docCookies = {\n\t  getItem: function (sKey) {\n\t    if (!sKey) { return null; }\n\t    return decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null;\n\t  },\n\t  setItem: function (sKey, sValue, vEnd, sPath, sDomain, bSecure) {\n\t    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) { return false; }\n\t    var sExpires = \"\";\n\t    if (vEnd) {\n\t      switch (vEnd.constructor) {\n\t        case Number:\n\t          sExpires = vEnd === Infinity ? \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\" : \"; max-age=\" + vEnd;\n\t          break;\n\t        case String:\n\t          sExpires = \"; expires=\" + vEnd;\n\t          break;\n\t        case Date:\n\t          sExpires = \"; expires=\" + vEnd.toUTCString();\n\t          break;\n\t      }\n\t    }\n\t    document.cookie = encodeURIComponent(sKey) + \"=\" + encodeURIComponent(sValue) + sExpires + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\") + (bSecure ? \"; secure\" : \"\");\n\t    return true;\n\t  },\n\t  removeItem: function (sKey, sPath, sDomain) {\n\t    if (!this.hasItem(sKey)) { return false; }\n\t    document.cookie = encodeURIComponent(sKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\");\n\t    return true;\n\t  },\n\t  hasItem: function (sKey) {\n\t    if (!sKey) { return false; }\n\t    return (new RegExp(\"(?:^|;\\\\s*)\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\n\t  },\n\t  keys: function () {\n\t    var aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\n\t    for (var nLen = aKeys.length, nIdx = 0; nIdx < nLen; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }\n\t    return aKeys;\n\t  }\n\t};\n\t\n\tmodule.exports = docCookies;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports) {\n\n\t// this hashing algorithm is as found in some version of Google Analytics\n\t/* jshint ignore:start */\n\tmodule.exports = function hash(d) {\n\t    var a = 1, c = 0, h, o;\n\t    if (d) {\n\t        a = 0;\n\t        for (h = d[\"length\"] - 1; h >= 0; h--) {\n\t            o = d.charCodeAt(h);\n\t            a = (a << 6 & 268435455) + o + (o << 14);\n\t            c = a & 266338304;\n\t            a = c != 0 ? a ^ c >> 21 : a\n\t        }\n\t    }\n\t    return a\n\t};\n\t/* jshint ignore:end */\n\n\n/***/ },\n/* 9 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\tgetNumber : function(){\n\t\t\treturn Math.round(Math.random() * new Date());\n\t\t}\n\t};\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar session = __webpack_require__(4);\n\tvar microdata = __webpack_require__(11);\n\tvar autoTrack = __webpack_require__(3);\n\tvar debug = __webpack_require__(5);\n\tvar event = __webpack_require__(13);\n\t\n\tmodule.exports = function inbox(transport) {\n\t\treturn function () {\n\t\t\ttry {\n\t\t\t\tif (arguments[0] == 'session') {\n\t\t\t\t\tsession.customSession(arguments[1], arguments[2])\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (arguments[0] == 'connectedPartners') {\n\t\t\t\t\tautoTrack.links(arguments[1]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (arguments[0] == 'tenantId') {\n\t\t\t\t\twindow.asaId = arguments[1];\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tif (arguments[0] == 'debug') {\n\t\t\t\t\tdebug.setDebugMode(arguments[1]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tif (arguments[0] == 'transformer') {\n\t\t\t\t\tmicrodata.setMapper(arguments[1]);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\n\t\t\t\tsession.extendSession();\n\t\t\t\t\n\t\t\t\ttransport(event.package.apply(event, arguments));\n\t\t\t} catch (e) {\n\t\t\t\tdebug.forceLog('inbox exception:', e);\n\t\t\t}\n\t\t};\n\t};\n\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// var jq = $;\n\tvar jq = __webpack_require__(12);\n\tvar debug = __webpack_require__(5);\n\t\n\tvar collectReferencedProperties = function (element, item) {\n\t\tvar refString = element.attr('itemref');\n\t\tif (typeof refString !== 'undefined') {\n\t\t\tvar refs = refString.split(' ');\n\t\t\tfor (var i = 0; i < refs.length; i++) {\n\t\t\t\tvar ref = refs[i];\n\t\t\t\tvar refItem = jq('#' + ref);\n\t\t\t\tif (refItem.length === 1){\n\t\t\t\t\tcollectProperties(refItem.get(0), item);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tdebug.log('missing metadata element', ref);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t};\n\t\n\tvar collectComplexProperty = function (element) {\n\t\tvar item = {\n\t\t\t\"type\": element.attr(\"itemtype\"),\n\t\t\t\"properties\": {}\n\t\t};\n\t\tcollectReferencedProperties(element, item);\n\t\tcollectProperties(element, item);\n\t\treturn item;\n\t};\n\t\n\tvar collectSimpleProperty = function (el) {\n\t\tvar tag = el.prop('tagName');\n\t\tswitch (tag) {\n\t\t\tcase 'TIME': return el.attr('datetime');\n\t\t\tcase 'A':\n\t\t\tcase 'LINK':\n\t\t\t\treturn el.attr('href');\n\t\t\tdefault:\n\t\t\t\treturn el.prop(\"content\") || el.text() || el.attr(\"src\");\n\t\t}\n\t\n\t};\n\t\n\tvar collectProperties = function (el, item) {\n\t\tel.children().each(function (_, c) {\n\t\t\tvar child = jq(c);\n\t\t\tvar prop = child.attr('itemprop');\n\t\t\tif (typeof prop === 'string') {\n\t\t\t\tif (typeof child.attr('itemscope') !== 'undefined') {\n\t\t\t\t\titem.properties[prop] = collectComplexProperty(child);\n\t\t\t\t} else {\n\t\t\t\t\titem.properties[prop] = collectSimpleProperty(child);\n\t\t\t\t}\n\t\t\t}\n\t\n\t\t\tif (typeof child.attr('itemscope') == 'undefined') {\n\t\t\t\tcollectProperties(child, item);\n\t\t\t}\n\t\t});\n\t};\n\t\n\tvar findTopLevelItems = function (el) {\n\t\tif (!el) return undefined; \n\t\tvar items = [];\n\t\tif (typeof el === 'string') { el = jq('#'+el).get(0); }\n\t\telse if (typeof el === 'object' && typeof el.tagName === 'string') { el = jq(el); }\n\t\telse return {};\n\t\n\t\tvar processElement = function (e) {\n\t\t\tvar el = jq(e);\n\t\t\tvar itemScope = el.attr('itemscope');\n\t\t\tvar itemProp = el.attr('itemprop');\n\t\t\tif (typeof itemScope !== 'undefined') {\n\t\t\t\tif (typeof itemProp !== 'undefined') {\n\t\t\t\t\treturn;\n\t\t\t\t} else {\n\t\t\t\t\titems.push(theOneMapper(collectComplexProperty(el), el));\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tel.children().each(function (_, c) {\n\t\t\t\t\tprocessElement(c);\n\t\t\t\t});\n\t\t\t}\n\t\t};\n\t\n\t\tprocessElement(el);\n\t\n\t\tif (items.length === 0) return {};\n\t\tif (items.length === 1) return items[0];\n\t\treturn {'__items' : items};\n\t};\n\t\n\tvar extractFromHead = function () {\n\t\tvar meta = {};\n\t\tjq('head > meta[property^=\"og:\"]').each(function () { var m = jq(this); meta[m.attr('property')] = m.attr('content'); });\n\t\tjq('head > meta[name=\"keywords\"]').each(function () { var m = jq(this); meta[\"keywords\"] = m.attr('content'); });\n\t\treturn theOneMapper(meta);\n\t};\n\tvar noMapper = function(m) {return m;};\n\tvar theOneMapper = noMapper;\n\tvar callbackWrapper = function callbackWrapper(cb){\n\t\treturn function(meta, el){\n\t\t\ttry{\n\t\t\t\treturn cb(meta, el);\n\t\t\t} catch(e){\n\t\t\t\treturn meta;\n\t\t\t}\n\t\t}\n\t}\n\tmodule.exports = {\n\t\textract: findTopLevelItems,\n\t\textractFromHead: extractFromHead,\n\t\tsetMapper : function(mapper){\n\t\t\ttheOneMapper = callbackWrapper(mapper);\n\t\t},\n\t\tnoMapper : noMapper\n\t};\n\n/***/ },\n/* 12 */\n/***/ function(module, exports) {\n\n\t\n\t// Prototype of our jQuery killer ;)\n\tfunction DOMElement() {\n\t}\n\t\n\tDOMElement.prototype.text = function text() {\n\t    return this._element.textContent;\n\t};\n\t\n\tDOMElement.prototype.attr = function attr(name) {\n\t    // emulating the jQuery behaviour\n\t    var attrValue = this._element.getAttribute('' + name);\n\t    if (attrValue === null) return undefined;\n\t    else\n\t        return attrValue;\n\t};\n\t\n\tDOMElement.prototype.prop = function prop(name) {\n\t    return this._element[name];\n\t};\n\t\n\tDOMElement.prototype.children = function children() {\n\t\n\t    var c = this._element.children,\n\t        $doms = [],\n\t        i, n = c.length;\n\t\n\t    for (i = 0; i < n; i++)\n\t        $doms[i] = $DOM(c[i]);\n\t\n\t    return new DOMElements($doms);\n\t};\n\t\n\tfunction DOMElements(els) {\n\t    this._els = els;\n\t    this.length = els.length;\n\t}\n\t\n\tDOMElements.prototype.each = function each(callback) {\n\t    for (var i = 0; i < this._els.length; i++) {\n\t        var element = this._els[i];\n\t        callback.call(element, i, element);\n\t    }\n\t};\n\t\n\tDOMElements.prototype.get = function get(index) {\n\t    return this._els[index];\n\t};\n\t\n\t// query parameter is either an element id or a css-style selector\n\tvar $DOM = module.exports = function $DOM(query) {\n\t\n\t    if (!query || !(typeof query === 'string' || query instanceof Element || query instanceof DOMElement || query instanceof DOMElements)) {\n\t        throw new Error('Invalid argument provided:' + query);\n\t    }\n\t\n\t    if (query instanceof DOMElement || query instanceof DOMElements) return query;\n\t\n\t    if (query instanceof Element) {\n\t        var wrapper = new DOMElement();\n\t        wrapper._element = query;\n\t        return wrapper;\n\t    }\n\t\n\t    query = ('' + query).trim();\n\t\n\t    var elem, elems = [], i, n;\n\t\n\t    try {\n\t        if (query[0] === '#') {         \n\t            elem = document.getElementById(query.substr(1));\n\t            if (elem) elem = [elem]; else elem = [];\n\t        } else {\n\t            elem = document.querySelectorAll(query);\n\t        }\n\t        n = elem.length;\n\t\n\t        for (i = 0; i < n; i++)\n\t            elems.push($DOM(elem[i]));\n\t\n\t        return new DOMElements(elems);\n\t    } catch (exception) {\n\t        throw new Error('Invalid selector: ' + query);\n\t    }\n\t};\n\t\n\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar microdata = __webpack_require__(11);\n\tvar session = __webpack_require__(4);\n\tvar info = __webpack_require__(14);\n\tvar user = __webpack_require__(6);\n\tvar _ = __webpack_require__(16);\n\t\n\tvar DOMMeta = function (o) {\n\t\tif (o.length < 2) return false;\n\t\treturn (typeof o[1] === 'object' && typeof o[1].tagName === 'undefined') ? o[1] : false;\n\t};\n\t\n\tvar pageview = function () {\n\t\tvar title = document.title;\n\t\tvar location = window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.hash + window.location.search;\n\t\tvar page = window.location.pathname + window.location.search;\n\t\treturn { type: 'pageview', page: page, location: location, title: title };\n\t};\n\t\n\tvar sectionentered = function (section, page) {\n\t\tpage = page || window.location.pathname + window.location.hash + window.location.search;\n\t\treturn { type: 'section_entered', page: page, section: section };\n\t};\n\t\n\tvar custom = function (event) {\n\t\treturn { type: 'custom', event: event };\n\t};\n\t\n\tvar gatherMetaInfo = function gatherMetaInfo(a) {\n\t\tvar event = a[0];\n\t\tvar eventBody = {};\n\t\tif (event) {\n\t\t\tswitch (event.trim()) {\n\t\t\t\tcase 'pageview':\n\t\t\t\t\teventBody = pageview.apply(null, [].slice.call(a, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tcase 'sectionentered':\n\t\t\t\t\teventBody = sectionentered.apply(null, [].slice.call(a, 1));\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\teventBody = custom.apply(null, a);\n\t\t\t}\n\t\t\treturn eventBody;\n\t\t}\n\t\tthrow new Error('Upsi! There is something wrong with this event:', a);\n\t};\n\t\n\tvar gatherSystemInfo = function (e) {\n\t\te.t = 1 * new Date();\n\t\te.session = session.getSessionId();\n\t\te.uid = user.getUserId();\n\t\tvar partnerId = window.sessionStorage.getItem('__as.partner_id');\n\t\tvar partnerSId = window.sessionStorage.getItem('__as.partner_sid');\n\t\tif (partnerId) {\n\t\t\te.partner_id = partnerId;\n\t\t}\n\t\tif (partnerSId) {\n\t\t\te.partner_sid = partnerSId;\n\t\t}\n\t\te.tenant_id = window.asaId;\n\t\te.v = info.version();\n\t\treturn e;\n\t};\n\t\n\tmodule.exports = {\n\t\tpackage: function (eventname, domElement, extra) {\n\t\n\t\t\tvar event = gatherMetaInfo(arguments);\n\t\t\tevent = gatherSystemInfo(event);\n\t\t\tif (arguments[0] == 'pageview') {\n\t\t\t\tevent.meta = microdata.extractFromHead();\n\t\t\t\tif (typeof arguments[1] === 'object') {\n\t\t\t\t\tevent.meta = _.override(event.meta, arguments[1]);\n\t\t\t\t}\n\t\t\t} else\n\t\t\t\tif (arguments[0] == 'itemview') {\n\t\t\t\t\tevent.meta = DOMMeta(arguments) || microdata.extract(arguments[1]);\n\t\t\t\t} else\n\t\t\t\t\tif (arguments[0] == 'sectionentered') {\n\t\t\t\t\t\tevent.meta = DOMMeta(arguments) || microdata.extract(arguments[1]);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tvar meta = undefined;\n\t\t\t\t\t\tif (typeof domElement === 'string' || (typeof domElement === 'object' && typeof domElement.tagName !== 'undefined')) { \n\t\t\t\t\t\t\tmeta = microdata.extract(domElement); \n\t\t\t\t\t\t} else\n\t\t\t\t\t\tif (typeof extra === 'undefined' && typeof domElement === 'object') { \n\t\t\t\t\t\t\textra = domElement; \n\t\t\t\t\t\t\tdomElement = null; \n\t\t\t\t\t\t}\n\t\t\t\t\t\tmeta = _.override(meta, extra);\n\t\t\t\t\t\tif (meta !== undefined) event.meta = meta;\n\t\t\t\t\t}\n\t\t\treturn event;\n\t\t}\n\t};\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar features = __webpack_require__(15);\n\tvar major = 1,\n\t\tminor = 1,\n\t\tbuild = 8;\n\tmodule.exports = {\n\t\tmajor : major,\n\t\tminor: minor,\n\t\tbuild: build,\n\t\tversion : function(){\n\t\t\tvar experiments = '-'+features.experimentsLive();\n\t\t\tif (experiments === '-') experiments = '';\n\t\t\treturn [major, minor, build].join('.') + experiments;}\n\t};\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar user = __webpack_require__(6);\n\tvar experiments = {};\n\tmodule.exports = {\n\t\tdefineExperiment : function(name, percentage){\n\t\t\texperiments[name] = (user.getUserHash() % 100) <= percentage;\n\t\t},\n\t\tisExperiment : function(name){\n\t\t\tvar exp = experiments[name];\n\t\t\treturn !!exp;\n\t\t},\n\t\tclearExperiments : function(){\n\t\t\texperiments = {};\t\n\t\t},\n\t\texperimentsLive : function(){\n\t\t\tvar result = [];\n\t\t\tfor (var exp in experiments) {\n\t\t\t\tif (experiments.hasOwnProperty(exp)) {\n\t\t\t\t\tif (experiments[exp]) result.push(exp);\t\t\t\t\n\t\t\t\t}\n\t\t\t}\n\t\t\treturn result.join('.');\n\t\t},\n\t\tMINI_AJAX : 'miniAjax'\t\n\t};\n\n/***/ },\n/* 16 */\n/***/ function(module, exports) {\n\n\tvar copyProps = function copyProps(o1, o2){\n\t\tfor (var key in o2) {\n\t\t\tif (o2.hasOwnProperty(key)) {\n\t\t\t\to1[key] = o2[key];\n\t\t\t}\n\t\t}\n\t}\t\n\tmodule.exports = {\n\t\toverride: function (o1, o2) {\n\t\t\tif (!o1 && !o2) return undefined;\n\t\t\tif (!o1 && o2) return o2;\n\t\t\tif (o1 && !o2) return o1;\n\t\t\tvar result = {};\n\t\t\tcopyProps(result, o1);\n\t\t\tcopyProps(result, o2);\n\t\t\treturn result;\n\t\t}\n\t}\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar r = __webpack_require__(18);\n\tvar debug = __webpack_require__(5);\n\tvar ajax = __webpack_require__(21);\n\tvar features = __webpack_require__(15);\n\t\n\tvar pendingSubmission = [], done = true;\n\tvar batchIntervalHandler;\n\t\n\tvar postalAddress = '//inbox.activitystream.com/asa';\n\t// postalAddress = '//localhost:8070/asa';\n\t\n\tvar post = function (packet, callback) {\n\t    var request = ajax.post(postalAddress, 'POST', callback);\n\t\trequest.setRequestHeader('Content-Type', 'text/plain; charset=UTF-8');\n\t\trequest.send(JSON.stringify(packet));\n\t};\n\tvar submitNow = function (ev) {\n\t\tif (!(ev instanceof Array)) ev = [ev];\n\t\tvar packet = {\n\t\t\tev: ev,\n\t\t\tt: 1 * new Date()\n\t\t};\n\t\n\t\tdebug.log('submitting event: ', ev);\n\t\tif (features.isExperiment(features.MINI_AJAX)) {\n\t\t\tpost(packet, function (err, _) {\n\t\t\t\tif (err) {\n\t\t\t\t\tdebug.log('error on server', err);\n\t\t\t\t} else {\n\t\t\t\t\tdebug.log('server got it');\n\t\t\t\t}\n\t\t\t});\n\t\n\t\t} else {\n\t\t\tr\n\t\t\t\t.post(postalAddress)\n\t\t\t\t.set('Content-Type', 'application/json')\n\t\t\t\t.send(packet)\n\t\t\t\t.end(function (err, res) {\n\t\t\t\t\tif (err) {\n\t\t\t\t\t\tdebug.log('error on server', err);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdebug.log('server got it');\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t};\n\tvar submitNow2 = function (ev) {\n\t\tdone = false;\n\t\tif (!(ev instanceof Array)) ev = [ev];\n\t\tvar packet = {\n\t\t\tev: ev,\n\t\t\tt: 1 * new Date()\n\t\t};\n\t\tdebug.log('submitting event: ', ev);\n\t\tr\n\t\t\t.post(postalAddress)\n\t\t\t.set('Content-Type', 'application/json')\n\t\t\t.send(packet)\n\t\t\t.end(function (err, res) {\n\t\t\t\tif (err) {\n\t\t\t\t\tdebug.log('error on server', err);\n\t\t\t\t} else {\n\t\t\t\t\tpendingSubmission.splice(0, ev.length);\n\t\t\t\t\tdebug.log('server got it');\n\t\t\t\t}\n\t\t\t\tdone = true;\n\t\t\t});\n\t};\n\tmodule.exports = {\n\t\tsubmitEvent: submitNow,\n\t\tbatchEvent: function (e) {\n\t\t\tpendingSubmission.push(e);\n\t\t},\n\t\tbatchOn: function () {\n\t\t\tbatchIntervalHandler = setInterval(function batchProcessor() {\n\t\t\t\ttry {\n\t\t\t\t\tif (pendingSubmission.length > 0 && done) {\n\t\t\t\t\t\tvar batchSize = Math.min(pendingSubmission.length, 10);\n\t\t\t\t\t\tsubmitNow2(pendingSubmission.slice(0, batchSize));\n\t\t\t\t\t}\n\t\t\t\t} catch (e) {\n\t\t\t\t\tdebug.log('exception submitting', e);\n\t\t\t\t}\n\t\t\t}, 400);\n\t\t},\n\t\tbatchOff: function () {\n\t\t\tif (!batchIntervalHandler) {\n\t\t\t\tdebug.log('cannot batch off, it is not on');\n\t\t\t} else {\n\t\t\t\tclearInterval(batchIntervalHandler);\n\t\t\t}\n\t\t}\n\t};\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/**\n\t * Module dependencies.\n\t */\n\t\n\tvar Emitter = __webpack_require__(19);\n\tvar reduce = __webpack_require__(20);\n\t\n\t/**\n\t * Root reference for iframes.\n\t */\n\t\n\tvar root;\n\tif (typeof window !== 'undefined') { // Browser window\n\t  root = window;\n\t} else if (typeof self !== 'undefined') { // Web Worker\n\t  root = self;\n\t} else { // Other environments\n\t  root = this;\n\t}\n\t\n\t/**\n\t * Noop.\n\t */\n\t\n\tfunction noop(){};\n\t\n\t/**\n\t * Check if `obj` is a host object,\n\t * we don't want to serialize these :)\n\t *\n\t * TODO: future proof, move to compoent land\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isHost(obj) {\n\t  var str = {}.toString.call(obj);\n\t\n\t  switch (str) {\n\t    case '[object File]':\n\t    case '[object Blob]':\n\t    case '[object FormData]':\n\t      return true;\n\t    default:\n\t      return false;\n\t  }\n\t}\n\t\n\t/**\n\t * Determine XHR.\n\t */\n\t\n\trequest.getXHR = function () {\n\t  if (root.XMLHttpRequest\n\t      && (!root.location || 'file:' != root.location.protocol\n\t          || !root.ActiveXObject)) {\n\t    return new XMLHttpRequest;\n\t  } else {\n\t    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n\t    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n\t  }\n\t  return false;\n\t};\n\t\n\t/**\n\t * Removes leading and trailing whitespace, added to support IE.\n\t *\n\t * @param {String} s\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tvar trim = ''.trim\n\t  ? function(s) { return s.trim(); }\n\t  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\t\n\t/**\n\t * Check if `obj` is an object.\n\t *\n\t * @param {Object} obj\n\t * @return {Boolean}\n\t * @api private\n\t */\n\t\n\tfunction isObject(obj) {\n\t  return obj === Object(obj);\n\t}\n\t\n\t/**\n\t * Serialize the given `obj`.\n\t *\n\t * @param {Object} obj\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction serialize(obj) {\n\t  if (!isObject(obj)) return obj;\n\t  var pairs = [];\n\t  for (var key in obj) {\n\t    if (null != obj[key]) {\n\t      pairs.push(encodeURIComponent(key)\n\t        + '=' + encodeURIComponent(obj[key]));\n\t    }\n\t  }\n\t  return pairs.join('&');\n\t}\n\t\n\t/**\n\t * Expose serialization method.\n\t */\n\t\n\t request.serializeObject = serialize;\n\t\n\t /**\n\t  * Parse the given x-www-form-urlencoded `str`.\n\t  *\n\t  * @param {String} str\n\t  * @return {Object}\n\t  * @api private\n\t  */\n\t\n\tfunction parseString(str) {\n\t  var obj = {};\n\t  var pairs = str.split('&');\n\t  var parts;\n\t  var pair;\n\t\n\t  for (var i = 0, len = pairs.length; i < len; ++i) {\n\t    pair = pairs[i];\n\t    parts = pair.split('=');\n\t    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n\t  }\n\t\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Expose parser.\n\t */\n\t\n\trequest.parseString = parseString;\n\t\n\t/**\n\t * Default MIME type map.\n\t *\n\t *     superagent.types.xml = 'application/xml';\n\t *\n\t */\n\t\n\trequest.types = {\n\t  html: 'text/html',\n\t  json: 'application/json',\n\t  xml: 'application/xml',\n\t  urlencoded: 'application/x-www-form-urlencoded',\n\t  'form': 'application/x-www-form-urlencoded',\n\t  'form-data': 'application/x-www-form-urlencoded'\n\t};\n\t\n\t/**\n\t * Default serialization map.\n\t *\n\t *     superagent.serialize['application/xml'] = function(obj){\n\t *       return 'generated xml here';\n\t *     };\n\t *\n\t */\n\t\n\t request.serialize = {\n\t   'application/x-www-form-urlencoded': serialize,\n\t   'application/json': JSON.stringify\n\t };\n\t\n\t /**\n\t  * Default parsers.\n\t  *\n\t  *     superagent.parse['application/xml'] = function(str){\n\t  *       return { object parsed from str };\n\t  *     };\n\t  *\n\t  */\n\t\n\trequest.parse = {\n\t  'application/x-www-form-urlencoded': parseString,\n\t  'application/json': JSON.parse\n\t};\n\t\n\t/**\n\t * Parse the given header `str` into\n\t * an object containing the mapped fields.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction parseHeader(str) {\n\t  var lines = str.split(/\\r?\\n/);\n\t  var fields = {};\n\t  var index;\n\t  var line;\n\t  var field;\n\t  var val;\n\t\n\t  lines.pop(); // trailing CRLF\n\t\n\t  for (var i = 0, len = lines.length; i < len; ++i) {\n\t    line = lines[i];\n\t    index = line.indexOf(':');\n\t    field = line.slice(0, index).toLowerCase();\n\t    val = trim(line.slice(index + 1));\n\t    fields[field] = val;\n\t  }\n\t\n\t  return fields;\n\t}\n\t\n\t/**\n\t * Return the mime type for the given `str`.\n\t *\n\t * @param {String} str\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tfunction type(str){\n\t  return str.split(/ *; */).shift();\n\t};\n\t\n\t/**\n\t * Return header field parameters.\n\t *\n\t * @param {String} str\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction params(str){\n\t  return reduce(str.split(/ *; */), function(obj, str){\n\t    var parts = str.split(/ *= */)\n\t      , key = parts.shift()\n\t      , val = parts.shift();\n\t\n\t    if (key && val) obj[key] = val;\n\t    return obj;\n\t  }, {});\n\t};\n\t\n\t/**\n\t * Initialize a new `Response` with the given `xhr`.\n\t *\n\t *  - set flags (.ok, .error, etc)\n\t *  - parse header\n\t *\n\t * Examples:\n\t *\n\t *  Aliasing `superagent` as `request` is nice:\n\t *\n\t *      request = superagent;\n\t *\n\t *  We can use the promise-like API, or pass callbacks:\n\t *\n\t *      request.get('/').end(function(res){});\n\t *      request.get('/', function(res){});\n\t *\n\t *  Sending data can be chained:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t *  Or passed to `.send()`:\n\t *\n\t *      request\n\t *        .post('/user')\n\t *        .send({ name: 'tj' }, function(res){});\n\t *\n\t *  Or passed to `.post()`:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' })\n\t *        .end(function(res){});\n\t *\n\t * Or further reduced to a single call for simple cases:\n\t *\n\t *      request\n\t *        .post('/user', { name: 'tj' }, function(res){});\n\t *\n\t * @param {XMLHTTPRequest} xhr\n\t * @param {Object} options\n\t * @api private\n\t */\n\t\n\tfunction Response(req, options) {\n\t  options = options || {};\n\t  this.req = req;\n\t  this.xhr = this.req.xhr;\n\t  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n\t  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n\t     ? this.xhr.responseText\n\t     : null;\n\t  this.statusText = this.req.xhr.statusText;\n\t  this.setStatusProperties(this.xhr.status);\n\t  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n\t  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n\t  // getResponseHeader still works. so we get content-type even if getting\n\t  // other headers fails.\n\t  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n\t  this.setHeaderProperties(this.header);\n\t  this.body = this.req.method != 'HEAD'\n\t    ? this.parseBody(this.text ? this.text : this.xhr.response)\n\t    : null;\n\t}\n\t\n\t/**\n\t * Get case-insensitive `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.get = function(field){\n\t  return this.header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set header related properties:\n\t *\n\t *   - `.type` the content type without params\n\t *\n\t * A response of \"Content-Type: text/plain; charset=utf-8\"\n\t * will provide you with a `.type` of \"text/plain\".\n\t *\n\t * @param {Object} header\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setHeaderProperties = function(header){\n\t  // content-type\n\t  var ct = this.header['content-type'] || '';\n\t  this.type = type(ct);\n\t\n\t  // params\n\t  var obj = params(ct);\n\t  for (var key in obj) this[key] = obj[key];\n\t};\n\t\n\t/**\n\t * Force given parser\n\t * \n\t * Sets the body parser no matter type.\n\t * \n\t * @param {Function}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.parse = function(fn){\n\t  this.parser = fn;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Parse the given body `str`.\n\t *\n\t * Used for auto-parsing of bodies. Parsers\n\t * are defined on the `superagent.parse` object.\n\t *\n\t * @param {String} str\n\t * @return {Mixed}\n\t * @api private\n\t */\n\t\n\tResponse.prototype.parseBody = function(str){\n\t  var parse = this.parser || request.parse[this.type];\n\t  return parse && str && (str.length || str instanceof Object)\n\t    ? parse(str)\n\t    : null;\n\t};\n\t\n\t/**\n\t * Set flags such as `.ok` based on `status`.\n\t *\n\t * For example a 2xx response will give you a `.ok` of __true__\n\t * whereas 5xx will be __false__ and `.error` will be __true__. The\n\t * `.clientError` and `.serverError` are also available to be more\n\t * specific, and `.statusType` is the class of error ranging from 1..5\n\t * sometimes useful for mapping respond colors etc.\n\t *\n\t * \"sugar\" properties are also defined for common cases. Currently providing:\n\t *\n\t *   - .noContent\n\t *   - .badRequest\n\t *   - .unauthorized\n\t *   - .notAcceptable\n\t *   - .notFound\n\t *\n\t * @param {Number} status\n\t * @api private\n\t */\n\t\n\tResponse.prototype.setStatusProperties = function(status){\n\t  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n\t  if (status === 1223) {\n\t    status = 204;\n\t  }\n\t\n\t  var type = status / 100 | 0;\n\t\n\t  // status / class\n\t  this.status = this.statusCode = status;\n\t  this.statusType = type;\n\t\n\t  // basics\n\t  this.info = 1 == type;\n\t  this.ok = 2 == type;\n\t  this.clientError = 4 == type;\n\t  this.serverError = 5 == type;\n\t  this.error = (4 == type || 5 == type)\n\t    ? this.toError()\n\t    : false;\n\t\n\t  // sugar\n\t  this.accepted = 202 == status;\n\t  this.noContent = 204 == status;\n\t  this.badRequest = 400 == status;\n\t  this.unauthorized = 401 == status;\n\t  this.notAcceptable = 406 == status;\n\t  this.notFound = 404 == status;\n\t  this.forbidden = 403 == status;\n\t};\n\t\n\t/**\n\t * Return an `Error` representative of this response.\n\t *\n\t * @return {Error}\n\t * @api public\n\t */\n\t\n\tResponse.prototype.toError = function(){\n\t  var req = this.req;\n\t  var method = req.method;\n\t  var url = req.url;\n\t\n\t  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n\t  var err = new Error(msg);\n\t  err.status = this.status;\n\t  err.method = method;\n\t  err.url = url;\n\t\n\t  return err;\n\t};\n\t\n\t/**\n\t * Expose `Response`.\n\t */\n\t\n\trequest.Response = Response;\n\t\n\t/**\n\t * Initialize a new `Request` with the given `method` and `url`.\n\t *\n\t * @param {String} method\n\t * @param {String} url\n\t * @api public\n\t */\n\t\n\tfunction Request(method, url) {\n\t  var self = this;\n\t  Emitter.call(this);\n\t  this._query = this._query || [];\n\t  this.method = method;\n\t  this.url = url;\n\t  this.header = {};\n\t  this._header = {};\n\t  this.on('end', function(){\n\t    var err = null;\n\t    var res = null;\n\t\n\t    try {\n\t      res = new Response(self);\n\t    } catch(e) {\n\t      err = new Error('Parser is unable to parse the response');\n\t      err.parse = true;\n\t      err.original = e;\n\t      return self.callback(err);\n\t    }\n\t\n\t    self.emit('response', res);\n\t\n\t    if (err) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    if (res.status >= 200 && res.status < 300) {\n\t      return self.callback(err, res);\n\t    }\n\t\n\t    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n\t    new_err.original = err;\n\t    new_err.response = res;\n\t    new_err.status = res.status;\n\t\n\t    self.callback(new_err, res);\n\t  });\n\t}\n\t\n\t/**\n\t * Mixin `Emitter`.\n\t */\n\t\n\tEmitter(Request.prototype);\n\t\n\t/**\n\t * Allow for extension\n\t */\n\t\n\tRequest.prototype.use = function(fn) {\n\t  fn(this);\n\t  return this;\n\t}\n\t\n\t/**\n\t * Set timeout to `ms`.\n\t *\n\t * @param {Number} ms\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.timeout = function(ms){\n\t  this._timeout = ms;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Clear previous timeout.\n\t *\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.clearTimeout = function(){\n\t  this._timeout = 0;\n\t  clearTimeout(this._timer);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Abort the request, and clear potential timeout.\n\t *\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tRequest.prototype.abort = function(){\n\t  if (this.aborted) return;\n\t  this.aborted = true;\n\t  this.xhr.abort();\n\t  this.clearTimeout();\n\t  this.emit('abort');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set header `field` to `val`, or multiple fields with one object.\n\t *\n\t * Examples:\n\t *\n\t *      req.get('/')\n\t *        .set('Accept', 'application/json')\n\t *        .set('X-API-Key', 'foobar')\n\t *        .end(callback);\n\t *\n\t *      req.get('/')\n\t *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n\t *        .end(callback);\n\t *\n\t * @param {String|Object} field\n\t * @param {String} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.set = function(field, val){\n\t  if (isObject(field)) {\n\t    for (var key in field) {\n\t      this.set(key, field[key]);\n\t    }\n\t    return this;\n\t  }\n\t  this._header[field.toLowerCase()] = val;\n\t  this.header[field] = val;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove header `field`.\n\t *\n\t * Example:\n\t *\n\t *      req.get('/')\n\t *        .unset('User-Agent')\n\t *        .end(callback);\n\t *\n\t * @param {String} field\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.unset = function(field){\n\t  delete this._header[field.toLowerCase()];\n\t  delete this.header[field];\n\t  return this;\n\t};\n\t\n\t/**\n\t * Get case-insensitive header `field` value.\n\t *\n\t * @param {String} field\n\t * @return {String}\n\t * @api private\n\t */\n\t\n\tRequest.prototype.getHeader = function(field){\n\t  return this._header[field.toLowerCase()];\n\t};\n\t\n\t/**\n\t * Set Content-Type to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.xml = 'application/xml';\n\t *\n\t *      request.post('/')\n\t *        .type('xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t *      request.post('/')\n\t *        .type('application/xml')\n\t *        .send(xmlstring)\n\t *        .end(callback);\n\t *\n\t * @param {String} type\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.type = function(type){\n\t  this.set('Content-Type', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Accept to `type`, mapping values from `request.types`.\n\t *\n\t * Examples:\n\t *\n\t *      superagent.types.json = 'application/json';\n\t *\n\t *      request.get('/agent')\n\t *        .accept('json')\n\t *        .end(callback);\n\t *\n\t *      request.get('/agent')\n\t *        .accept('application/json')\n\t *        .end(callback);\n\t *\n\t * @param {String} accept\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.accept = function(type){\n\t  this.set('Accept', request.types[type] || type);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Set Authorization field value with `user` and `pass`.\n\t *\n\t * @param {String} user\n\t * @param {String} pass\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.auth = function(user, pass){\n\t  var str = btoa(user + ':' + pass);\n\t  this.set('Authorization', 'Basic ' + str);\n\t  return this;\n\t};\n\t\n\t/**\n\t* Add query-string `val`.\n\t*\n\t* Examples:\n\t*\n\t*   request.get('/shoes')\n\t*     .query('size=10')\n\t*     .query({ color: 'blue' })\n\t*\n\t* @param {Object|String} val\n\t* @return {Request} for chaining\n\t* @api public\n\t*/\n\t\n\tRequest.prototype.query = function(val){\n\t  if ('string' != typeof val) val = serialize(val);\n\t  if (val) this._query.push(val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Write the field `name` and `val` for \"multipart/form-data\"\n\t * request bodies.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .field('foo', 'bar')\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} name\n\t * @param {String|Blob|File} val\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.field = function(name, val){\n\t  if (!this._formData) this._formData = new root.FormData();\n\t  this._formData.append(name, val);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Queue the given `file` as an attachment to the specified `field`,\n\t * with optional `filename`.\n\t *\n\t * ``` js\n\t * request.post('/upload')\n\t *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n\t *   .end(callback);\n\t * ```\n\t *\n\t * @param {String} field\n\t * @param {Blob|File} file\n\t * @param {String} filename\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.attach = function(field, file, filename){\n\t  if (!this._formData) this._formData = new root.FormData();\n\t  this._formData.append(field, file, filename);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Send `data`, defaulting the `.type()` to \"json\" when\n\t * an object is given.\n\t *\n\t * Examples:\n\t *\n\t *       // querystring\n\t *       request.get('/search')\n\t *         .end(callback)\n\t *\n\t *       // multiple data \"writes\"\n\t *       request.get('/search')\n\t *         .send({ search: 'query' })\n\t *         .send({ range: '1..5' })\n\t *         .send({ order: 'desc' })\n\t *         .end(callback)\n\t *\n\t *       // manual json\n\t *       request.post('/user')\n\t *         .type('json')\n\t *         .send('{\"name\":\"tj\"})\n\t *         .end(callback)\n\t *\n\t *       // auto json\n\t *       request.post('/user')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // manual x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send('name=tj')\n\t *         .end(callback)\n\t *\n\t *       // auto x-www-form-urlencoded\n\t *       request.post('/user')\n\t *         .type('form')\n\t *         .send({ name: 'tj' })\n\t *         .end(callback)\n\t *\n\t *       // defaults to x-www-form-urlencoded\n\t  *      request.post('/user')\n\t  *        .send('name=tobi')\n\t  *        .send('species=ferret')\n\t  *        .end(callback)\n\t *\n\t * @param {String|Object} data\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.send = function(data){\n\t  var obj = isObject(data);\n\t  var type = this.getHeader('Content-Type');\n\t\n\t  // merge\n\t  if (obj && isObject(this._data)) {\n\t    for (var key in data) {\n\t      this._data[key] = data[key];\n\t    }\n\t  } else if ('string' == typeof data) {\n\t    if (!type) this.type('form');\n\t    type = this.getHeader('Content-Type');\n\t    if ('application/x-www-form-urlencoded' == type) {\n\t      this._data = this._data\n\t        ? this._data + '&' + data\n\t        : data;\n\t    } else {\n\t      this._data = (this._data || '') + data;\n\t    }\n\t  } else {\n\t    this._data = data;\n\t  }\n\t\n\t  if (!obj || isHost(data)) return this;\n\t  if (!type) this.type('json');\n\t  return this;\n\t};\n\t\n\t/**\n\t * Invoke the callback with `err` and `res`\n\t * and handle arity check.\n\t *\n\t * @param {Error} err\n\t * @param {Response} res\n\t * @api private\n\t */\n\t\n\tRequest.prototype.callback = function(err, res){\n\t  var fn = this._callback;\n\t  this.clearTimeout();\n\t  fn(err, res);\n\t};\n\t\n\t/**\n\t * Invoke callback with x-domain error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.crossDomainError = function(){\n\t  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n\t  err.crossDomain = true;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Invoke callback with timeout error.\n\t *\n\t * @api private\n\t */\n\t\n\tRequest.prototype.timeoutError = function(){\n\t  var timeout = this._timeout;\n\t  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n\t  err.timeout = timeout;\n\t  this.callback(err);\n\t};\n\t\n\t/**\n\t * Enable transmission of cookies with x-domain requests.\n\t *\n\t * Note that for this to work the origin must not be\n\t * using \"Access-Control-Allow-Origin\" with a wildcard,\n\t * and also must set \"Access-Control-Allow-Credentials\"\n\t * to \"true\".\n\t *\n\t * @api public\n\t */\n\t\n\tRequest.prototype.withCredentials = function(){\n\t  this._withCredentials = true;\n\t  return this;\n\t};\n\t\n\t/**\n\t * Initiate request, invoking callback `fn(res)`\n\t * with an instanceof `Response`.\n\t *\n\t * @param {Function} fn\n\t * @return {Request} for chaining\n\t * @api public\n\t */\n\t\n\tRequest.prototype.end = function(fn){\n\t  var self = this;\n\t  var xhr = this.xhr = request.getXHR();\n\t  var query = this._query.join('&');\n\t  var timeout = this._timeout;\n\t  var data = this._formData || this._data;\n\t\n\t  // store callback\n\t  this._callback = fn || noop;\n\t\n\t  // state change\n\t  xhr.onreadystatechange = function(){\n\t    if (4 != xhr.readyState) return;\n\t\n\t    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n\t    // result in the error \"Could not complete the operation due to error c00c023f\"\n\t    var status;\n\t    try { status = xhr.status } catch(e) { status = 0; }\n\t\n\t    if (0 == status) {\n\t      if (self.timedout) return self.timeoutError();\n\t      if (self.aborted) return;\n\t      return self.crossDomainError();\n\t    }\n\t    self.emit('end');\n\t  };\n\t\n\t  // progress\n\t  var handleProgress = function(e){\n\t    if (e.total > 0) {\n\t      e.percent = e.loaded / e.total * 100;\n\t    }\n\t    self.emit('progress', e);\n\t  };\n\t  if (this.hasListeners('progress')) {\n\t    xhr.onprogress = handleProgress;\n\t  }\n\t  try {\n\t    if (xhr.upload && this.hasListeners('progress')) {\n\t      xhr.upload.onprogress = handleProgress;\n\t    }\n\t  } catch(e) {\n\t    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n\t    // Reported here:\n\t    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n\t  }\n\t\n\t  // timeout\n\t  if (timeout && !this._timer) {\n\t    this._timer = setTimeout(function(){\n\t      self.timedout = true;\n\t      self.abort();\n\t    }, timeout);\n\t  }\n\t\n\t  // querystring\n\t  if (query) {\n\t    query = request.serializeObject(query);\n\t    this.url += ~this.url.indexOf('?')\n\t      ? '&' + query\n\t      : '?' + query;\n\t  }\n\t\n\t  // initiate request\n\t  xhr.open(this.method, this.url, true);\n\t\n\t  // CORS\n\t  if (this._withCredentials) xhr.withCredentials = true;\n\t\n\t  // body\n\t  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n\t    // serialize stuff\n\t    var contentType = this.getHeader('Content-Type');\n\t    var serialize = request.serialize[contentType ? contentType.split(';')[0] : ''];\n\t    if (serialize) data = serialize(data);\n\t  }\n\t\n\t  // set header fields\n\t  for (var field in this.header) {\n\t    if (null == this.header[field]) continue;\n\t    xhr.setRequestHeader(field, this.header[field]);\n\t  }\n\t\n\t  // send stuff\n\t  this.emit('request', this);\n\t  xhr.send(data);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Faux promise support\n\t *\n\t * @param {Function} fulfill\n\t * @param {Function} reject\n\t * @return {Request}\n\t */\n\t\n\tRequest.prototype.then = function (fulfill, reject) {\n\t  return this.end(function(err, res) {\n\t    err ? reject(err) : fulfill(res);\n\t  });\n\t}\n\t\n\t/**\n\t * Expose `Request`.\n\t */\n\t\n\trequest.Request = Request;\n\t\n\t/**\n\t * Issue a request:\n\t *\n\t * Examples:\n\t *\n\t *    request('GET', '/users').end(callback)\n\t *    request('/users').end(callback)\n\t *    request('/users', callback)\n\t *\n\t * @param {String} method\n\t * @param {String|Function} url or callback\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\tfunction request(method, url) {\n\t  // callback\n\t  if ('function' == typeof url) {\n\t    return new Request('GET', method).end(url);\n\t  }\n\t\n\t  // url first\n\t  if (1 == arguments.length) {\n\t    return new Request('GET', method);\n\t  }\n\t\n\t  return new Request(method, url);\n\t}\n\t\n\t/**\n\t * GET `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.get = function(url, data, fn){\n\t  var req = request('GET', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.query(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * HEAD `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.head = function(url, data, fn){\n\t  var req = request('HEAD', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * DELETE `url` with optional callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.del = function(url, fn){\n\t  var req = request('DELETE', url);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PATCH `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.patch = function(url, data, fn){\n\t  var req = request('PATCH', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * POST `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed} data\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.post = function(url, data, fn){\n\t  var req = request('POST', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * PUT `url` with optional `data` and callback `fn(res)`.\n\t *\n\t * @param {String} url\n\t * @param {Mixed|Function} data or fn\n\t * @param {Function} fn\n\t * @return {Request}\n\t * @api public\n\t */\n\t\n\trequest.put = function(url, data, fn){\n\t  var req = request('PUT', url);\n\t  if ('function' == typeof data) fn = data, data = null;\n\t  if (data) req.send(data);\n\t  if (fn) req.end(fn);\n\t  return req;\n\t};\n\t\n\t/**\n\t * Expose `request`.\n\t */\n\t\n\tmodule.exports = request;\n\n\n/***/ },\n/* 19 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Expose `Emitter`.\n\t */\n\t\n\tmodule.exports = Emitter;\n\t\n\t/**\n\t * Initialize a new `Emitter`.\n\t *\n\t * @api public\n\t */\n\t\n\tfunction Emitter(obj) {\n\t  if (obj) return mixin(obj);\n\t};\n\t\n\t/**\n\t * Mixin the emitter properties.\n\t *\n\t * @param {Object} obj\n\t * @return {Object}\n\t * @api private\n\t */\n\t\n\tfunction mixin(obj) {\n\t  for (var key in Emitter.prototype) {\n\t    obj[key] = Emitter.prototype[key];\n\t  }\n\t  return obj;\n\t}\n\t\n\t/**\n\t * Listen on the given `event` with `fn`.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.on =\n\tEmitter.prototype.addEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t  (this._callbacks[event] = this._callbacks[event] || [])\n\t    .push(fn);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Adds an `event` listener that will be invoked a single\n\t * time then automatically removed.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.once = function(event, fn){\n\t  var self = this;\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  function on() {\n\t    self.off(event, on);\n\t    fn.apply(this, arguments);\n\t  }\n\t\n\t  on.fn = fn;\n\t  this.on(event, on);\n\t  return this;\n\t};\n\t\n\t/**\n\t * Remove the given callback for `event` or all\n\t * registered callbacks.\n\t *\n\t * @param {String} event\n\t * @param {Function} fn\n\t * @return {Emitter}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.off =\n\tEmitter.prototype.removeListener =\n\tEmitter.prototype.removeAllListeners =\n\tEmitter.prototype.removeEventListener = function(event, fn){\n\t  this._callbacks = this._callbacks || {};\n\t\n\t  // all\n\t  if (0 == arguments.length) {\n\t    this._callbacks = {};\n\t    return this;\n\t  }\n\t\n\t  // specific event\n\t  var callbacks = this._callbacks[event];\n\t  if (!callbacks) return this;\n\t\n\t  // remove all handlers\n\t  if (1 == arguments.length) {\n\t    delete this._callbacks[event];\n\t    return this;\n\t  }\n\t\n\t  // remove specific handler\n\t  var cb;\n\t  for (var i = 0; i < callbacks.length; i++) {\n\t    cb = callbacks[i];\n\t    if (cb === fn || cb.fn === fn) {\n\t      callbacks.splice(i, 1);\n\t      break;\n\t    }\n\t  }\n\t  return this;\n\t};\n\t\n\t/**\n\t * Emit `event` with the given args.\n\t *\n\t * @param {String} event\n\t * @param {Mixed} ...\n\t * @return {Emitter}\n\t */\n\t\n\tEmitter.prototype.emit = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  var args = [].slice.call(arguments, 1)\n\t    , callbacks = this._callbacks[event];\n\t\n\t  if (callbacks) {\n\t    callbacks = callbacks.slice(0);\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\n\t      callbacks[i].apply(this, args);\n\t    }\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/**\n\t * Return array of callbacks for `event`.\n\t *\n\t * @param {String} event\n\t * @return {Array}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.listeners = function(event){\n\t  this._callbacks = this._callbacks || {};\n\t  return this._callbacks[event] || [];\n\t};\n\t\n\t/**\n\t * Check if this emitter has `event` handlers.\n\t *\n\t * @param {String} event\n\t * @return {Boolean}\n\t * @api public\n\t */\n\t\n\tEmitter.prototype.hasListeners = function(event){\n\t  return !! this.listeners(event).length;\n\t};\n\n\n/***/ },\n/* 20 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * Reduce `arr` with `fn`.\n\t *\n\t * @param {Array} arr\n\t * @param {Function} fn\n\t * @param {Mixed} initial\n\t *\n\t * TODO: combatible error handling?\n\t */\n\t\n\tmodule.exports = function(arr, fn, initial){  \n\t  var idx = 0;\n\t  var len = arr.length;\n\t  var curr = arguments.length == 3\n\t    ? initial\n\t    : arr[idx++];\n\t\n\t  while (idx < len) {\n\t    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n\t  }\n\t  \n\t  return curr;\n\t};\n\n/***/ },\n/* 21 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t    post: /**\n\t * Make a X-Domain request to url and callback.\n\t *\n\t * @param url {String}\n\t * @param method {String} HTTP verb ('GET', 'POST', 'DELETE', etc.)\n\t * @param data {String} request body\n\t * @param callback {Function} to callback on completion\n\t * @param errback {Function} to callback on error\n\t */\n\t    function xdr(url, method, callback) {\n\t        var req;\n\t\n\t        if (XMLHttpRequest) {\n\t            req = new XMLHttpRequest();\n\t\n\t            if ('withCredentials' in req) {\n\t                req.open(method, url, true);\n\t                req.onerror = function(e){callback(e, null);};\n\t                req.onreadystatechange = function () {\n\t                    if (req.readyState === 4) {\n\t                        if (req.status >= 200 && req.status < 400) {\n\t                            callback(null,req.responseText);\n\t                        } else {\n\t                            callback(new Error('Response returned with non-OK status'));\n\t                        }\n\t                    }\n\t                };\n\t                return req;\n\t            }\n\t        } else if (XDomainRequest) {\n\t            req = new XDomainRequest();\n\t            req.open(method, url);\n\t            req.onerror = function(e){callback(e, null);};\n\t            req.onload = function () {\n\t                callback(null,req.responseText);\n\t            };\n\t            return req;\n\t        } else {\n\t            throw new Error('CORS not supported');\n\t        }\n\t    }\n\t}\n\n/***/ },\n/* 22 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* global sinon */\n\tvar inbox = __webpack_require__(10);\n\tvar expect = __webpack_require__(23).expect;\n\tvar core = __webpack_require__(17);\n\tvar info = __webpack_require__(14);\n\tvar features = __webpack_require__(15);\n\t\n\tdescribe('inbox', function () {\n\t    var requests = [];\n\t\tvar xhr;\n\t    var asa;\n\t\tvar lastRequest = function (keepSession) {\n\t\t\tvar request = JSON.parse(requests[0].requestBody);\n\t\t\tfor (var i = 0; i < request.ev.length; i++) {\n\t\t\t\tvar element = request.ev[i];\n\t\t\t\tif (!keepSession) delete element.session;\n\t\t\t\tdelete element.uid;\n\t\t\t\tdelete element.t;\n\t\t\t\tdelete element.location;\n\t\t\t}\n\t\t\tdelete request.t;\n\t\t\treturn request;\n\t\t};\n\t\n\t\tvar adjustSystemInfo = function (ev) {\n\t\t\tfor (var i = 0; i < ev.ev.length; i++) {\n\t\t\t\tvar element = ev.ev[i];\n\t\t\t\telement[\"v\"] = info.version();\n\t\t\t\tif (element[\"location\"]) \n\t\t\t\t\tdelete element[\"location\"];\n\t\t\t}\n\t\t\treturn ev;\n\t\t};\n\t\n\t\tbeforeEach(function () {\n\t\t\tfeatures.clearExperiments();\n\t\t\trequests = [];\n\t\t\txhr = sinon.useFakeXMLHttpRequest();\n\t        xhr.onCreate = function (xhr) {\n\t            requests.push(xhr);\n\t        };\n\t        asa = inbox(core.submitEvent);\n\t\t});\n\t\n\t\tafterEach(function () {\n\t\t\txhr.restore();\n\t\t});\n\t\n\t\tdescribe('default pageview', function () {\n\t\t\tit('should sent only one event', function () {\n\t\t\t\tasa('pageview');\n\t\n\t\t\t\texpect(requests.length).to.equal(1);\n\t\t\t})\n\t\t\tit('should be a POST with data describing the event', function () {\n\t\t\t\tasa('pageview');\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\" } }] });\n\t\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t})\n\t\t})\n\t\n\t\tdescribe('pageview with custom meta', function () {\n\t\t\tit('should be a POST with data describing the event', function () {\n\t\n\t\t\t\tasa('pageview', { a: 's' });\n\t\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\", \"a\": \"s\" } }] });\n\t\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t})\n\t\n\t\t});\n\t\n\t\tdescribe('custom events', function () {\n\t\t\tit('should send no metadata when none specified', function () {\n\t\t\t\tasa('custom_one');\n\t\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\" }] });\n\t\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t});\n\t\t\tit('should send metadata when client id specified as string', function () {\n\t\t\t\tasa('custom_one', 'offer1');\n\t\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } } }] });\n\t\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t});\n\t\t\tit('should send metadata when specified as DOM element', function () {\n\t\t\t\tasa('custom_one', document.getElementById('offer1'));\n\t\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } } }] });\n\t\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t});\n\t\t\tit('should send metadata when specified as explicit extra one', function () {\n\t\t\t\tasa('custom_one', { 'a': 's' });\n\t\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { 'a': 's' } }] });\n\t\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t});\n\t\t\tit('should send metadata when specified as DOM element and extra metadata', function () {\n\t\t\t\tasa('custom_one', document.getElementById('offer1'), { a: 's' });\n\t\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { \"a\": \"s\", \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } } }] });\n\t\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t});\n\t\t\tit('should send metadata when specified as DOM element ID and extra metadata', function () {\n\t\t\t\tasa('custom_one', 'offer1', { a: 's' });\n\t\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { \"a\": \"s\", \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } } }] });\n\t\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t});\n\t\t})\n\t\n\t\tdescribe('experiment miniAjax', function () {\n\t\t\tit('should be a POST with data describing the event', function () {\n\t\t\t\tfeatures.defineExperiment(features.MINI_AJAX, 100);\n\t\t\t\tasa('pageview', { a: 's' });\n\t\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\", \"a\": \"s\" } }] });\n\t\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t})\n\t\n\t\t});\n\t\n\t\tdescribe('batching', function () {\n\t\t\tit('should have both events', function (done) {\n\t\t\t\tcore.batchOn();\n\t\t\t\tvar batchingInbox = inbox(core.batchEvent);\n\t\t\t\tbatchingInbox('pageview', { a: 's' });\n\t\t\t\tbatchingInbox('pageview', { a: 'd' });\n\t\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tcore.batchOff();\n\t\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\", \"a\": \"s\" } }, { \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\", \"a\": \"d\" } }] });\n\t\n\t\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t\t\tdone();\n\t\t\t\t}, 700);\n\t\t\t})\n\t\n\t\t});\n\t    \n\t    describe('custom session management', function(){\n\t        it('should allow devs to provide their own session id', function(){\n\t            asa('session', function() {return 'my_session';});\n\t            asa('pageview');\n\t            expect(lastRequest(true).ev[0].session).to.equal('my_session');            \n\t        })\n\t    })\n\t\n\t})\n\n/***/ },\n/* 23 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(24);\n\n\n/***/ },\n/* 24 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * chai\n\t * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\tvar used = []\n\t  , exports = module.exports = {};\n\t\n\t/*!\n\t * Chai version\n\t */\n\t\n\texports.version = '3.4.0';\n\t\n\t/*!\n\t * Assertion Error\n\t */\n\t\n\texports.AssertionError = __webpack_require__(25);\n\t\n\t/*!\n\t * Utils for plugins (not exported)\n\t */\n\t\n\tvar util = __webpack_require__(26);\n\t\n\t/**\n\t * # .use(function)\n\t *\n\t * Provides a way to extend the internals of Chai\n\t *\n\t * @param {Function}\n\t * @returns {this} for chaining\n\t * @api public\n\t */\n\t\n\texports.use = function (fn) {\n\t  if (!~used.indexOf(fn)) {\n\t    fn(this, util);\n\t    used.push(fn);\n\t  }\n\t\n\t  return this;\n\t};\n\t\n\t/*!\n\t * Utility Functions\n\t */\n\t\n\texports.util = util;\n\t\n\t/*!\n\t * Configuration\n\t */\n\t\n\tvar config = __webpack_require__(39);\n\texports.config = config;\n\t\n\t/*!\n\t * Primary `Assertion` prototype\n\t */\n\t\n\tvar assertion = __webpack_require__(58);\n\texports.use(assertion);\n\t\n\t/*!\n\t * Core Assertions\n\t */\n\t\n\tvar core = __webpack_require__(59);\n\texports.use(core);\n\t\n\t/*!\n\t * Expect interface\n\t */\n\t\n\tvar expect = __webpack_require__(60);\n\texports.use(expect);\n\t\n\t/*!\n\t * Should interface\n\t */\n\t\n\tvar should = __webpack_require__(61);\n\texports.use(should);\n\t\n\t/*!\n\t * Assert interface\n\t */\n\t\n\tvar assert = __webpack_require__(62);\n\texports.use(assert);\n\n\n/***/ },\n/* 25 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * assertion-error\n\t * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n\t * MIT Licensed\n\t */\n\t\n\t/*!\n\t * Return a function that will copy properties from\n\t * one object to another excluding any originally\n\t * listed. Returned function will create a new `{}`.\n\t *\n\t * @param {String} excluded properties ...\n\t * @return {Function}\n\t */\n\t\n\tfunction exclude () {\n\t  var excludes = [].slice.call(arguments);\n\t\n\t  function excludeProps (res, obj) {\n\t    Object.keys(obj).forEach(function (key) {\n\t      if (!~excludes.indexOf(key)) res[key] = obj[key];\n\t    });\n\t  }\n\t\n\t  return function extendExclude () {\n\t    var args = [].slice.call(arguments)\n\t      , i = 0\n\t      , res = {};\n\t\n\t    for (; i < args.length; i++) {\n\t      excludeProps(res, args[i]);\n\t    }\n\t\n\t    return res;\n\t  };\n\t};\n\t\n\t/*!\n\t * Primary Exports\n\t */\n\t\n\tmodule.exports = AssertionError;\n\t\n\t/**\n\t * ### AssertionError\n\t *\n\t * An extension of the JavaScript `Error` constructor for\n\t * assertion and validation scenarios.\n\t *\n\t * @param {String} message\n\t * @param {Object} properties to include (optional)\n\t * @param {callee} start stack function (optional)\n\t */\n\t\n\tfunction AssertionError (message, _props, ssf) {\n\t  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n\t    , props = extend(_props || {});\n\t\n\t  // default values\n\t  this.message = message || 'Unspecified AssertionError';\n\t  this.showDiff = false;\n\t\n\t  // copy from properties\n\t  for (var key in props) {\n\t    this[key] = props[key];\n\t  }\n\t\n\t  // capture stack trace\n\t  ssf = ssf || arguments.callee;\n\t  if (ssf && Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, ssf);\n\t  } else {\n\t    this.stack = new Error().stack;\n\t  }\n\t}\n\t\n\t/*!\n\t * Inherit from Error.prototype\n\t */\n\t\n\tAssertionError.prototype = Object.create(Error.prototype);\n\t\n\t/*!\n\t * Statically set name\n\t */\n\t\n\tAssertionError.prototype.name = 'AssertionError';\n\t\n\t/*!\n\t * Ensure correct constructor\n\t */\n\t\n\tAssertionError.prototype.constructor = AssertionError;\n\t\n\t/**\n\t * Allow errors to be converted to JSON for static transfer.\n\t *\n\t * @param {Boolean} include stack (default: `true`)\n\t * @return {Object} object that can be `JSON.stringify`\n\t */\n\t\n\tAssertionError.prototype.toJSON = function (stack) {\n\t  var extend = exclude('constructor', 'toJSON', 'stack')\n\t    , props = extend({ name: this.name }, this);\n\t\n\t  // include stack if exists and not turned off\n\t  if (false !== stack && this.stack) {\n\t    props.stack = this.stack;\n\t  }\n\t\n\t  return props;\n\t};\n\n\n/***/ },\n/* 26 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * chai\n\t * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/*!\n\t * Main exports\n\t */\n\t\n\tvar exports = module.exports = {};\n\t\n\t/*!\n\t * test utility\n\t */\n\t\n\texports.test = __webpack_require__(27);\n\t\n\t/*!\n\t * type utility\n\t */\n\t\n\texports.type = __webpack_require__(29);\n\t\n\t/*!\n\t * expectTypes utility\n\t */\n\texports.expectTypes = __webpack_require__(31);\n\t\n\t/*!\n\t * message utility\n\t */\n\t\n\texports.getMessage = __webpack_require__(32);\n\t\n\t/*!\n\t * actual utility\n\t */\n\t\n\texports.getActual = __webpack_require__(33);\n\t\n\t/*!\n\t * Inspect util\n\t */\n\t\n\texports.inspect = __webpack_require__(34);\n\t\n\t/*!\n\t * Object Display util\n\t */\n\t\n\texports.objDisplay = __webpack_require__(38);\n\t\n\t/*!\n\t * Flag utility\n\t */\n\t\n\texports.flag = __webpack_require__(28);\n\t\n\t/*!\n\t * Flag transferring utility\n\t */\n\t\n\texports.transferFlags = __webpack_require__(40);\n\t\n\t/*!\n\t * Deep equal utility\n\t */\n\t\n\texports.eql = __webpack_require__(41);\n\t\n\t/*!\n\t * Deep path value\n\t */\n\t\n\texports.getPathValue = __webpack_require__(49);\n\t\n\t/*!\n\t * Deep path info\n\t */\n\t\n\texports.getPathInfo = __webpack_require__(50);\n\t\n\t/*!\n\t * Check if a property exists\n\t */\n\t\n\texports.hasProperty = __webpack_require__(51);\n\t\n\t/*!\n\t * Function name\n\t */\n\t\n\texports.getName = __webpack_require__(35);\n\t\n\t/*!\n\t * add Property\n\t */\n\t\n\texports.addProperty = __webpack_require__(52);\n\t\n\t/*!\n\t * add Method\n\t */\n\t\n\texports.addMethod = __webpack_require__(53);\n\t\n\t/*!\n\t * overwrite Property\n\t */\n\t\n\texports.overwriteProperty = __webpack_require__(54);\n\t\n\t/*!\n\t * overwrite Method\n\t */\n\t\n\texports.overwriteMethod = __webpack_require__(55);\n\t\n\t/*!\n\t * Add a chainable method\n\t */\n\t\n\texports.addChainableMethod = __webpack_require__(56);\n\t\n\t/*!\n\t * Overwrite chainable method\n\t */\n\t\n\texports.overwriteChainableMethod = __webpack_require__(57);\n\n\n/***/ },\n/* 27 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - test utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/*!\n\t * Module dependancies\n\t */\n\t\n\tvar flag = __webpack_require__(28);\n\t\n\t/**\n\t * # test(object, expression)\n\t *\n\t * Test and object for expression.\n\t *\n\t * @param {Object} object (constructed Assertion)\n\t * @param {Arguments} chai.Assertion.prototype.assert arguments\n\t */\n\t\n\tmodule.exports = function (obj, args) {\n\t  var negate = flag(obj, 'negate')\n\t    , expr = args[0];\n\t  return negate ? !expr : expr;\n\t};\n\n\n/***/ },\n/* 28 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chai - flag utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * ### flag(object, key, [value])\n\t *\n\t * Get or set a flag value on an object. If a\n\t * value is provided it will be set, else it will\n\t * return the currently set value or `undefined` if\n\t * the value is not set.\n\t *\n\t *     utils.flag(this, 'foo', 'bar'); // setter\n\t *     utils.flag(this, 'foo'); // getter, returns `bar`\n\t *\n\t * @param {Object} object constructed Assertion\n\t * @param {String} key\n\t * @param {Mixed} value (optional)\n\t * @name flag\n\t * @api private\n\t */\n\t\n\tmodule.exports = function (obj, key, value) {\n\t  var flags = obj.__flags || (obj.__flags = Object.create(null));\n\t  if (arguments.length === 3) {\n\t    flags[key] = value;\n\t  } else {\n\t    return flags[key];\n\t  }\n\t};\n\n\n/***/ },\n/* 29 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(30);\n\n\n/***/ },\n/* 30 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * type-detect\n\t * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/*!\n\t * Primary Exports\n\t */\n\t\n\tvar exports = module.exports = getType;\n\t\n\t/**\n\t * ### typeOf (obj)\n\t *\n\t * Use several different techniques to determine\n\t * the type of object being tested.\n\t *\n\t *\n\t * @param {Mixed} object\n\t * @return {String} object type\n\t * @api public\n\t */\n\tvar objectTypeRegexp = /^\\[object (.*)\\]$/;\n\t\n\tfunction getType(obj) {\n\t  var type = Object.prototype.toString.call(obj).match(objectTypeRegexp)[1].toLowerCase();\n\t  // Let \"new String('')\" return 'object'\n\t  if (typeof Promise === 'function' && obj instanceof Promise) return 'promise';\n\t  // PhantomJS has type \"DOMWindow\" for null\n\t  if (obj === null) return 'null';\n\t  // PhantomJS has type \"DOMWindow\" for undefined\n\t  if (obj === undefined) return 'undefined';\n\t  return type;\n\t}\n\t\n\texports.Library = Library;\n\t\n\t/**\n\t * ### Library\n\t *\n\t * Create a repository for custom type detection.\n\t *\n\t * ```js\n\t * var lib = new type.Library;\n\t * ```\n\t *\n\t */\n\t\n\tfunction Library() {\n\t  if (!(this instanceof Library)) return new Library();\n\t  this.tests = {};\n\t}\n\t\n\t/**\n\t * #### .of (obj)\n\t *\n\t * Expose replacement `typeof` detection to the library.\n\t *\n\t * ```js\n\t * if ('string' === lib.of('hello world')) {\n\t *   // ...\n\t * }\n\t * ```\n\t *\n\t * @param {Mixed} object to test\n\t * @return {String} type\n\t */\n\t\n\tLibrary.prototype.of = getType;\n\t\n\t/**\n\t * #### .define (type, test)\n\t *\n\t * Add a test to for the `.test()` assertion.\n\t *\n\t * Can be defined as a regular expression:\n\t *\n\t * ```js\n\t * lib.define('int', /^[0-9]+$/);\n\t * ```\n\t *\n\t * ... or as a function:\n\t *\n\t * ```js\n\t * lib.define('bln', function (obj) {\n\t *   if ('boolean' === lib.of(obj)) return true;\n\t *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n\t *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n\t *   return !! ~blns.indexOf(obj);\n\t * });\n\t * ```\n\t *\n\t * @param {String} type\n\t * @param {RegExp|Function} test\n\t * @api public\n\t */\n\t\n\tLibrary.prototype.define = function(type, test) {\n\t  if (arguments.length === 1) return this.tests[type];\n\t  this.tests[type] = test;\n\t  return this;\n\t};\n\t\n\t/**\n\t * #### .test (obj, test)\n\t *\n\t * Assert that an object is of type. Will first\n\t * check natives, and if that does not pass it will\n\t * use the user defined custom tests.\n\t *\n\t * ```js\n\t * assert(lib.test('1', 'int'));\n\t * assert(lib.test('yes', 'bln'));\n\t * ```\n\t *\n\t * @param {Mixed} object\n\t * @param {String} type\n\t * @return {Boolean} result\n\t * @api public\n\t */\n\t\n\tLibrary.prototype.test = function(obj, type) {\n\t  if (type === getType(obj)) return true;\n\t  var test = this.tests[type];\n\t\n\t  if (test && 'regexp' === getType(test)) {\n\t    return test.test(obj);\n\t  } else if (test && 'function' === getType(test)) {\n\t    return test(obj);\n\t  } else {\n\t    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n\t  }\n\t};\n\n\n/***/ },\n/* 31 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - expectTypes utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * ### expectTypes(obj, types)\n\t *\n\t * Ensures that the object being tested against is of a valid type.\n\t *\n\t *     utils.expectTypes(this, ['array', 'object', 'string']);\n\t *\n\t * @param {Mixed} obj constructed Assertion\n\t * @param {Array} type A list of allowed types for this assertion\n\t * @name expectTypes\n\t * @api public\n\t */\n\t\n\tvar AssertionError = __webpack_require__(25);\n\tvar flag = __webpack_require__(28);\n\tvar type = __webpack_require__(29);\n\t\n\tmodule.exports = function (obj, types) {\n\t  var obj = flag(obj, 'object');\n\t  types = types.map(function (t) { return t.toLowerCase(); });\n\t  types.sort();\n\t\n\t  // Transforms ['lorem', 'ipsum'] into 'a lirum, or an ipsum'\n\t  var str = types.map(function (t, index) {\n\t    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n\t    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n\t    return or + art + ' ' + t;\n\t  }).join(', ');\n\t\n\t  if (!types.some(function (expected) { return type(obj) === expected; })) {\n\t    throw new AssertionError(\n\t      'object tested must be ' + str + ', but ' + type(obj) + ' given'\n\t    );\n\t  }\n\t};\n\n\n/***/ },\n/* 32 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - message composition utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/*!\n\t * Module dependancies\n\t */\n\t\n\tvar flag = __webpack_require__(28)\n\t  , getActual = __webpack_require__(33)\n\t  , inspect = __webpack_require__(34)\n\t  , objDisplay = __webpack_require__(38);\n\t\n\t/**\n\t * ### .getMessage(object, message, negateMessage)\n\t *\n\t * Construct the error message based on flags\n\t * and template tags. Template tags will return\n\t * a stringified inspection of the object referenced.\n\t *\n\t * Message template tags:\n\t * - `#{this}` current asserted object\n\t * - `#{act}` actual value\n\t * - `#{exp}` expected value\n\t *\n\t * @param {Object} object (constructed Assertion)\n\t * @param {Arguments} chai.Assertion.prototype.assert arguments\n\t * @name getMessage\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (obj, args) {\n\t  var negate = flag(obj, 'negate')\n\t    , val = flag(obj, 'object')\n\t    , expected = args[3]\n\t    , actual = getActual(obj, args)\n\t    , msg = negate ? args[2] : args[1]\n\t    , flagMsg = flag(obj, 'message');\n\t\n\t  if(typeof msg === \"function\") msg = msg();\n\t  msg = msg || '';\n\t  msg = msg\n\t    .replace(/#{this}/g, objDisplay(val))\n\t    .replace(/#{act}/g, objDisplay(actual))\n\t    .replace(/#{exp}/g, objDisplay(expected));\n\t\n\t  return flagMsg ? flagMsg + ': ' + msg : msg;\n\t};\n\n\n/***/ },\n/* 33 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chai - getActual utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * # getActual(object, [actual])\n\t *\n\t * Returns the `actual` value for an Assertion\n\t *\n\t * @param {Object} object (constructed Assertion)\n\t * @param {Arguments} chai.Assertion.prototype.assert arguments\n\t */\n\t\n\tmodule.exports = function (obj, args) {\n\t  return args.length > 4 ? args[4] : obj._obj;\n\t};\n\n\n/***/ },\n/* 34 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t// This is (almost) directly from Node.js utils\n\t// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\t\n\tvar getName = __webpack_require__(35);\n\tvar getProperties = __webpack_require__(36);\n\tvar getEnumerableProperties = __webpack_require__(37);\n\t\n\tmodule.exports = inspect;\n\t\n\t/**\n\t * Echos the value of a value. Trys to print the value out\n\t * in the best way possible given the different types.\n\t *\n\t * @param {Object} obj The object to print out.\n\t * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n\t *    properties of objects.\n\t * @param {Number} depth Depth in which to descend in object. Default is 2.\n\t * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n\t *    output. Default is false (no coloring).\n\t */\n\tfunction inspect(obj, showHidden, depth, colors) {\n\t  var ctx = {\n\t    showHidden: showHidden,\n\t    seen: [],\n\t    stylize: function (str) { return str; }\n\t  };\n\t  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n\t}\n\t\n\t// Returns true if object is a DOM element.\n\tvar isDOMElement = function (object) {\n\t  if (typeof HTMLElement === 'object') {\n\t    return object instanceof HTMLElement;\n\t  } else {\n\t    return object &&\n\t      typeof object === 'object' &&\n\t      object.nodeType === 1 &&\n\t      typeof object.nodeName === 'string';\n\t  }\n\t};\n\t\n\tfunction formatValue(ctx, value, recurseTimes) {\n\t  // Provide a hook for user-specified inspect functions.\n\t  // Check that value is an object with an inspect function on it\n\t  if (value && typeof value.inspect === 'function' &&\n\t      // Filter out the util module, it's inspect function is special\n\t      value.inspect !== exports.inspect &&\n\t      // Also filter out any prototype objects using the circular check.\n\t      !(value.constructor && value.constructor.prototype === value)) {\n\t    var ret = value.inspect(recurseTimes);\n\t    if (typeof ret !== 'string') {\n\t      ret = formatValue(ctx, ret, recurseTimes);\n\t    }\n\t    return ret;\n\t  }\n\t\n\t  // Primitive types cannot have properties\n\t  var primitive = formatPrimitive(ctx, value);\n\t  if (primitive) {\n\t    return primitive;\n\t  }\n\t\n\t  // If this is a DOM element, try to get the outer HTML.\n\t  if (isDOMElement(value)) {\n\t    if ('outerHTML' in value) {\n\t      return value.outerHTML;\n\t      // This value does not have an outerHTML attribute,\n\t      //   it could still be an XML element\n\t    } else {\n\t      // Attempt to serialize it\n\t      try {\n\t        if (document.xmlVersion) {\n\t          var xmlSerializer = new XMLSerializer();\n\t          return xmlSerializer.serializeToString(value);\n\t        } else {\n\t          // Firefox 11- do not support outerHTML\n\t          //   It does, however, support innerHTML\n\t          //   Use the following to render the element\n\t          var ns = \"http://www.w3.org/1999/xhtml\";\n\t          var container = document.createElementNS(ns, '_');\n\t\n\t          container.appendChild(value.cloneNode(false));\n\t          html = container.innerHTML\n\t            .replace('><', '>' + value.innerHTML + '<');\n\t          container.innerHTML = '';\n\t          return html;\n\t        }\n\t      } catch (err) {\n\t        // This could be a non-native DOM implementation,\n\t        //   continue with the normal flow:\n\t        //   printing the element as if it is an object.\n\t      }\n\t    }\n\t  }\n\t\n\t  // Look up the keys of the object.\n\t  var visibleKeys = getEnumerableProperties(value);\n\t  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\t\n\t  // Some type of object without properties can be shortcutted.\n\t  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n\t  // a `stack` plus `description` property; ignore those for consistency.\n\t  if (keys.length === 0 || (isError(value) && (\n\t      (keys.length === 1 && keys[0] === 'stack') ||\n\t      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n\t     ))) {\n\t    if (typeof value === 'function') {\n\t      var name = getName(value);\n\t      var nameSuffix = name ? ': ' + name : '';\n\t      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n\t    }\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    }\n\t    if (isDate(value)) {\n\t      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n\t    }\n\t    if (isError(value)) {\n\t      return formatError(value);\n\t    }\n\t  }\n\t\n\t  var base = '', array = false, braces = ['{', '}'];\n\t\n\t  // Make Array say that they are Array\n\t  if (isArray(value)) {\n\t    array = true;\n\t    braces = ['[', ']'];\n\t  }\n\t\n\t  // Make functions say that they are functions\n\t  if (typeof value === 'function') {\n\t    var name = getName(value);\n\t    var nameSuffix = name ? ': ' + name : '';\n\t    base = ' [Function' + nameSuffix + ']';\n\t  }\n\t\n\t  // Make RegExps say that they are RegExps\n\t  if (isRegExp(value)) {\n\t    base = ' ' + RegExp.prototype.toString.call(value);\n\t  }\n\t\n\t  // Make dates with properties first say the date\n\t  if (isDate(value)) {\n\t    base = ' ' + Date.prototype.toUTCString.call(value);\n\t  }\n\t\n\t  // Make error with message first say the error\n\t  if (isError(value)) {\n\t    return formatError(value);\n\t  }\n\t\n\t  if (keys.length === 0 && (!array || value.length == 0)) {\n\t    return braces[0] + base + braces[1];\n\t  }\n\t\n\t  if (recurseTimes < 0) {\n\t    if (isRegExp(value)) {\n\t      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n\t    } else {\n\t      return ctx.stylize('[Object]', 'special');\n\t    }\n\t  }\n\t\n\t  ctx.seen.push(value);\n\t\n\t  var output;\n\t  if (array) {\n\t    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n\t  } else {\n\t    output = keys.map(function(key) {\n\t      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n\t    });\n\t  }\n\t\n\t  ctx.seen.pop();\n\t\n\t  return reduceToSingleString(output, base, braces);\n\t}\n\t\n\t\n\tfunction formatPrimitive(ctx, value) {\n\t  switch (typeof value) {\n\t    case 'undefined':\n\t      return ctx.stylize('undefined', 'undefined');\n\t\n\t    case 'string':\n\t      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n\t                                               .replace(/'/g, \"\\\\'\")\n\t                                               .replace(/\\\\\"/g, '\"') + '\\'';\n\t      return ctx.stylize(simple, 'string');\n\t\n\t    case 'number':\n\t      if (value === 0 && (1/value) === -Infinity) {\n\t        return ctx.stylize('-0', 'number');\n\t      }\n\t      return ctx.stylize('' + value, 'number');\n\t\n\t    case 'boolean':\n\t      return ctx.stylize('' + value, 'boolean');\n\t  }\n\t  // For some reason typeof null is \"object\", so special case here.\n\t  if (value === null) {\n\t    return ctx.stylize('null', 'null');\n\t  }\n\t}\n\t\n\t\n\tfunction formatError(value) {\n\t  return '[' + Error.prototype.toString.call(value) + ']';\n\t}\n\t\n\t\n\tfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n\t  var output = [];\n\t  for (var i = 0, l = value.length; i < l; ++i) {\n\t    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          String(i), true));\n\t    } else {\n\t      output.push('');\n\t    }\n\t  }\n\t  keys.forEach(function(key) {\n\t    if (!key.match(/^\\d+$/)) {\n\t      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n\t          key, true));\n\t    }\n\t  });\n\t  return output;\n\t}\n\t\n\t\n\tfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n\t  var name, str;\n\t  if (value.__lookupGetter__) {\n\t    if (value.__lookupGetter__(key)) {\n\t      if (value.__lookupSetter__(key)) {\n\t        str = ctx.stylize('[Getter/Setter]', 'special');\n\t      } else {\n\t        str = ctx.stylize('[Getter]', 'special');\n\t      }\n\t    } else {\n\t      if (value.__lookupSetter__(key)) {\n\t        str = ctx.stylize('[Setter]', 'special');\n\t      }\n\t    }\n\t  }\n\t  if (visibleKeys.indexOf(key) < 0) {\n\t    name = '[' + key + ']';\n\t  }\n\t  if (!str) {\n\t    if (ctx.seen.indexOf(value[key]) < 0) {\n\t      if (recurseTimes === null) {\n\t        str = formatValue(ctx, value[key], null);\n\t      } else {\n\t        str = formatValue(ctx, value[key], recurseTimes - 1);\n\t      }\n\t      if (str.indexOf('\\n') > -1) {\n\t        if (array) {\n\t          str = str.split('\\n').map(function(line) {\n\t            return '  ' + line;\n\t          }).join('\\n').substr(2);\n\t        } else {\n\t          str = '\\n' + str.split('\\n').map(function(line) {\n\t            return '   ' + line;\n\t          }).join('\\n');\n\t        }\n\t      }\n\t    } else {\n\t      str = ctx.stylize('[Circular]', 'special');\n\t    }\n\t  }\n\t  if (typeof name === 'undefined') {\n\t    if (array && key.match(/^\\d+$/)) {\n\t      return str;\n\t    }\n\t    name = JSON.stringify('' + key);\n\t    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n\t      name = name.substr(1, name.length - 2);\n\t      name = ctx.stylize(name, 'name');\n\t    } else {\n\t      name = name.replace(/'/g, \"\\\\'\")\n\t                 .replace(/\\\\\"/g, '\"')\n\t                 .replace(/(^\"|\"$)/g, \"'\");\n\t      name = ctx.stylize(name, 'string');\n\t    }\n\t  }\n\t\n\t  return name + ': ' + str;\n\t}\n\t\n\t\n\tfunction reduceToSingleString(output, base, braces) {\n\t  var numLinesEst = 0;\n\t  var length = output.reduce(function(prev, cur) {\n\t    numLinesEst++;\n\t    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n\t    return prev + cur.length + 1;\n\t  }, 0);\n\t\n\t  if (length > 60) {\n\t    return braces[0] +\n\t           (base === '' ? '' : base + '\\n ') +\n\t           ' ' +\n\t           output.join(',\\n  ') +\n\t           ' ' +\n\t           braces[1];\n\t  }\n\t\n\t  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n\t}\n\t\n\tfunction isArray(ar) {\n\t  return Array.isArray(ar) ||\n\t         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n\t}\n\t\n\tfunction isRegExp(re) {\n\t  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n\t}\n\t\n\tfunction isDate(d) {\n\t  return typeof d === 'object' && objectToString(d) === '[object Date]';\n\t}\n\t\n\tfunction isError(e) {\n\t  return typeof e === 'object' && objectToString(e) === '[object Error]';\n\t}\n\t\n\tfunction objectToString(o) {\n\t  return Object.prototype.toString.call(o);\n\t}\n\n\n/***/ },\n/* 35 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chai - getName utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * # getName(func)\n\t *\n\t * Gets the name of a function, in a cross-browser way.\n\t *\n\t * @param {Function} a function (usually a constructor)\n\t */\n\t\n\tmodule.exports = function (func) {\n\t  if (func.name) return func.name;\n\t\n\t  var match = /^\\s?function ([^(]*)\\(/.exec(func);\n\t  return match && match[1] ? match[1] : \"\";\n\t};\n\n\n/***/ },\n/* 36 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chai - getProperties utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * ### .getProperties(object)\n\t *\n\t * This allows the retrieval of property names of an object, enumerable or not,\n\t * inherited or not.\n\t *\n\t * @param {Object} object\n\t * @returns {Array}\n\t * @name getProperties\n\t * @api public\n\t */\n\t\n\tmodule.exports = function getProperties(object) {\n\t  var result = Object.getOwnPropertyNames(object);\n\t\n\t  function addProperty(property) {\n\t    if (result.indexOf(property) === -1) {\n\t      result.push(property);\n\t    }\n\t  }\n\t\n\t  var proto = Object.getPrototypeOf(object);\n\t  while (proto !== null) {\n\t    Object.getOwnPropertyNames(proto).forEach(addProperty);\n\t    proto = Object.getPrototypeOf(proto);\n\t  }\n\t\n\t  return result;\n\t};\n\n\n/***/ },\n/* 37 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chai - getEnumerableProperties utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * ### .getEnumerableProperties(object)\n\t *\n\t * This allows the retrieval of enumerable property names of an object,\n\t * inherited or not.\n\t *\n\t * @param {Object} object\n\t * @returns {Array}\n\t * @name getEnumerableProperties\n\t * @api public\n\t */\n\t\n\tmodule.exports = function getEnumerableProperties(object) {\n\t  var result = [];\n\t  for (var name in object) {\n\t    result.push(name);\n\t  }\n\t  return result;\n\t};\n\n\n/***/ },\n/* 38 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - flag utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/*!\n\t * Module dependancies\n\t */\n\t\n\tvar inspect = __webpack_require__(34);\n\tvar config = __webpack_require__(39);\n\t\n\t/**\n\t * ### .objDisplay (object)\n\t *\n\t * Determines if an object or an array matches\n\t * criteria to be inspected in-line for error\n\t * messages or should be truncated.\n\t *\n\t * @param {Mixed} javascript object to inspect\n\t * @name objDisplay\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (obj) {\n\t  var str = inspect(obj)\n\t    , type = Object.prototype.toString.call(obj);\n\t\n\t  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n\t    if (type === '[object Function]') {\n\t      return !obj.name || obj.name === ''\n\t        ? '[Function]'\n\t        : '[Function: ' + obj.name + ']';\n\t    } else if (type === '[object Array]') {\n\t      return '[ Array(' + obj.length + ') ]';\n\t    } else if (type === '[object Object]') {\n\t      var keys = Object.keys(obj)\n\t        , kstr = keys.length > 2\n\t          ? keys.splice(0, 2).join(', ') + ', ...'\n\t          : keys.join(', ');\n\t      return '{ Object (' + kstr + ') }';\n\t    } else {\n\t      return str;\n\t    }\n\t  } else {\n\t    return str;\n\t  }\n\t};\n\n\n/***/ },\n/* 39 */\n/***/ function(module, exports) {\n\n\tmodule.exports = {\n\t\n\t  /**\n\t   * ### config.includeStack\n\t   *\n\t   * User configurable property, influences whether stack trace\n\t   * is included in Assertion error message. Default of false\n\t   * suppresses stack trace in the error message.\n\t   *\n\t   *     chai.config.includeStack = true;  // enable stack on error\n\t   *\n\t   * @param {Boolean}\n\t   * @api public\n\t   */\n\t\n\t   includeStack: false,\n\t\n\t  /**\n\t   * ### config.showDiff\n\t   *\n\t   * User configurable property, influences whether or not\n\t   * the `showDiff` flag should be included in the thrown\n\t   * AssertionErrors. `false` will always be `false`; `true`\n\t   * will be true when the assertion has requested a diff\n\t   * be shown.\n\t   *\n\t   * @param {Boolean}\n\t   * @api public\n\t   */\n\t\n\t  showDiff: true,\n\t\n\t  /**\n\t   * ### config.truncateThreshold\n\t   *\n\t   * User configurable property, sets length threshold for actual and\n\t   * expected values in assertion errors. If this threshold is exceeded, for\n\t   * example for large data structures, the value is replaced with something\n\t   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n\t   *\n\t   * Set it to zero if you want to disable truncating altogether.\n\t   *\n\t   * This is especially userful when doing assertions on arrays: having this\n\t   * set to a reasonable large value makes the failure messages readily\n\t   * inspectable.\n\t   *\n\t   *     chai.config.truncateThreshold = 0;  // disable truncating\n\t   *\n\t   * @param {Number}\n\t   * @api public\n\t   */\n\t\n\t  truncateThreshold: 40\n\t\n\t};\n\n\n/***/ },\n/* 40 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chai - transferFlags utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * ### transferFlags(assertion, object, includeAll = true)\n\t *\n\t * Transfer all the flags for `assertion` to `object`. If\n\t * `includeAll` is set to `false`, then the base Chai\n\t * assertion flags (namely `object`, `ssfi`, and `message`)\n\t * will not be transferred.\n\t *\n\t *\n\t *     var newAssertion = new Assertion();\n\t *     utils.transferFlags(assertion, newAssertion);\n\t *\n\t *     var anotherAsseriton = new Assertion(myObj);\n\t *     utils.transferFlags(assertion, anotherAssertion, false);\n\t *\n\t * @param {Assertion} assertion the assertion to transfer the flags from\n\t * @param {Object} object the object to transfer the flags to; usually a new assertion\n\t * @param {Boolean} includeAll\n\t * @name transferFlags\n\t * @api private\n\t */\n\t\n\tmodule.exports = function (assertion, object, includeAll) {\n\t  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\t\n\t  if (!object.__flags) {\n\t    object.__flags = Object.create(null);\n\t  }\n\t\n\t  includeAll = arguments.length === 3 ? includeAll : true;\n\t\n\t  for (var flag in flags) {\n\t    if (includeAll ||\n\t        (flag !== 'object' && flag !== 'ssfi' && flag != 'message')) {\n\t      object.__flags[flag] = flags[flag];\n\t    }\n\t  }\n\t};\n\n\n/***/ },\n/* 41 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(42);\n\n\n/***/ },\n/* 42 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * deep-eql\n\t * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/*!\n\t * Module dependencies\n\t */\n\t\n\tvar type = __webpack_require__(43);\n\t\n\t/*!\n\t * Buffer.isBuffer browser shim\n\t */\n\t\n\tvar Buffer;\n\ttry { Buffer = __webpack_require__(45).Buffer; }\n\tcatch(ex) {\n\t  Buffer = {};\n\t  Buffer.isBuffer = function() { return false; }\n\t}\n\t\n\t/*!\n\t * Primary Export\n\t */\n\t\n\tmodule.exports = deepEqual;\n\t\n\t/**\n\t * Assert super-strict (egal) equality between\n\t * two objects of any type.\n\t *\n\t * @param {Mixed} a\n\t * @param {Mixed} b\n\t * @param {Array} memoised (optional)\n\t * @return {Boolean} equal match\n\t */\n\t\n\tfunction deepEqual(a, b, m) {\n\t  if (sameValue(a, b)) {\n\t    return true;\n\t  } else if ('date' === type(a)) {\n\t    return dateEqual(a, b);\n\t  } else if ('regexp' === type(a)) {\n\t    return regexpEqual(a, b);\n\t  } else if (Buffer.isBuffer(a)) {\n\t    return bufferEqual(a, b);\n\t  } else if ('arguments' === type(a)) {\n\t    return argumentsEqual(a, b, m);\n\t  } else if (!typeEqual(a, b)) {\n\t    return false;\n\t  } else if (('object' !== type(a) && 'object' !== type(b))\n\t  && ('array' !== type(a) && 'array' !== type(b))) {\n\t    return sameValue(a, b);\n\t  } else {\n\t    return objectEqual(a, b, m);\n\t  }\n\t}\n\t\n\t/*!\n\t * Strict (egal) equality test. Ensures that NaN always\n\t * equals NaN and `-0` does not equal `+0`.\n\t *\n\t * @param {Mixed} a\n\t * @param {Mixed} b\n\t * @return {Boolean} equal match\n\t */\n\t\n\tfunction sameValue(a, b) {\n\t  if (a === b) return a !== 0 || 1 / a === 1 / b;\n\t  return a !== a && b !== b;\n\t}\n\t\n\t/*!\n\t * Compare the types of two given objects and\n\t * return if they are equal. Note that an Array\n\t * has a type of `array` (not `object`) and arguments\n\t * have a type of `arguments` (not `array`/`object`).\n\t *\n\t * @param {Mixed} a\n\t * @param {Mixed} b\n\t * @return {Boolean} result\n\t */\n\t\n\tfunction typeEqual(a, b) {\n\t  return type(a) === type(b);\n\t}\n\t\n\t/*!\n\t * Compare two Date objects by asserting that\n\t * the time values are equal using `saveValue`.\n\t *\n\t * @param {Date} a\n\t * @param {Date} b\n\t * @return {Boolean} result\n\t */\n\t\n\tfunction dateEqual(a, b) {\n\t  if ('date' !== type(b)) return false;\n\t  return sameValue(a.getTime(), b.getTime());\n\t}\n\t\n\t/*!\n\t * Compare two regular expressions by converting them\n\t * to string and checking for `sameValue`.\n\t *\n\t * @param {RegExp} a\n\t * @param {RegExp} b\n\t * @return {Boolean} result\n\t */\n\t\n\tfunction regexpEqual(a, b) {\n\t  if ('regexp' !== type(b)) return false;\n\t  return sameValue(a.toString(), b.toString());\n\t}\n\t\n\t/*!\n\t * Assert deep equality of two `arguments` objects.\n\t * Unfortunately, these must be sliced to arrays\n\t * prior to test to ensure no bad behavior.\n\t *\n\t * @param {Arguments} a\n\t * @param {Arguments} b\n\t * @param {Array} memoize (optional)\n\t * @return {Boolean} result\n\t */\n\t\n\tfunction argumentsEqual(a, b, m) {\n\t  if ('arguments' !== type(b)) return false;\n\t  a = [].slice.call(a);\n\t  b = [].slice.call(b);\n\t  return deepEqual(a, b, m);\n\t}\n\t\n\t/*!\n\t * Get enumerable properties of a given object.\n\t *\n\t * @param {Object} a\n\t * @return {Array} property names\n\t */\n\t\n\tfunction enumerable(a) {\n\t  var res = [];\n\t  for (var key in a) res.push(key);\n\t  return res;\n\t}\n\t\n\t/*!\n\t * Simple equality for flat iterable objects\n\t * such as Arrays or Node.js buffers.\n\t *\n\t * @param {Iterable} a\n\t * @param {Iterable} b\n\t * @return {Boolean} result\n\t */\n\t\n\tfunction iterableEqual(a, b) {\n\t  if (a.length !==  b.length) return false;\n\t\n\t  var i = 0;\n\t  var match = true;\n\t\n\t  for (; i < a.length; i++) {\n\t    if (a[i] !== b[i]) {\n\t      match = false;\n\t      break;\n\t    }\n\t  }\n\t\n\t  return match;\n\t}\n\t\n\t/*!\n\t * Extension to `iterableEqual` specifically\n\t * for Node.js Buffers.\n\t *\n\t * @param {Buffer} a\n\t * @param {Mixed} b\n\t * @return {Boolean} result\n\t */\n\t\n\tfunction bufferEqual(a, b) {\n\t  if (!Buffer.isBuffer(b)) return false;\n\t  return iterableEqual(a, b);\n\t}\n\t\n\t/*!\n\t * Block for `objectEqual` ensuring non-existing\n\t * values don't get in.\n\t *\n\t * @param {Mixed} object\n\t * @return {Boolean} result\n\t */\n\t\n\tfunction isValue(a) {\n\t  return a !== null && a !== undefined;\n\t}\n\t\n\t/*!\n\t * Recursively check the equality of two objects.\n\t * Once basic sameness has been established it will\n\t * defer to `deepEqual` for each enumerable key\n\t * in the object.\n\t *\n\t * @param {Mixed} a\n\t * @param {Mixed} b\n\t * @return {Boolean} result\n\t */\n\t\n\tfunction objectEqual(a, b, m) {\n\t  if (!isValue(a) || !isValue(b)) {\n\t    return false;\n\t  }\n\t\n\t  if (a.prototype !== b.prototype) {\n\t    return false;\n\t  }\n\t\n\t  var i;\n\t  if (m) {\n\t    for (i = 0; i < m.length; i++) {\n\t      if ((m[i][0] === a && m[i][1] === b)\n\t      ||  (m[i][0] === b && m[i][1] === a)) {\n\t        return true;\n\t      }\n\t    }\n\t  } else {\n\t    m = [];\n\t  }\n\t\n\t  try {\n\t    var ka = enumerable(a);\n\t    var kb = enumerable(b);\n\t  } catch (ex) {\n\t    return false;\n\t  }\n\t\n\t  ka.sort();\n\t  kb.sort();\n\t\n\t  if (!iterableEqual(ka, kb)) {\n\t    return false;\n\t  }\n\t\n\t  m.push([ a, b ]);\n\t\n\t  var key;\n\t  for (i = ka.length - 1; i >= 0; i--) {\n\t    key = ka[i];\n\t    if (!deepEqual(a[key], b[key], m)) {\n\t      return false;\n\t    }\n\t  }\n\t\n\t  return true;\n\t}\n\n\n/***/ },\n/* 43 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __webpack_require__(44);\n\n\n/***/ },\n/* 44 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * type-detect\n\t * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/*!\n\t * Primary Exports\n\t */\n\t\n\tvar exports = module.exports = getType;\n\t\n\t/*!\n\t * Detectable javascript natives\n\t */\n\t\n\tvar natives = {\n\t    '[object Array]': 'array'\n\t  , '[object RegExp]': 'regexp'\n\t  , '[object Function]': 'function'\n\t  , '[object Arguments]': 'arguments'\n\t  , '[object Date]': 'date'\n\t};\n\t\n\t/**\n\t * ### typeOf (obj)\n\t *\n\t * Use several different techniques to determine\n\t * the type of object being tested.\n\t *\n\t *\n\t * @param {Mixed} object\n\t * @return {String} object type\n\t * @api public\n\t */\n\t\n\tfunction getType (obj) {\n\t  var str = Object.prototype.toString.call(obj);\n\t  if (natives[str]) return natives[str];\n\t  if (obj === null) return 'null';\n\t  if (obj === undefined) return 'undefined';\n\t  if (obj === Object(obj)) return 'object';\n\t  return typeof obj;\n\t}\n\t\n\texports.Library = Library;\n\t\n\t/**\n\t * ### Library\n\t *\n\t * Create a repository for custom type detection.\n\t *\n\t * ```js\n\t * var lib = new type.Library;\n\t * ```\n\t *\n\t */\n\t\n\tfunction Library () {\n\t  this.tests = {};\n\t}\n\t\n\t/**\n\t * #### .of (obj)\n\t *\n\t * Expose replacement `typeof` detection to the library.\n\t *\n\t * ```js\n\t * if ('string' === lib.of('hello world')) {\n\t *   // ...\n\t * }\n\t * ```\n\t *\n\t * @param {Mixed} object to test\n\t * @return {String} type\n\t */\n\t\n\tLibrary.prototype.of = getType;\n\t\n\t/**\n\t * #### .define (type, test)\n\t *\n\t * Add a test to for the `.test()` assertion.\n\t *\n\t * Can be defined as a regular expression:\n\t *\n\t * ```js\n\t * lib.define('int', /^[0-9]+$/);\n\t * ```\n\t *\n\t * ... or as a function:\n\t *\n\t * ```js\n\t * lib.define('bln', function (obj) {\n\t *   if ('boolean' === lib.of(obj)) return true;\n\t *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n\t *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n\t *   return !! ~blns.indexOf(obj);\n\t * });\n\t * ```\n\t *\n\t * @param {String} type\n\t * @param {RegExp|Function} test\n\t * @api public\n\t */\n\t\n\tLibrary.prototype.define = function (type, test) {\n\t  if (arguments.length === 1) return this.tests[type];\n\t  this.tests[type] = test;\n\t  return this;\n\t};\n\t\n\t/**\n\t * #### .test (obj, test)\n\t *\n\t * Assert that an object is of type. Will first\n\t * check natives, and if that does not pass it will\n\t * use the user defined custom tests.\n\t *\n\t * ```js\n\t * assert(lib.test('1', 'int'));\n\t * assert(lib.test('yes', 'bln'));\n\t * ```\n\t *\n\t * @param {Mixed} object\n\t * @param {String} type\n\t * @return {Boolean} result\n\t * @api public\n\t */\n\t\n\tLibrary.prototype.test = function (obj, type) {\n\t  if (type === getType(obj)) return true;\n\t  var test = this.tests[type];\n\t\n\t  if (test && 'regexp' === getType(test)) {\n\t    return test.test(obj);\n\t  } else if (test && 'function' === getType(test)) {\n\t    return test(obj);\n\t  } else {\n\t    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n\t  }\n\t};\n\n\n/***/ },\n/* 45 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/* WEBPACK VAR INJECTION */(function(Buffer, global) {/*!\n\t * The buffer module from node.js, for the browser.\n\t *\n\t * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n\t * @license  MIT\n\t */\n\t/* eslint-disable no-proto */\n\t\n\tvar base64 = __webpack_require__(46)\n\tvar ieee754 = __webpack_require__(47)\n\tvar isArray = __webpack_require__(48)\n\t\n\texports.Buffer = Buffer\n\texports.SlowBuffer = SlowBuffer\n\texports.INSPECT_MAX_BYTES = 50\n\tBuffer.poolSize = 8192 // not used by this implementation\n\t\n\tvar rootParent = {}\n\t\n\t/**\n\t * If `Buffer.TYPED_ARRAY_SUPPORT`:\n\t *   === true    Use Uint8Array implementation (fastest)\n\t *   === false   Use Object implementation (most compatible, even IE6)\n\t *\n\t * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n\t * Opera 11.6+, iOS 4.2+.\n\t *\n\t * Due to various browser bugs, sometimes the Object implementation will be used even\n\t * when the browser supports typed arrays.\n\t *\n\t * Note:\n\t *\n\t *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n\t *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n\t *\n\t *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n\t *     on objects.\n\t *\n\t *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n\t *\n\t *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n\t *     incorrect length in some situations.\n\t\n\t * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n\t * get the Object implementation, which is slower but behaves correctly.\n\t */\n\tBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n\t  ? global.TYPED_ARRAY_SUPPORT\n\t  : typedArraySupport()\n\t\n\tfunction typedArraySupport () {\n\t  function Bar () {}\n\t  try {\n\t    var arr = new Uint8Array(1)\n\t    arr.foo = function () { return 42 }\n\t    arr.constructor = Bar\n\t    return arr.foo() === 42 && // typed array instances can be augmented\n\t        arr.constructor === Bar && // constructor can be set\n\t        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n\t        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n\t  } catch (e) {\n\t    return false\n\t  }\n\t}\n\t\n\tfunction kMaxLength () {\n\t  return Buffer.TYPED_ARRAY_SUPPORT\n\t    ? 0x7fffffff\n\t    : 0x3fffffff\n\t}\n\t\n\t/**\n\t * Class: Buffer\n\t * =============\n\t *\n\t * The Buffer constructor returns instances of `Uint8Array` that are augmented\n\t * with function properties for all the node `Buffer` API functions. We use\n\t * `Uint8Array` so that square bracket notation works as expected -- it returns\n\t * a single octet.\n\t *\n\t * By augmenting the instances, we can avoid modifying the `Uint8Array`\n\t * prototype.\n\t */\n\tfunction Buffer (arg) {\n\t  if (!(this instanceof Buffer)) {\n\t    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n\t    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n\t    return new Buffer(arg)\n\t  }\n\t\n\t  this.length = 0\n\t  this.parent = undefined\n\t\n\t  // Common case.\n\t  if (typeof arg === 'number') {\n\t    return fromNumber(this, arg)\n\t  }\n\t\n\t  // Slightly less common case.\n\t  if (typeof arg === 'string') {\n\t    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n\t  }\n\t\n\t  // Unusual.\n\t  return fromObject(this, arg)\n\t}\n\t\n\tfunction fromNumber (that, length) {\n\t  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n\t    for (var i = 0; i < length; i++) {\n\t      that[i] = 0\n\t    }\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromString (that, string, encoding) {\n\t  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\t\n\t  // Assumption: byteLength() return value is always < kMaxLength.\n\t  var length = byteLength(string, encoding) | 0\n\t  that = allocate(that, length)\n\t\n\t  that.write(string, encoding)\n\t  return that\n\t}\n\t\n\tfunction fromObject (that, object) {\n\t  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\t\n\t  if (isArray(object)) return fromArray(that, object)\n\t\n\t  if (object == null) {\n\t    throw new TypeError('must start with number, buffer, array or string')\n\t  }\n\t\n\t  if (typeof ArrayBuffer !== 'undefined') {\n\t    if (object.buffer instanceof ArrayBuffer) {\n\t      return fromTypedArray(that, object)\n\t    }\n\t    if (object instanceof ArrayBuffer) {\n\t      return fromArrayBuffer(that, object)\n\t    }\n\t  }\n\t\n\t  if (object.length) return fromArrayLike(that, object)\n\t\n\t  return fromJsonObject(that, object)\n\t}\n\t\n\tfunction fromBuffer (that, buffer) {\n\t  var length = checked(buffer.length) | 0\n\t  that = allocate(that, length)\n\t  buffer.copy(that, 0, 0, length)\n\t  return that\n\t}\n\t\n\tfunction fromArray (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\t// Duplicate of fromArray() to keep fromArray() monomorphic.\n\tfunction fromTypedArray (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  // Truncating the elements is probably not what people expect from typed\n\t  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n\t  // of the old Buffer constructor.\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayBuffer (that, array) {\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    array.byteLength\n\t    that = Buffer._augment(new Uint8Array(array))\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that = fromTypedArray(that, new Uint8Array(array))\n\t  }\n\t  return that\n\t}\n\t\n\tfunction fromArrayLike (that, array) {\n\t  var length = checked(array.length) | 0\n\t  that = allocate(that, length)\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\t// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n\t// Returns a zero-length buffer for inputs that don't conform to the spec.\n\tfunction fromJsonObject (that, object) {\n\t  var array\n\t  var length = 0\n\t\n\t  if (object.type === 'Buffer' && isArray(object.data)) {\n\t    array = object.data\n\t    length = checked(array.length) | 0\n\t  }\n\t  that = allocate(that, length)\n\t\n\t  for (var i = 0; i < length; i += 1) {\n\t    that[i] = array[i] & 255\n\t  }\n\t  return that\n\t}\n\t\n\tif (Buffer.TYPED_ARRAY_SUPPORT) {\n\t  Buffer.prototype.__proto__ = Uint8Array.prototype\n\t  Buffer.__proto__ = Uint8Array\n\t}\n\t\n\tfunction allocate (that, length) {\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // Return an augmented `Uint8Array` instance, for best performance\n\t    that = Buffer._augment(new Uint8Array(length))\n\t    that.__proto__ = Buffer.prototype\n\t  } else {\n\t    // Fallback: Return an object instance of the Buffer class\n\t    that.length = length\n\t    that._isBuffer = true\n\t  }\n\t\n\t  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n\t  if (fromPool) that.parent = rootParent\n\t\n\t  return that\n\t}\n\t\n\tfunction checked (length) {\n\t  // Note: cannot use `length < kMaxLength` here because that fails when\n\t  // length is NaN (which is otherwise coerced to zero.)\n\t  if (length >= kMaxLength()) {\n\t    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n\t                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n\t  }\n\t  return length | 0\n\t}\n\t\n\tfunction SlowBuffer (subject, encoding) {\n\t  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\t\n\t  var buf = new Buffer(subject, encoding)\n\t  delete buf.parent\n\t  return buf\n\t}\n\t\n\tBuffer.isBuffer = function isBuffer (b) {\n\t  return !!(b != null && b._isBuffer)\n\t}\n\t\n\tBuffer.compare = function compare (a, b) {\n\t  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n\t    throw new TypeError('Arguments must be Buffers')\n\t  }\n\t\n\t  if (a === b) return 0\n\t\n\t  var x = a.length\n\t  var y = b.length\n\t\n\t  var i = 0\n\t  var len = Math.min(x, y)\n\t  while (i < len) {\n\t    if (a[i] !== b[i]) break\n\t\n\t    ++i\n\t  }\n\t\n\t  if (i !== len) {\n\t    x = a[i]\n\t    y = b[i]\n\t  }\n\t\n\t  if (x < y) return -1\n\t  if (y < x) return 1\n\t  return 0\n\t}\n\t\n\tBuffer.isEncoding = function isEncoding (encoding) {\n\t  switch (String(encoding).toLowerCase()) {\n\t    case 'hex':\n\t    case 'utf8':\n\t    case 'utf-8':\n\t    case 'ascii':\n\t    case 'binary':\n\t    case 'base64':\n\t    case 'raw':\n\t    case 'ucs2':\n\t    case 'ucs-2':\n\t    case 'utf16le':\n\t    case 'utf-16le':\n\t      return true\n\t    default:\n\t      return false\n\t  }\n\t}\n\t\n\tBuffer.concat = function concat (list, length) {\n\t  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\t\n\t  if (list.length === 0) {\n\t    return new Buffer(0)\n\t  }\n\t\n\t  var i\n\t  if (length === undefined) {\n\t    length = 0\n\t    for (i = 0; i < list.length; i++) {\n\t      length += list[i].length\n\t    }\n\t  }\n\t\n\t  var buf = new Buffer(length)\n\t  var pos = 0\n\t  for (i = 0; i < list.length; i++) {\n\t    var item = list[i]\n\t    item.copy(buf, pos)\n\t    pos += item.length\n\t  }\n\t  return buf\n\t}\n\t\n\tfunction byteLength (string, encoding) {\n\t  if (typeof string !== 'string') string = '' + string\n\t\n\t  var len = string.length\n\t  if (len === 0) return 0\n\t\n\t  // Use a for loop to avoid recursion\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'ascii':\n\t      case 'binary':\n\t      // Deprecated\n\t      case 'raw':\n\t      case 'raws':\n\t        return len\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8ToBytes(string).length\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return len * 2\n\t      case 'hex':\n\t        return len >>> 1\n\t      case 'base64':\n\t        return base64ToBytes(string).length\n\t      default:\n\t        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\tBuffer.byteLength = byteLength\n\t\n\t// pre-set for values that may exist in the future\n\tBuffer.prototype.length = undefined\n\tBuffer.prototype.parent = undefined\n\t\n\tfunction slowToString (encoding, start, end) {\n\t  var loweredCase = false\n\t\n\t  start = start | 0\n\t  end = end === undefined || end === Infinity ? this.length : end | 0\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t  if (start < 0) start = 0\n\t  if (end > this.length) end = this.length\n\t  if (end <= start) return ''\n\t\n\t  while (true) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexSlice(this, start, end)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Slice(this, start, end)\n\t\n\t      case 'ascii':\n\t        return asciiSlice(this, start, end)\n\t\n\t      case 'binary':\n\t        return binarySlice(this, start, end)\n\t\n\t      case 'base64':\n\t        return base64Slice(this, start, end)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return utf16leSlice(this, start, end)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = (encoding + '').toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toString = function toString () {\n\t  var length = this.length | 0\n\t  if (length === 0) return ''\n\t  if (arguments.length === 0) return utf8Slice(this, 0, length)\n\t  return slowToString.apply(this, arguments)\n\t}\n\t\n\tBuffer.prototype.equals = function equals (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return true\n\t  return Buffer.compare(this, b) === 0\n\t}\n\t\n\tBuffer.prototype.inspect = function inspect () {\n\t  var str = ''\n\t  var max = exports.INSPECT_MAX_BYTES\n\t  if (this.length > 0) {\n\t    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n\t    if (this.length > max) str += ' ... '\n\t  }\n\t  return '<Buffer ' + str + '>'\n\t}\n\t\n\tBuffer.prototype.compare = function compare (b) {\n\t  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n\t  if (this === b) return 0\n\t  return Buffer.compare(this, b)\n\t}\n\t\n\tBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n\t  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n\t  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n\t  byteOffset >>= 0\n\t\n\t  if (this.length === 0) return -1\n\t  if (byteOffset >= this.length) return -1\n\t\n\t  // Negative offsets start from the end of the buffer\n\t  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\t\n\t  if (typeof val === 'string') {\n\t    if (val.length === 0) return -1 // special case: looking for empty string always fails\n\t    return String.prototype.indexOf.call(this, val, byteOffset)\n\t  }\n\t  if (Buffer.isBuffer(val)) {\n\t    return arrayIndexOf(this, val, byteOffset)\n\t  }\n\t  if (typeof val === 'number') {\n\t    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n\t      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n\t    }\n\t    return arrayIndexOf(this, [ val ], byteOffset)\n\t  }\n\t\n\t  function arrayIndexOf (arr, val, byteOffset) {\n\t    var foundIndex = -1\n\t    for (var i = 0; byteOffset + i < arr.length; i++) {\n\t      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n\t        if (foundIndex === -1) foundIndex = i\n\t        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n\t      } else {\n\t        foundIndex = -1\n\t      }\n\t    }\n\t    return -1\n\t  }\n\t\n\t  throw new TypeError('val must be string, number or Buffer')\n\t}\n\t\n\t// `get` is deprecated\n\tBuffer.prototype.get = function get (offset) {\n\t  console.log('.get() is deprecated. Access using array indexes instead.')\n\t  return this.readUInt8(offset)\n\t}\n\t\n\t// `set` is deprecated\n\tBuffer.prototype.set = function set (v, offset) {\n\t  console.log('.set() is deprecated. Access using array indexes instead.')\n\t  return this.writeUInt8(v, offset)\n\t}\n\t\n\tfunction hexWrite (buf, string, offset, length) {\n\t  offset = Number(offset) || 0\n\t  var remaining = buf.length - offset\n\t  if (!length) {\n\t    length = remaining\n\t  } else {\n\t    length = Number(length)\n\t    if (length > remaining) {\n\t      length = remaining\n\t    }\n\t  }\n\t\n\t  // must be an even number of digits\n\t  var strLen = string.length\n\t  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\t\n\t  if (length > strLen / 2) {\n\t    length = strLen / 2\n\t  }\n\t  for (var i = 0; i < length; i++) {\n\t    var parsed = parseInt(string.substr(i * 2, 2), 16)\n\t    if (isNaN(parsed)) throw new Error('Invalid hex string')\n\t    buf[offset + i] = parsed\n\t  }\n\t  return i\n\t}\n\t\n\tfunction utf8Write (buf, string, offset, length) {\n\t  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tfunction asciiWrite (buf, string, offset, length) {\n\t  return blitBuffer(asciiToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction binaryWrite (buf, string, offset, length) {\n\t  return asciiWrite(buf, string, offset, length)\n\t}\n\t\n\tfunction base64Write (buf, string, offset, length) {\n\t  return blitBuffer(base64ToBytes(string), buf, offset, length)\n\t}\n\t\n\tfunction ucs2Write (buf, string, offset, length) {\n\t  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n\t}\n\t\n\tBuffer.prototype.write = function write (string, offset, length, encoding) {\n\t  // Buffer#write(string)\n\t  if (offset === undefined) {\n\t    encoding = 'utf8'\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, encoding)\n\t  } else if (length === undefined && typeof offset === 'string') {\n\t    encoding = offset\n\t    length = this.length\n\t    offset = 0\n\t  // Buffer#write(string, offset[, length][, encoding])\n\t  } else if (isFinite(offset)) {\n\t    offset = offset | 0\n\t    if (isFinite(length)) {\n\t      length = length | 0\n\t      if (encoding === undefined) encoding = 'utf8'\n\t    } else {\n\t      encoding = length\n\t      length = undefined\n\t    }\n\t  // legacy write(string, encoding, offset, length) - remove in v0.13\n\t  } else {\n\t    var swap = encoding\n\t    encoding = offset\n\t    offset = length | 0\n\t    length = swap\n\t  }\n\t\n\t  var remaining = this.length - offset\n\t  if (length === undefined || length > remaining) length = remaining\n\t\n\t  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n\t    throw new RangeError('attempt to write outside buffer bounds')\n\t  }\n\t\n\t  if (!encoding) encoding = 'utf8'\n\t\n\t  var loweredCase = false\n\t  for (;;) {\n\t    switch (encoding) {\n\t      case 'hex':\n\t        return hexWrite(this, string, offset, length)\n\t\n\t      case 'utf8':\n\t      case 'utf-8':\n\t        return utf8Write(this, string, offset, length)\n\t\n\t      case 'ascii':\n\t        return asciiWrite(this, string, offset, length)\n\t\n\t      case 'binary':\n\t        return binaryWrite(this, string, offset, length)\n\t\n\t      case 'base64':\n\t        // Warning: maxLength not taken into account in base64Write\n\t        return base64Write(this, string, offset, length)\n\t\n\t      case 'ucs2':\n\t      case 'ucs-2':\n\t      case 'utf16le':\n\t      case 'utf-16le':\n\t        return ucs2Write(this, string, offset, length)\n\t\n\t      default:\n\t        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n\t        encoding = ('' + encoding).toLowerCase()\n\t        loweredCase = true\n\t    }\n\t  }\n\t}\n\t\n\tBuffer.prototype.toJSON = function toJSON () {\n\t  return {\n\t    type: 'Buffer',\n\t    data: Array.prototype.slice.call(this._arr || this, 0)\n\t  }\n\t}\n\t\n\tfunction base64Slice (buf, start, end) {\n\t  if (start === 0 && end === buf.length) {\n\t    return base64.fromByteArray(buf)\n\t  } else {\n\t    return base64.fromByteArray(buf.slice(start, end))\n\t  }\n\t}\n\t\n\tfunction utf8Slice (buf, start, end) {\n\t  end = Math.min(buf.length, end)\n\t  var res = []\n\t\n\t  var i = start\n\t  while (i < end) {\n\t    var firstByte = buf[i]\n\t    var codePoint = null\n\t    var bytesPerSequence = (firstByte > 0xEF) ? 4\n\t      : (firstByte > 0xDF) ? 3\n\t      : (firstByte > 0xBF) ? 2\n\t      : 1\n\t\n\t    if (i + bytesPerSequence <= end) {\n\t      var secondByte, thirdByte, fourthByte, tempCodePoint\n\t\n\t      switch (bytesPerSequence) {\n\t        case 1:\n\t          if (firstByte < 0x80) {\n\t            codePoint = firstByte\n\t          }\n\t          break\n\t        case 2:\n\t          secondByte = buf[i + 1]\n\t          if ((secondByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n\t            if (tempCodePoint > 0x7F) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 3:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n\t            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t          break\n\t        case 4:\n\t          secondByte = buf[i + 1]\n\t          thirdByte = buf[i + 2]\n\t          fourthByte = buf[i + 3]\n\t          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n\t            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n\t            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n\t              codePoint = tempCodePoint\n\t            }\n\t          }\n\t      }\n\t    }\n\t\n\t    if (codePoint === null) {\n\t      // we did not generate a valid codePoint so insert a\n\t      // replacement char (U+FFFD) and advance only 1 byte\n\t      codePoint = 0xFFFD\n\t      bytesPerSequence = 1\n\t    } else if (codePoint > 0xFFFF) {\n\t      // encode to utf16 (surrogate pair dance)\n\t      codePoint -= 0x10000\n\t      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n\t      codePoint = 0xDC00 | codePoint & 0x3FF\n\t    }\n\t\n\t    res.push(codePoint)\n\t    i += bytesPerSequence\n\t  }\n\t\n\t  return decodeCodePointsArray(res)\n\t}\n\t\n\t// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n\t// the lowest limit is Chrome, with 0x10000 args.\n\t// We go 1 magnitude less, for safety\n\tvar MAX_ARGUMENTS_LENGTH = 0x1000\n\t\n\tfunction decodeCodePointsArray (codePoints) {\n\t  var len = codePoints.length\n\t  if (len <= MAX_ARGUMENTS_LENGTH) {\n\t    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n\t  }\n\t\n\t  // Decode in chunks to avoid \"call stack size exceeded\".\n\t  var res = ''\n\t  var i = 0\n\t  while (i < len) {\n\t    res += String.fromCharCode.apply(\n\t      String,\n\t      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n\t    )\n\t  }\n\t  return res\n\t}\n\t\n\tfunction asciiSlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i] & 0x7F)\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction binarySlice (buf, start, end) {\n\t  var ret = ''\n\t  end = Math.min(buf.length, end)\n\t\n\t  for (var i = start; i < end; i++) {\n\t    ret += String.fromCharCode(buf[i])\n\t  }\n\t  return ret\n\t}\n\t\n\tfunction hexSlice (buf, start, end) {\n\t  var len = buf.length\n\t\n\t  if (!start || start < 0) start = 0\n\t  if (!end || end < 0 || end > len) end = len\n\t\n\t  var out = ''\n\t  for (var i = start; i < end; i++) {\n\t    out += toHex(buf[i])\n\t  }\n\t  return out\n\t}\n\t\n\tfunction utf16leSlice (buf, start, end) {\n\t  var bytes = buf.slice(start, end)\n\t  var res = ''\n\t  for (var i = 0; i < bytes.length; i += 2) {\n\t    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n\t  }\n\t  return res\n\t}\n\t\n\tBuffer.prototype.slice = function slice (start, end) {\n\t  var len = this.length\n\t  start = ~~start\n\t  end = end === undefined ? len : ~~end\n\t\n\t  if (start < 0) {\n\t    start += len\n\t    if (start < 0) start = 0\n\t  } else if (start > len) {\n\t    start = len\n\t  }\n\t\n\t  if (end < 0) {\n\t    end += len\n\t    if (end < 0) end = 0\n\t  } else if (end > len) {\n\t    end = len\n\t  }\n\t\n\t  if (end < start) end = start\n\t\n\t  var newBuf\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    newBuf = Buffer._augment(this.subarray(start, end))\n\t  } else {\n\t    var sliceLen = end - start\n\t    newBuf = new Buffer(sliceLen, undefined)\n\t    for (var i = 0; i < sliceLen; i++) {\n\t      newBuf[i] = this[i + start]\n\t    }\n\t  }\n\t\n\t  if (newBuf.length) newBuf.parent = this.parent || this\n\t\n\t  return newBuf\n\t}\n\t\n\t/*\n\t * Need to make sure that buffer isn't trying to write out of bounds.\n\t */\n\tfunction checkOffset (offset, ext, length) {\n\t  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n\t  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n\t}\n\t\n\tBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) {\n\t    checkOffset(offset, byteLength, this.length)\n\t  }\n\t\n\t  var val = this[offset + --byteLength]\n\t  var mul = 1\n\t  while (byteLength > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --byteLength] * mul\n\t  }\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  return this[offset]\n\t}\n\t\n\tBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return this[offset] | (this[offset + 1] << 8)\n\t}\n\t\n\tBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  return (this[offset] << 8) | this[offset + 1]\n\t}\n\t\n\tBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return ((this[offset]) |\n\t      (this[offset + 1] << 8) |\n\t      (this[offset + 2] << 16)) +\n\t      (this[offset + 3] * 0x1000000)\n\t}\n\t\n\tBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] * 0x1000000) +\n\t    ((this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var val = this[offset]\n\t  var mul = 1\n\t  var i = 0\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    val += this[offset + i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\t\n\t  var i = byteLength\n\t  var mul = 1\n\t  var val = this[offset + --i]\n\t  while (i > 0 && (mul *= 0x100)) {\n\t    val += this[offset + --i] * mul\n\t  }\n\t  mul *= 0x80\n\t\n\t  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\t\n\t  return val\n\t}\n\t\n\tBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 1, this.length)\n\t  if (!(this[offset] & 0x80)) return (this[offset])\n\t  return ((0xff - this[offset] + 1) * -1)\n\t}\n\t\n\tBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset] | (this[offset + 1] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 2, this.length)\n\t  var val = this[offset + 1] | (this[offset] << 8)\n\t  return (val & 0x8000) ? val | 0xFFFF0000 : val\n\t}\n\t\n\tBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset]) |\n\t    (this[offset + 1] << 8) |\n\t    (this[offset + 2] << 16) |\n\t    (this[offset + 3] << 24)\n\t}\n\t\n\tBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t\n\t  return (this[offset] << 24) |\n\t    (this[offset + 1] << 16) |\n\t    (this[offset + 2] << 8) |\n\t    (this[offset + 3])\n\t}\n\t\n\tBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, true, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 4, this.length)\n\t  return ieee754.read(this, offset, false, 23, 4)\n\t}\n\t\n\tBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, true, 52, 8)\n\t}\n\t\n\tBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n\t  if (!noAssert) checkOffset(offset, 8, this.length)\n\t  return ieee754.read(this, offset, false, 52, 8)\n\t}\n\t\n\tfunction checkInt (buf, value, offset, ext, max, min) {\n\t  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t}\n\t\n\tBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\t\n\t  var mul = 1\n\t  var i = 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  byteLength = byteLength | 0\n\t  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = (value / mul) & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n\t    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n\t      (littleEndian ? i : 1 - i) * 8\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n\t    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n\t  }\n\t}\n\t\n\tBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset + 3] = (value >>> 24)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = 0\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset] = value & 0xFF\n\t  while (++i < byteLength && (mul *= 0x100)) {\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) {\n\t    var limit = Math.pow(2, 8 * byteLength - 1)\n\t\n\t    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n\t  }\n\t\n\t  var i = byteLength - 1\n\t  var mul = 1\n\t  var sub = value < 0 ? 1 : 0\n\t  this[offset + i] = value & 0xFF\n\t  while (--i >= 0 && (mul *= 0x100)) {\n\t    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n\t  }\n\t\n\t  return offset + byteLength\n\t}\n\t\n\tBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n\t  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n\t  if (value < 0) value = 0xff + value + 1\n\t  this[offset] = (value & 0xff)\n\t  return offset + 1\n\t}\n\t\n\tBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, true)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 8)\n\t    this[offset + 1] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt16(this, value, offset, false)\n\t  }\n\t  return offset + 2\n\t}\n\t\n\tBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value & 0xff)\n\t    this[offset + 1] = (value >>> 8)\n\t    this[offset + 2] = (value >>> 16)\n\t    this[offset + 3] = (value >>> 24)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, true)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n\t  value = +value\n\t  offset = offset | 0\n\t  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n\t  if (value < 0) value = 0xffffffff + value + 1\n\t  if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t    this[offset] = (value >>> 24)\n\t    this[offset + 1] = (value >>> 16)\n\t    this[offset + 2] = (value >>> 8)\n\t    this[offset + 3] = (value & 0xff)\n\t  } else {\n\t    objectWriteUInt32(this, value, offset, false)\n\t  }\n\t  return offset + 4\n\t}\n\t\n\tfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n\t  if (value > max || value < min) throw new RangeError('value is out of bounds')\n\t  if (offset + ext > buf.length) throw new RangeError('index out of range')\n\t  if (offset < 0) throw new RangeError('index out of range')\n\t}\n\t\n\tfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n\t  return offset + 4\n\t}\n\t\n\tBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n\t  return writeFloat(this, value, offset, false, noAssert)\n\t}\n\t\n\tfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n\t  if (!noAssert) {\n\t    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n\t  }\n\t  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n\t  return offset + 8\n\t}\n\t\n\tBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, true, noAssert)\n\t}\n\t\n\tBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n\t  return writeDouble(this, value, offset, false, noAssert)\n\t}\n\t\n\t// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\n\tBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n\t  if (!start) start = 0\n\t  if (!end && end !== 0) end = this.length\n\t  if (targetStart >= target.length) targetStart = target.length\n\t  if (!targetStart) targetStart = 0\n\t  if (end > 0 && end < start) end = start\n\t\n\t  // Copy 0 bytes; we're done\n\t  if (end === start) return 0\n\t  if (target.length === 0 || this.length === 0) return 0\n\t\n\t  // Fatal error conditions\n\t  if (targetStart < 0) {\n\t    throw new RangeError('targetStart out of bounds')\n\t  }\n\t  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n\t  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\t\n\t  // Are we oob?\n\t  if (end > this.length) end = this.length\n\t  if (target.length - targetStart < end - start) {\n\t    end = target.length - targetStart + start\n\t  }\n\t\n\t  var len = end - start\n\t  var i\n\t\n\t  if (this === target && start < targetStart && targetStart < end) {\n\t    // descending copy from end\n\t    for (i = len - 1; i >= 0; i--) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n\t    // ascending copy from start\n\t    for (i = 0; i < len; i++) {\n\t      target[i + targetStart] = this[i + start]\n\t    }\n\t  } else {\n\t    target._set(this.subarray(start, start + len), targetStart)\n\t  }\n\t\n\t  return len\n\t}\n\t\n\t// fill(value, start=0, end=buffer.length)\n\tBuffer.prototype.fill = function fill (value, start, end) {\n\t  if (!value) value = 0\n\t  if (!start) start = 0\n\t  if (!end) end = this.length\n\t\n\t  if (end < start) throw new RangeError('end < start')\n\t\n\t  // Fill 0 bytes; we're done\n\t  if (end === start) return\n\t  if (this.length === 0) return\n\t\n\t  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n\t  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\t\n\t  var i\n\t  if (typeof value === 'number') {\n\t    for (i = start; i < end; i++) {\n\t      this[i] = value\n\t    }\n\t  } else {\n\t    var bytes = utf8ToBytes(value.toString())\n\t    var len = bytes.length\n\t    for (i = start; i < end; i++) {\n\t      this[i] = bytes[i % len]\n\t    }\n\t  }\n\t\n\t  return this\n\t}\n\t\n\t/**\n\t * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n\t * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n\t */\n\tBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n\t  if (typeof Uint8Array !== 'undefined') {\n\t    if (Buffer.TYPED_ARRAY_SUPPORT) {\n\t      return (new Buffer(this)).buffer\n\t    } else {\n\t      var buf = new Uint8Array(this.length)\n\t      for (var i = 0, len = buf.length; i < len; i += 1) {\n\t        buf[i] = this[i]\n\t      }\n\t      return buf.buffer\n\t    }\n\t  } else {\n\t    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n\t  }\n\t}\n\t\n\t// HELPER FUNCTIONS\n\t// ================\n\t\n\tvar BP = Buffer.prototype\n\t\n\t/**\n\t * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n\t */\n\tBuffer._augment = function _augment (arr) {\n\t  arr.constructor = Buffer\n\t  arr._isBuffer = true\n\t\n\t  // save reference to original Uint8Array set method before overwriting\n\t  arr._set = arr.set\n\t\n\t  // deprecated\n\t  arr.get = BP.get\n\t  arr.set = BP.set\n\t\n\t  arr.write = BP.write\n\t  arr.toString = BP.toString\n\t  arr.toLocaleString = BP.toString\n\t  arr.toJSON = BP.toJSON\n\t  arr.equals = BP.equals\n\t  arr.compare = BP.compare\n\t  arr.indexOf = BP.indexOf\n\t  arr.copy = BP.copy\n\t  arr.slice = BP.slice\n\t  arr.readUIntLE = BP.readUIntLE\n\t  arr.readUIntBE = BP.readUIntBE\n\t  arr.readUInt8 = BP.readUInt8\n\t  arr.readUInt16LE = BP.readUInt16LE\n\t  arr.readUInt16BE = BP.readUInt16BE\n\t  arr.readUInt32LE = BP.readUInt32LE\n\t  arr.readUInt32BE = BP.readUInt32BE\n\t  arr.readIntLE = BP.readIntLE\n\t  arr.readIntBE = BP.readIntBE\n\t  arr.readInt8 = BP.readInt8\n\t  arr.readInt16LE = BP.readInt16LE\n\t  arr.readInt16BE = BP.readInt16BE\n\t  arr.readInt32LE = BP.readInt32LE\n\t  arr.readInt32BE = BP.readInt32BE\n\t  arr.readFloatLE = BP.readFloatLE\n\t  arr.readFloatBE = BP.readFloatBE\n\t  arr.readDoubleLE = BP.readDoubleLE\n\t  arr.readDoubleBE = BP.readDoubleBE\n\t  arr.writeUInt8 = BP.writeUInt8\n\t  arr.writeUIntLE = BP.writeUIntLE\n\t  arr.writeUIntBE = BP.writeUIntBE\n\t  arr.writeUInt16LE = BP.writeUInt16LE\n\t  arr.writeUInt16BE = BP.writeUInt16BE\n\t  arr.writeUInt32LE = BP.writeUInt32LE\n\t  arr.writeUInt32BE = BP.writeUInt32BE\n\t  arr.writeIntLE = BP.writeIntLE\n\t  arr.writeIntBE = BP.writeIntBE\n\t  arr.writeInt8 = BP.writeInt8\n\t  arr.writeInt16LE = BP.writeInt16LE\n\t  arr.writeInt16BE = BP.writeInt16BE\n\t  arr.writeInt32LE = BP.writeInt32LE\n\t  arr.writeInt32BE = BP.writeInt32BE\n\t  arr.writeFloatLE = BP.writeFloatLE\n\t  arr.writeFloatBE = BP.writeFloatBE\n\t  arr.writeDoubleLE = BP.writeDoubleLE\n\t  arr.writeDoubleBE = BP.writeDoubleBE\n\t  arr.fill = BP.fill\n\t  arr.inspect = BP.inspect\n\t  arr.toArrayBuffer = BP.toArrayBuffer\n\t\n\t  return arr\n\t}\n\t\n\tvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\t\n\tfunction base64clean (str) {\n\t  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n\t  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n\t  // Node converts strings with length < 2 to ''\n\t  if (str.length < 2) return ''\n\t  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n\t  while (str.length % 4 !== 0) {\n\t    str = str + '='\n\t  }\n\t  return str\n\t}\n\t\n\tfunction stringtrim (str) {\n\t  if (str.trim) return str.trim()\n\t  return str.replace(/^\\s+|\\s+$/g, '')\n\t}\n\t\n\tfunction toHex (n) {\n\t  if (n < 16) return '0' + n.toString(16)\n\t  return n.toString(16)\n\t}\n\t\n\tfunction utf8ToBytes (string, units) {\n\t  units = units || Infinity\n\t  var codePoint\n\t  var length = string.length\n\t  var leadSurrogate = null\n\t  var bytes = []\n\t\n\t  for (var i = 0; i < length; i++) {\n\t    codePoint = string.charCodeAt(i)\n\t\n\t    // is surrogate component\n\t    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n\t      // last char was a lead\n\t      if (!leadSurrogate) {\n\t        // no lead yet\n\t        if (codePoint > 0xDBFF) {\n\t          // unexpected trail\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        } else if (i + 1 === length) {\n\t          // unpaired lead\n\t          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t          continue\n\t        }\n\t\n\t        // valid lead\n\t        leadSurrogate = codePoint\n\t\n\t        continue\n\t      }\n\t\n\t      // 2 leads in a row\n\t      if (codePoint < 0xDC00) {\n\t        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t        leadSurrogate = codePoint\n\t        continue\n\t      }\n\t\n\t      // valid surrogate pair\n\t      codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n\t    } else if (leadSurrogate) {\n\t      // valid bmp char, but last char was a lead\n\t      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n\t    }\n\t\n\t    leadSurrogate = null\n\t\n\t    // encode utf8\n\t    if (codePoint < 0x80) {\n\t      if ((units -= 1) < 0) break\n\t      bytes.push(codePoint)\n\t    } else if (codePoint < 0x800) {\n\t      if ((units -= 2) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x6 | 0xC0,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x10000) {\n\t      if ((units -= 3) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0xC | 0xE0,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else if (codePoint < 0x110000) {\n\t      if ((units -= 4) < 0) break\n\t      bytes.push(\n\t        codePoint >> 0x12 | 0xF0,\n\t        codePoint >> 0xC & 0x3F | 0x80,\n\t        codePoint >> 0x6 & 0x3F | 0x80,\n\t        codePoint & 0x3F | 0x80\n\t      )\n\t    } else {\n\t      throw new Error('Invalid code point')\n\t    }\n\t  }\n\t\n\t  return bytes\n\t}\n\t\n\tfunction asciiToBytes (str) {\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    // Node's code seems to be doing this and not & 0x7F..\n\t    byteArray.push(str.charCodeAt(i) & 0xFF)\n\t  }\n\t  return byteArray\n\t}\n\t\n\tfunction utf16leToBytes (str, units) {\n\t  var c, hi, lo\n\t  var byteArray = []\n\t  for (var i = 0; i < str.length; i++) {\n\t    if ((units -= 2) < 0) break\n\t\n\t    c = str.charCodeAt(i)\n\t    hi = c >> 8\n\t    lo = c % 256\n\t    byteArray.push(lo)\n\t    byteArray.push(hi)\n\t  }\n\t\n\t  return byteArray\n\t}\n\t\n\tfunction base64ToBytes (str) {\n\t  return base64.toByteArray(base64clean(str))\n\t}\n\t\n\tfunction blitBuffer (src, dst, offset, length) {\n\t  for (var i = 0; i < length; i++) {\n\t    if ((i + offset >= dst.length) || (i >= src.length)) break\n\t    dst[i + offset] = src[i]\n\t  }\n\t  return i\n\t}\n\t\n\t/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(45).Buffer, (function() { return this; }())))\n\n/***/ },\n/* 46 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\t\n\t;(function (exports) {\n\t\t'use strict';\n\t\n\t  var Arr = (typeof Uint8Array !== 'undefined')\n\t    ? Uint8Array\n\t    : Array\n\t\n\t\tvar PLUS   = '+'.charCodeAt(0)\n\t\tvar SLASH  = '/'.charCodeAt(0)\n\t\tvar NUMBER = '0'.charCodeAt(0)\n\t\tvar LOWER  = 'a'.charCodeAt(0)\n\t\tvar UPPER  = 'A'.charCodeAt(0)\n\t\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\t\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\t\n\t\tfunction decode (elt) {\n\t\t\tvar code = elt.charCodeAt(0)\n\t\t\tif (code === PLUS ||\n\t\t\t    code === PLUS_URL_SAFE)\n\t\t\t\treturn 62 // '+'\n\t\t\tif (code === SLASH ||\n\t\t\t    code === SLASH_URL_SAFE)\n\t\t\t\treturn 63 // '/'\n\t\t\tif (code < NUMBER)\n\t\t\t\treturn -1 //no match\n\t\t\tif (code < NUMBER + 10)\n\t\t\t\treturn code - NUMBER + 26 + 26\n\t\t\tif (code < UPPER + 26)\n\t\t\t\treturn code - UPPER\n\t\t\tif (code < LOWER + 26)\n\t\t\t\treturn code - LOWER + 26\n\t\t}\n\t\n\t\tfunction b64ToByteArray (b64) {\n\t\t\tvar i, j, l, tmp, placeHolders, arr\n\t\n\t\t\tif (b64.length % 4 > 0) {\n\t\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t\t}\n\t\n\t\t\t// the number of equal signs (place holders)\n\t\t\t// if there are two placeholders, than the two characters before it\n\t\t\t// represent one byte\n\t\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t\t// this is just a cheap hack to not do indexOf twice\n\t\t\tvar len = b64.length\n\t\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\t\n\t\t\t// base64 is 4/3 + up to two characters of the original data\n\t\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\t\n\t\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\t\n\t\t\tvar L = 0\n\t\n\t\t\tfunction push (v) {\n\t\t\t\tarr[L++] = v\n\t\t\t}\n\t\n\t\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\t\n\t\t\tif (placeHolders === 2) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t} else if (placeHolders === 1) {\n\t\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\t\tpush(tmp & 0xFF)\n\t\t\t}\n\t\n\t\t\treturn arr\n\t\t}\n\t\n\t\tfunction uint8ToBase64 (uint8) {\n\t\t\tvar i,\n\t\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\t\toutput = \"\",\n\t\t\t\ttemp, length\n\t\n\t\t\tfunction encode (num) {\n\t\t\t\treturn lookup.charAt(num)\n\t\t\t}\n\t\n\t\t\tfunction tripletToBase64 (num) {\n\t\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t\t}\n\t\n\t\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\t\toutput += tripletToBase64(temp)\n\t\t\t}\n\t\n\t\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\t\tswitch (extraBytes) {\n\t\t\t\tcase 1:\n\t\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\t\toutput += '=='\n\t\t\t\t\tbreak\n\t\t\t\tcase 2:\n\t\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\t\toutput += '='\n\t\t\t\t\tbreak\n\t\t\t}\n\t\n\t\t\treturn output\n\t\t}\n\t\n\t\texports.toByteArray = b64ToByteArray\n\t\texports.fromByteArray = uint8ToBase64\n\t}( false ? (this.base64js = {}) : exports))\n\n\n/***/ },\n/* 47 */\n/***/ function(module, exports) {\n\n\texports.read = function (buffer, offset, isLE, mLen, nBytes) {\n\t  var e, m\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var nBits = -7\n\t  var i = isLE ? (nBytes - 1) : 0\n\t  var d = isLE ? -1 : 1\n\t  var s = buffer[offset + i]\n\t\n\t  i += d\n\t\n\t  e = s & ((1 << (-nBits)) - 1)\n\t  s >>= (-nBits)\n\t  nBits += eLen\n\t  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  m = e & ((1 << (-nBits)) - 1)\n\t  e >>= (-nBits)\n\t  nBits += mLen\n\t  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\t\n\t  if (e === 0) {\n\t    e = 1 - eBias\n\t  } else if (e === eMax) {\n\t    return m ? NaN : ((s ? -1 : 1) * Infinity)\n\t  } else {\n\t    m = m + Math.pow(2, mLen)\n\t    e = e - eBias\n\t  }\n\t  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n\t}\n\t\n\texports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n\t  var e, m, c\n\t  var eLen = nBytes * 8 - mLen - 1\n\t  var eMax = (1 << eLen) - 1\n\t  var eBias = eMax >> 1\n\t  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n\t  var i = isLE ? 0 : (nBytes - 1)\n\t  var d = isLE ? 1 : -1\n\t  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\t\n\t  value = Math.abs(value)\n\t\n\t  if (isNaN(value) || value === Infinity) {\n\t    m = isNaN(value) ? 1 : 0\n\t    e = eMax\n\t  } else {\n\t    e = Math.floor(Math.log(value) / Math.LN2)\n\t    if (value * (c = Math.pow(2, -e)) < 1) {\n\t      e--\n\t      c *= 2\n\t    }\n\t    if (e + eBias >= 1) {\n\t      value += rt / c\n\t    } else {\n\t      value += rt * Math.pow(2, 1 - eBias)\n\t    }\n\t    if (value * c >= 2) {\n\t      e++\n\t      c /= 2\n\t    }\n\t\n\t    if (e + eBias >= eMax) {\n\t      m = 0\n\t      e = eMax\n\t    } else if (e + eBias >= 1) {\n\t      m = (value * c - 1) * Math.pow(2, mLen)\n\t      e = e + eBias\n\t    } else {\n\t      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n\t      e = 0\n\t    }\n\t  }\n\t\n\t  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\t\n\t  e = (e << mLen) | m\n\t  eLen += mLen\n\t  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\t\n\t  buffer[offset + i - d] |= s * 128\n\t}\n\n\n/***/ },\n/* 48 */\n/***/ function(module, exports) {\n\n\t\n\t/**\n\t * isArray\n\t */\n\t\n\tvar isArray = Array.isArray;\n\t\n\t/**\n\t * toString\n\t */\n\t\n\tvar str = Object.prototype.toString;\n\t\n\t/**\n\t * Whether or not the given `val`\n\t * is an array.\n\t *\n\t * example:\n\t *\n\t *        isArray([]);\n\t *        // > true\n\t *        isArray(arguments);\n\t *        // > false\n\t *        isArray('');\n\t *        // > false\n\t *\n\t * @param {mixed} val\n\t * @return {bool}\n\t */\n\t\n\tmodule.exports = isArray || function (val) {\n\t  return !! val && '[object Array]' == str.call(val);\n\t};\n\n\n/***/ },\n/* 49 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - getPathValue utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * @see https://github.com/logicalparadox/filtr\n\t * MIT Licensed\n\t */\n\t\n\tvar getPathInfo = __webpack_require__(50);\n\t\n\t/**\n\t * ### .getPathValue(path, object)\n\t *\n\t * This allows the retrieval of values in an\n\t * object given a string path.\n\t *\n\t *     var obj = {\n\t *         prop1: {\n\t *             arr: ['a', 'b', 'c']\n\t *           , str: 'Hello'\n\t *         }\n\t *       , prop2: {\n\t *             arr: [ { nested: 'Universe' } ]\n\t *           , str: 'Hello again!'\n\t *         }\n\t *     }\n\t *\n\t * The following would be the results.\n\t *\n\t *     getPathValue('prop1.str', obj); // Hello\n\t *     getPathValue('prop1.att[2]', obj); // b\n\t *     getPathValue('prop2.arr[0].nested', obj); // Universe\n\t *\n\t * @param {String} path\n\t * @param {Object} object\n\t * @returns {Object} value or `undefined`\n\t * @name getPathValue\n\t * @api public\n\t */\n\tmodule.exports = function(path, obj) {\n\t  var info = getPathInfo(path, obj);\n\t  return info.value;\n\t}; \n\n\n/***/ },\n/* 50 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - getPathInfo utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\tvar hasProperty = __webpack_require__(51);\n\t\n\t/**\n\t * ### .getPathInfo(path, object)\n\t *\n\t * This allows the retrieval of property info in an\n\t * object given a string path.\n\t *\n\t * The path info consists of an object with the\n\t * following properties:\n\t *\n\t * * parent - The parent object of the property referenced by `path`\n\t * * name - The name of the final property, a number if it was an array indexer\n\t * * value - The value of the property, if it exists, otherwise `undefined`\n\t * * exists - Whether the property exists or not\n\t *\n\t * @param {String} path\n\t * @param {Object} object\n\t * @returns {Object} info\n\t * @name getPathInfo\n\t * @api public\n\t */\n\t\n\tmodule.exports = function getPathInfo(path, obj) {\n\t  var parsed = parsePath(path),\n\t      last = parsed[parsed.length - 1];\n\t\n\t  var info = {\n\t    parent: parsed.length > 1 ? _getPathValue(parsed, obj, parsed.length - 1) : obj,\n\t    name: last.p || last.i,\n\t    value: _getPathValue(parsed, obj)\n\t  };\n\t  info.exists = hasProperty(info.name, info.parent);\n\t\n\t  return info;\n\t};\n\t\n\t\n\t/*!\n\t * ## parsePath(path)\n\t *\n\t * Helper function used to parse string object\n\t * paths. Use in conjunction with `_getPathValue`.\n\t *\n\t *      var parsed = parsePath('myobject.property.subprop');\n\t *\n\t * ### Paths:\n\t *\n\t * * Can be as near infinitely deep and nested\n\t * * Arrays are also valid using the formal `myobject.document[3].property`.\n\t * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n\t *\n\t * @param {String} path\n\t * @returns {Object} parsed\n\t * @api private\n\t */\n\t\n\tfunction parsePath (path) {\n\t  var str = path.replace(/([^\\\\])\\[/g, '$1.[')\n\t    , parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n\t  return parts.map(function (value) {\n\t    var re = /^\\[(\\d+)\\]$/\n\t      , mArr = re.exec(value);\n\t    if (mArr) return { i: parseFloat(mArr[1]) };\n\t    else return { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n\t  });\n\t}\n\t\n\t\n\t/*!\n\t * ## _getPathValue(parsed, obj)\n\t *\n\t * Helper companion function for `.parsePath` that returns\n\t * the value located at the parsed address.\n\t *\n\t *      var value = getPathValue(parsed, obj);\n\t *\n\t * @param {Object} parsed definition from `parsePath`.\n\t * @param {Object} object to search against\n\t * @param {Number} object to search against\n\t * @returns {Object|Undefined} value\n\t * @api private\n\t */\n\t\n\tfunction _getPathValue (parsed, obj, index) {\n\t  var tmp = obj\n\t    , res;\n\t\n\t  index = (index === undefined ? parsed.length : index);\n\t\n\t  for (var i = 0, l = index; i < l; i++) {\n\t    var part = parsed[i];\n\t    if (tmp) {\n\t      if ('undefined' !== typeof part.p)\n\t        tmp = tmp[part.p];\n\t      else if ('undefined' !== typeof part.i)\n\t        tmp = tmp[part.i];\n\t      if (i == (l - 1)) res = tmp;\n\t    } else {\n\t      res = undefined;\n\t    }\n\t  }\n\t  return res;\n\t}\n\n\n/***/ },\n/* 51 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - hasProperty utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\tvar type = __webpack_require__(29);\n\t\n\t/**\n\t * ### .hasProperty(object, name)\n\t *\n\t * This allows checking whether an object has\n\t * named property or numeric array index.\n\t *\n\t * Basically does the same thing as the `in`\n\t * operator but works properly with natives\n\t * and null/undefined values.\n\t *\n\t *     var obj = {\n\t *         arr: ['a', 'b', 'c']\n\t *       , str: 'Hello'\n\t *     }\n\t *\n\t * The following would be the results.\n\t *\n\t *     hasProperty('str', obj);  // true\n\t *     hasProperty('constructor', obj);  // true\n\t *     hasProperty('bar', obj);  // false\n\t *     \n\t *     hasProperty('length', obj.str); // true\n\t *     hasProperty(1, obj.str);  // true\n\t *     hasProperty(5, obj.str);  // false\n\t *\n\t *     hasProperty('length', obj.arr);  // true\n\t *     hasProperty(2, obj.arr);  // true\n\t *     hasProperty(3, obj.arr);  // false\n\t *\n\t * @param {Objuect} object\n\t * @param {String|Number} name\n\t * @returns {Boolean} whether it exists\n\t * @name getPathInfo\n\t * @api public\n\t */\n\t\n\tvar literals = {\n\t    'number': Number\n\t  , 'string': String\n\t};\n\t\n\tmodule.exports = function hasProperty(name, obj) {\n\t  var ot = type(obj);\n\t\n\t  // Bad Object, obviously no props at all\n\t  if(ot === 'null' || ot === 'undefined')\n\t    return false;\n\t\n\t  // The `in` operator does not work with certain literals\n\t  // box these before the check\n\t  if(literals[ot] && typeof obj !== 'object')\n\t    obj = new literals[ot](obj);\n\t\n\t  return name in obj;\n\t};\n\n\n/***/ },\n/* 52 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - addProperty utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\tvar config = __webpack_require__(39);\n\tvar flag = __webpack_require__(28);\n\t\n\t/**\n\t * ### addProperty (ctx, name, getter)\n\t *\n\t * Adds a property to the prototype of an object.\n\t *\n\t *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n\t *       var obj = utils.flag(this, 'object');\n\t *       new chai.Assertion(obj).to.be.instanceof(Foo);\n\t *     });\n\t *\n\t * Can also be accessed directly from `chai.Assertion`.\n\t *\n\t *     chai.Assertion.addProperty('foo', fn);\n\t *\n\t * Then can be used as any other assertion.\n\t *\n\t *     expect(myFoo).to.be.foo;\n\t *\n\t * @param {Object} ctx object to which the property is added\n\t * @param {String} name of property to add\n\t * @param {Function} getter function to be used for name\n\t * @name addProperty\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (ctx, name, getter) {\n\t  Object.defineProperty(ctx, name,\n\t    { get: function addProperty() {\n\t        var old_ssfi = flag(this, 'ssfi');\n\t        if (old_ssfi && config.includeStack === false)\n\t          flag(this, 'ssfi', addProperty);\n\t\n\t        var result = getter.call(this);\n\t        return result === undefined ? this : result;\n\t      }\n\t    , configurable: true\n\t  });\n\t};\n\n\n/***/ },\n/* 53 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - addMethod utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\tvar config = __webpack_require__(39);\n\t\n\t/**\n\t * ### .addMethod (ctx, name, method)\n\t *\n\t * Adds a method to the prototype of an object.\n\t *\n\t *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n\t *       var obj = utils.flag(this, 'object');\n\t *       new chai.Assertion(obj).to.be.equal(str);\n\t *     });\n\t *\n\t * Can also be accessed directly from `chai.Assertion`.\n\t *\n\t *     chai.Assertion.addMethod('foo', fn);\n\t *\n\t * Then can be used as any other assertion.\n\t *\n\t *     expect(fooStr).to.be.foo('bar');\n\t *\n\t * @param {Object} ctx object to which the method is added\n\t * @param {String} name of method to add\n\t * @param {Function} method function to be used for name\n\t * @name addMethod\n\t * @api public\n\t */\n\tvar flag = __webpack_require__(28);\n\t\n\tmodule.exports = function (ctx, name, method) {\n\t  ctx[name] = function () {\n\t    var old_ssfi = flag(this, 'ssfi');\n\t    if (old_ssfi && config.includeStack === false)\n\t      flag(this, 'ssfi', ctx[name]);\n\t    var result = method.apply(this, arguments);\n\t    return result === undefined ? this : result;\n\t  };\n\t};\n\n\n/***/ },\n/* 54 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chai - overwriteProperty utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * ### overwriteProperty (ctx, name, fn)\n\t *\n\t * Overwites an already existing property getter and provides\n\t * access to previous value. Must return function to use as getter.\n\t *\n\t *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n\t *       return function () {\n\t *         var obj = utils.flag(this, 'object');\n\t *         if (obj instanceof Foo) {\n\t *           new chai.Assertion(obj.name).to.equal('bar');\n\t *         } else {\n\t *           _super.call(this);\n\t *         }\n\t *       }\n\t *     });\n\t *\n\t *\n\t * Can also be accessed directly from `chai.Assertion`.\n\t *\n\t *     chai.Assertion.overwriteProperty('foo', fn);\n\t *\n\t * Then can be used as any other assertion.\n\t *\n\t *     expect(myFoo).to.be.ok;\n\t *\n\t * @param {Object} ctx object whose property is to be overwritten\n\t * @param {String} name of property to overwrite\n\t * @param {Function} getter function that returns a getter function to be used for name\n\t * @name overwriteProperty\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (ctx, name, getter) {\n\t  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n\t    , _super = function () {};\n\t\n\t  if (_get && 'function' === typeof _get.get)\n\t    _super = _get.get\n\t\n\t  Object.defineProperty(ctx, name,\n\t    { get: function () {\n\t        var result = getter(_super).call(this);\n\t        return result === undefined ? this : result;\n\t      }\n\t    , configurable: true\n\t  });\n\t};\n\n\n/***/ },\n/* 55 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chai - overwriteMethod utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * ### overwriteMethod (ctx, name, fn)\n\t *\n\t * Overwites an already existing method and provides\n\t * access to previous function. Must return function\n\t * to be used for name.\n\t *\n\t *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n\t *       return function (str) {\n\t *         var obj = utils.flag(this, 'object');\n\t *         if (obj instanceof Foo) {\n\t *           new chai.Assertion(obj.value).to.equal(str);\n\t *         } else {\n\t *           _super.apply(this, arguments);\n\t *         }\n\t *       }\n\t *     });\n\t *\n\t * Can also be accessed directly from `chai.Assertion`.\n\t *\n\t *     chai.Assertion.overwriteMethod('foo', fn);\n\t *\n\t * Then can be used as any other assertion.\n\t *\n\t *     expect(myFoo).to.equal('bar');\n\t *\n\t * @param {Object} ctx object whose method is to be overwritten\n\t * @param {String} name of method to overwrite\n\t * @param {Function} method function that returns a function to be used for name\n\t * @name overwriteMethod\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (ctx, name, method) {\n\t  var _method = ctx[name]\n\t    , _super = function () { return this; };\n\t\n\t  if (_method && 'function' === typeof _method)\n\t    _super = _method;\n\t\n\t  ctx[name] = function () {\n\t    var result = method(_super).apply(this, arguments);\n\t    return result === undefined ? this : result;\n\t  }\n\t};\n\n\n/***/ },\n/* 56 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * Chai - addChainingMethod utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/*!\n\t * Module dependencies\n\t */\n\t\n\tvar transferFlags = __webpack_require__(40);\n\tvar flag = __webpack_require__(28);\n\tvar config = __webpack_require__(39);\n\t\n\t/*!\n\t * Module variables\n\t */\n\t\n\t// Check whether `__proto__` is supported\n\tvar hasProtoSupport = '__proto__' in Object;\n\t\n\t// Without `__proto__` support, this module will need to add properties to a function.\n\t// However, some Function.prototype methods cannot be overwritten,\n\t// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).\n\tvar excludeNames = /^(?:length|name|arguments|caller)$/;\n\t\n\t// Cache `Function` properties\n\tvar call  = Function.prototype.call,\n\t    apply = Function.prototype.apply;\n\t\n\t/**\n\t * ### addChainableMethod (ctx, name, method, chainingBehavior)\n\t *\n\t * Adds a method to an object, such that the method can also be chained.\n\t *\n\t *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n\t *       var obj = utils.flag(this, 'object');\n\t *       new chai.Assertion(obj).to.be.equal(str);\n\t *     });\n\t *\n\t * Can also be accessed directly from `chai.Assertion`.\n\t *\n\t *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n\t *\n\t * The result can then be used as both a method assertion, executing both `method` and\n\t * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n\t *\n\t *     expect(fooStr).to.be.foo('bar');\n\t *     expect(fooStr).to.be.foo.equal('foo');\n\t *\n\t * @param {Object} ctx object to which the method is added\n\t * @param {String} name of method to add\n\t * @param {Function} method function to be used for `name`, when called\n\t * @param {Function} chainingBehavior function to be called every time the property is accessed\n\t * @name addChainableMethod\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (ctx, name, method, chainingBehavior) {\n\t  if (typeof chainingBehavior !== 'function') {\n\t    chainingBehavior = function () { };\n\t  }\n\t\n\t  var chainableBehavior = {\n\t      method: method\n\t    , chainingBehavior: chainingBehavior\n\t  };\n\t\n\t  // save the methods so we can overwrite them later, if we need to.\n\t  if (!ctx.__methods) {\n\t    ctx.__methods = {};\n\t  }\n\t  ctx.__methods[name] = chainableBehavior;\n\t\n\t  Object.defineProperty(ctx, name,\n\t    { get: function () {\n\t        chainableBehavior.chainingBehavior.call(this);\n\t\n\t        var assert = function assert() {\n\t          var old_ssfi = flag(this, 'ssfi');\n\t          if (old_ssfi && config.includeStack === false)\n\t            flag(this, 'ssfi', assert);\n\t          var result = chainableBehavior.method.apply(this, arguments);\n\t          return result === undefined ? this : result;\n\t        };\n\t\n\t        // Use `__proto__` if available\n\t        if (hasProtoSupport) {\n\t          // Inherit all properties from the object by replacing the `Function` prototype\n\t          var prototype = assert.__proto__ = Object.create(this);\n\t          // Restore the `call` and `apply` methods from `Function`\n\t          prototype.call = call;\n\t          prototype.apply = apply;\n\t        }\n\t        // Otherwise, redefine all properties (slow!)\n\t        else {\n\t          var asserterNames = Object.getOwnPropertyNames(ctx);\n\t          asserterNames.forEach(function (asserterName) {\n\t            if (!excludeNames.test(asserterName)) {\n\t              var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n\t              Object.defineProperty(assert, asserterName, pd);\n\t            }\n\t          });\n\t        }\n\t\n\t        transferFlags(this, assert);\n\t        return assert;\n\t      }\n\t    , configurable: true\n\t  });\n\t};\n\n\n/***/ },\n/* 57 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * Chai - overwriteChainableMethod utility\n\t * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t/**\n\t * ### overwriteChainableMethod (ctx, name, method, chainingBehavior)\n\t *\n\t * Overwites an already existing chainable method\n\t * and provides access to the previous function or\n\t * property.  Must return functions to be used for\n\t * name.\n\t *\n\t *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'length',\n\t *       function (_super) {\n\t *       }\n\t *     , function (_super) {\n\t *       }\n\t *     );\n\t *\n\t * Can also be accessed directly from `chai.Assertion`.\n\t *\n\t *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n\t *\n\t * Then can be used as any other assertion.\n\t *\n\t *     expect(myFoo).to.have.length(3);\n\t *     expect(myFoo).to.have.length.above(3);\n\t *\n\t * @param {Object} ctx object whose method / property is to be overwritten\n\t * @param {String} name of method / property to overwrite\n\t * @param {Function} method function that returns a function to be used for name\n\t * @param {Function} chainingBehavior function that returns a function to be used for property\n\t * @name overwriteChainableMethod\n\t * @api public\n\t */\n\t\n\tmodule.exports = function (ctx, name, method, chainingBehavior) {\n\t  var chainableBehavior = ctx.__methods[name];\n\t\n\t  var _chainingBehavior = chainableBehavior.chainingBehavior;\n\t  chainableBehavior.chainingBehavior = function () {\n\t    var result = chainingBehavior(_chainingBehavior).call(this);\n\t    return result === undefined ? this : result;\n\t  };\n\t\n\t  var _method = chainableBehavior.method;\n\t  chainableBehavior.method = function () {\n\t    var result = method(_method).apply(this, arguments);\n\t    return result === undefined ? this : result;\n\t  };\n\t};\n\n\n/***/ },\n/* 58 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t/*!\n\t * chai\n\t * http://chaijs.com\n\t * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\tvar config = __webpack_require__(39);\n\t\n\tmodule.exports = function (_chai, util) {\n\t  /*!\n\t   * Module dependencies.\n\t   */\n\t\n\t  var AssertionError = _chai.AssertionError\n\t    , flag = util.flag;\n\t\n\t  /*!\n\t   * Module export.\n\t   */\n\t\n\t  _chai.Assertion = Assertion;\n\t\n\t  /*!\n\t   * Assertion Constructor\n\t   *\n\t   * Creates object for chaining.\n\t   *\n\t   * @api private\n\t   */\n\t\n\t  function Assertion (obj, msg, stack) {\n\t    flag(this, 'ssfi', stack || arguments.callee);\n\t    flag(this, 'object', obj);\n\t    flag(this, 'message', msg);\n\t  }\n\t\n\t  Object.defineProperty(Assertion, 'includeStack', {\n\t    get: function() {\n\t      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n\t      return config.includeStack;\n\t    },\n\t    set: function(value) {\n\t      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n\t      config.includeStack = value;\n\t    }\n\t  });\n\t\n\t  Object.defineProperty(Assertion, 'showDiff', {\n\t    get: function() {\n\t      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n\t      return config.showDiff;\n\t    },\n\t    set: function(value) {\n\t      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n\t      config.showDiff = value;\n\t    }\n\t  });\n\t\n\t  Assertion.addProperty = function (name, fn) {\n\t    util.addProperty(this.prototype, name, fn);\n\t  };\n\t\n\t  Assertion.addMethod = function (name, fn) {\n\t    util.addMethod(this.prototype, name, fn);\n\t  };\n\t\n\t  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n\t    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n\t  };\n\t\n\t  Assertion.overwriteProperty = function (name, fn) {\n\t    util.overwriteProperty(this.prototype, name, fn);\n\t  };\n\t\n\t  Assertion.overwriteMethod = function (name, fn) {\n\t    util.overwriteMethod(this.prototype, name, fn);\n\t  };\n\t\n\t  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n\t    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n\t  };\n\t\n\t  /**\n\t   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n\t   *\n\t   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n\t   *\n\t   * @name assert\n\t   * @param {Philosophical} expression to be tested\n\t   * @param {String or Function} message or function that returns message to display if expression fails\n\t   * @param {String or Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n\t   * @param {Mixed} expected value (remember to check for negation)\n\t   * @param {Mixed} actual (optional) will default to `this.obj`\n\t   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n\t   * @api private\n\t   */\n\t\n\t  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n\t    var ok = util.test(this, arguments);\n\t    if (true !== showDiff) showDiff = false;\n\t    if (true !== config.showDiff) showDiff = false;\n\t\n\t    if (!ok) {\n\t      var msg = util.getMessage(this, arguments)\n\t        , actual = util.getActual(this, arguments);\n\t      throw new AssertionError(msg, {\n\t          actual: actual\n\t        , expected: expected\n\t        , showDiff: showDiff\n\t      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n\t    }\n\t  };\n\t\n\t  /*!\n\t   * ### ._obj\n\t   *\n\t   * Quick reference to stored `actual` value for plugin developers.\n\t   *\n\t   * @api private\n\t   */\n\t\n\t  Object.defineProperty(Assertion.prototype, '_obj',\n\t    { get: function () {\n\t        return flag(this, 'object');\n\t      }\n\t    , set: function (val) {\n\t        flag(this, 'object', val);\n\t      }\n\t  });\n\t};\n\n\n/***/ },\n/* 59 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * chai\n\t * http://chaijs.com\n\t * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\tmodule.exports = function (chai, _) {\n\t  var Assertion = chai.Assertion\n\t    , toString = Object.prototype.toString\n\t    , flag = _.flag;\n\t\n\t  /**\n\t   * ### Language Chains\n\t   *\n\t   * The following are provided as chainable getters to\n\t   * improve the readability of your assertions. They\n\t   * do not provide testing capabilities unless they\n\t   * have been overwritten by a plugin.\n\t   *\n\t   * **Chains**\n\t   *\n\t   * - to\n\t   * - be\n\t   * - been\n\t   * - is\n\t   * - that\n\t   * - which\n\t   * - and\n\t   * - has\n\t   * - have\n\t   * - with\n\t   * - at\n\t   * - of\n\t   * - same\n\t   *\n\t   * @name language chains\n\t   * @api public\n\t   */\n\t\n\t  [ 'to', 'be', 'been'\n\t  , 'is', 'and', 'has', 'have'\n\t  , 'with', 'that', 'which', 'at'\n\t  , 'of', 'same' ].forEach(function (chain) {\n\t    Assertion.addProperty(chain, function () {\n\t      return this;\n\t    });\n\t  });\n\t\n\t  /**\n\t   * ### .not\n\t   *\n\t   * Negates any of assertions following in the chain.\n\t   *\n\t   *     expect(foo).to.not.equal('bar');\n\t   *     expect(goodFn).to.not.throw(Error);\n\t   *     expect({ foo: 'baz' }).to.have.property('foo')\n\t   *       .and.not.equal('bar');\n\t   *\n\t   * @name not\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('not', function () {\n\t    flag(this, 'negate', true);\n\t  });\n\t\n\t  /**\n\t   * ### .deep\n\t   *\n\t   * Sets the `deep` flag, later used by the `equal` and\n\t   * `property` assertions.\n\t   *\n\t   *     expect(foo).to.deep.equal({ bar: 'baz' });\n\t   *     expect({ foo: { bar: { baz: 'quux' } } })\n\t   *       .to.have.deep.property('foo.bar.baz', 'quux');\n\t   *\n\t   * `.deep.property` special characters can be escaped\n\t   * by adding two slashes before the `.` or `[]`.\n\t   *\n\t   *     var deepCss = { '.link': { '[target]': 42 }};\n\t   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n\t   *\n\t   * @name deep\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('deep', function () {\n\t    flag(this, 'deep', true);\n\t  });\n\t\n\t  /**\n\t   * ### .any\n\t   *\n\t   * Sets the `any` flag, (opposite of the `all` flag)\n\t   * later used in the `keys` assertion.\n\t   *\n\t   *     expect(foo).to.have.any.keys('bar', 'baz');\n\t   *\n\t   * @name any\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('any', function () {\n\t    flag(this, 'any', true);\n\t    flag(this, 'all', false)\n\t  });\n\t\n\t\n\t  /**\n\t   * ### .all\n\t   *\n\t   * Sets the `all` flag (opposite of the `any` flag)\n\t   * later used by the `keys` assertion.\n\t   *\n\t   *     expect(foo).to.have.all.keys('bar', 'baz');\n\t   *\n\t   * @name all\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('all', function () {\n\t    flag(this, 'all', true);\n\t    flag(this, 'any', false);\n\t  });\n\t\n\t  /**\n\t   * ### .a(type)\n\t   *\n\t   * The `a` and `an` assertions are aliases that can be\n\t   * used either as language chains or to assert a value's\n\t   * type.\n\t   *\n\t   *     // typeof\n\t   *     expect('test').to.be.a('string');\n\t   *     expect({ foo: 'bar' }).to.be.an('object');\n\t   *     expect(null).to.be.a('null');\n\t   *     expect(undefined).to.be.an('undefined');\n\t   *     expect(new Error).to.be.an('error');\n\t   *     expect(new Promise).to.be.a('promise');\n\t   *     expect(new Float32Array()).to.be.a('float32array');\n\t   *     expect(Symbol()).to.be.a('symbol');\n\t   *\n\t   *     // es6 overrides\n\t   *     expect({[Symbol.toStringTag]:()=>'foo'}).to.be.a('foo');\n\t   *\n\t   *     // language chain\n\t   *     expect(foo).to.be.an.instanceof(Foo);\n\t   *\n\t   * @name a\n\t   * @alias an\n\t   * @param {String} type\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function an (type, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    type = type.toLowerCase();\n\t    var obj = flag(this, 'object')\n\t      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\t\n\t    this.assert(\n\t        type === _.type(obj)\n\t      , 'expected #{this} to be ' + article + type\n\t      , 'expected #{this} not to be ' + article + type\n\t    );\n\t  }\n\t\n\t  Assertion.addChainableMethod('an', an);\n\t  Assertion.addChainableMethod('a', an);\n\t\n\t  /**\n\t   * ### .include(value)\n\t   *\n\t   * The `include` and `contain` assertions can be used as either property\n\t   * based language chains or as methods to assert the inclusion of an object\n\t   * in an array or a substring in a string. When used as language chains,\n\t   * they toggle the `contains` flag for the `keys` assertion.\n\t   *\n\t   *     expect([1,2,3]).to.include(2);\n\t   *     expect('foobar').to.contain('foo');\n\t   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n\t   *\n\t   * @name include\n\t   * @alias contain\n\t   * @alias includes\n\t   * @alias contains\n\t   * @param {Object|String|Number} obj\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function includeChainingBehavior () {\n\t    flag(this, 'contains', true);\n\t  }\n\t\n\t  function include (val, msg) {\n\t    _.expectTypes(this, ['array', 'object', 'string']);\n\t\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    var expected = false;\n\t\n\t    if (_.type(obj) === 'array' && _.type(val) === 'object') {\n\t      for (var i in obj) {\n\t        if (_.eql(obj[i], val)) {\n\t          expected = true;\n\t          break;\n\t        }\n\t      }\n\t    } else if (_.type(val) === 'object') {\n\t      if (!flag(this, 'negate')) {\n\t        for (var k in val) new Assertion(obj).property(k, val[k]);\n\t        return;\n\t      }\n\t      var subset = {};\n\t      for (var k in val) subset[k] = obj[k];\n\t      expected = _.eql(subset, val);\n\t    } else {\n\t      expected = (obj != undefined) && ~obj.indexOf(val);\n\t    }\n\t    this.assert(\n\t        expected\n\t      , 'expected #{this} to include ' + _.inspect(val)\n\t      , 'expected #{this} to not include ' + _.inspect(val));\n\t  }\n\t\n\t  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n\t  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n\t  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n\t  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\t\n\t  /**\n\t   * ### .ok\n\t   *\n\t   * Asserts that the target is truthy.\n\t   *\n\t   *     expect('everything').to.be.ok;\n\t   *     expect(1).to.be.ok;\n\t   *     expect(false).to.not.be.ok;\n\t   *     expect(undefined).to.not.be.ok;\n\t   *     expect(null).to.not.be.ok;\n\t   *\n\t   * @name ok\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('ok', function () {\n\t    this.assert(\n\t        flag(this, 'object')\n\t      , 'expected #{this} to be truthy'\n\t      , 'expected #{this} to be falsy');\n\t  });\n\t\n\t  /**\n\t   * ### .true\n\t   *\n\t   * Asserts that the target is `true`.\n\t   *\n\t   *     expect(true).to.be.true;\n\t   *     expect(1).to.not.be.true;\n\t   *\n\t   * @name true\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('true', function () {\n\t    this.assert(\n\t        true === flag(this, 'object')\n\t      , 'expected #{this} to be true'\n\t      , 'expected #{this} to be false'\n\t      , this.negate ? false : true\n\t    );\n\t  });\n\t\n\t  /**\n\t   * ### .false\n\t   *\n\t   * Asserts that the target is `false`.\n\t   *\n\t   *     expect(false).to.be.false;\n\t   *     expect(0).to.not.be.false;\n\t   *\n\t   * @name false\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('false', function () {\n\t    this.assert(\n\t        false === flag(this, 'object')\n\t      , 'expected #{this} to be false'\n\t      , 'expected #{this} to be true'\n\t      , this.negate ? true : false\n\t    );\n\t  });\n\t\n\t  /**\n\t   * ### .null\n\t   *\n\t   * Asserts that the target is `null`.\n\t   *\n\t   *     expect(null).to.be.null;\n\t   *     expect(undefined).to.not.be.null;\n\t   *\n\t   * @name null\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('null', function () {\n\t    this.assert(\n\t        null === flag(this, 'object')\n\t      , 'expected #{this} to be null'\n\t      , 'expected #{this} not to be null'\n\t    );\n\t  });\n\t\n\t  /**\n\t   * ### .undefined\n\t   *\n\t   * Asserts that the target is `undefined`.\n\t   *\n\t   *     expect(undefined).to.be.undefined;\n\t   *     expect(null).to.not.be.undefined;\n\t   *\n\t   * @name undefined\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('undefined', function () {\n\t    this.assert(\n\t        undefined === flag(this, 'object')\n\t      , 'expected #{this} to be undefined'\n\t      , 'expected #{this} not to be undefined'\n\t    );\n\t  });\n\t\n\t  /**\n\t   * ### .NaN\n\t   * Asserts that the target is `NaN`.\n\t   *\n\t   *     expect('foo').to.be.NaN;\n\t   *     expect(4).not.to.be.NaN;\n\t   *\n\t   * @name NaN\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('NaN', function () {\n\t    this.assert(\n\t        isNaN(flag(this, 'object'))\n\t        , 'expected #{this} to be NaN'\n\t        , 'expected #{this} not to be NaN'\n\t    );\n\t  });\n\t\n\t  /**\n\t   * ### .exist\n\t   *\n\t   * Asserts that the target is neither `null` nor `undefined`.\n\t   *\n\t   *     var foo = 'hi'\n\t   *       , bar = null\n\t   *       , baz;\n\t   *\n\t   *     expect(foo).to.exist;\n\t   *     expect(bar).to.not.exist;\n\t   *     expect(baz).to.not.exist;\n\t   *\n\t   * @name exist\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('exist', function () {\n\t    this.assert(\n\t        null != flag(this, 'object')\n\t      , 'expected #{this} to exist'\n\t      , 'expected #{this} to not exist'\n\t    );\n\t  });\n\t\n\t\n\t  /**\n\t   * ### .empty\n\t   *\n\t   * Asserts that the target's length is `0`. For arrays and strings, it checks\n\t   * the `length` property. For objects, it gets the count of\n\t   * enumerable keys.\n\t   *\n\t   *     expect([]).to.be.empty;\n\t   *     expect('').to.be.empty;\n\t   *     expect({}).to.be.empty;\n\t   *\n\t   * @name empty\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('empty', function () {\n\t    var obj = flag(this, 'object')\n\t      , expected = obj;\n\t\n\t    if (Array.isArray(obj) || 'string' === typeof object) {\n\t      expected = obj.length;\n\t    } else if (typeof obj === 'object') {\n\t      expected = Object.keys(obj).length;\n\t    }\n\t\n\t    this.assert(\n\t        !expected\n\t      , 'expected #{this} to be empty'\n\t      , 'expected #{this} not to be empty'\n\t    );\n\t  });\n\t\n\t  /**\n\t   * ### .arguments\n\t   *\n\t   * Asserts that the target is an arguments object.\n\t   *\n\t   *     function test () {\n\t   *       expect(arguments).to.be.arguments;\n\t   *     }\n\t   *\n\t   * @name arguments\n\t   * @alias Arguments\n\t   * @api public\n\t   */\n\t\n\t  function checkArguments () {\n\t    var obj = flag(this, 'object')\n\t      , type = Object.prototype.toString.call(obj);\n\t    this.assert(\n\t        '[object Arguments]' === type\n\t      , 'expected #{this} to be arguments but got ' + type\n\t      , 'expected #{this} to not be arguments'\n\t    );\n\t  }\n\t\n\t  Assertion.addProperty('arguments', checkArguments);\n\t  Assertion.addProperty('Arguments', checkArguments);\n\t\n\t  /**\n\t   * ### .equal(value)\n\t   *\n\t   * Asserts that the target is strictly equal (`===`) to `value`.\n\t   * Alternately, if the `deep` flag is set, asserts that\n\t   * the target is deeply equal to `value`.\n\t   *\n\t   *     expect('hello').to.equal('hello');\n\t   *     expect(42).to.equal(42);\n\t   *     expect(1).to.not.equal(true);\n\t   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });\n\t   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });\n\t   *\n\t   * @name equal\n\t   * @alias equals\n\t   * @alias eq\n\t   * @alias deep.equal\n\t   * @param {Mixed} value\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertEqual (val, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    if (flag(this, 'deep')) {\n\t      return this.eql(val);\n\t    } else {\n\t      this.assert(\n\t          val === obj\n\t        , 'expected #{this} to equal #{exp}'\n\t        , 'expected #{this} to not equal #{exp}'\n\t        , val\n\t        , this._obj\n\t        , true\n\t      );\n\t    }\n\t  }\n\t\n\t  Assertion.addMethod('equal', assertEqual);\n\t  Assertion.addMethod('equals', assertEqual);\n\t  Assertion.addMethod('eq', assertEqual);\n\t\n\t  /**\n\t   * ### .eql(value)\n\t   *\n\t   * Asserts that the target is deeply equal to `value`.\n\t   *\n\t   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });\n\t   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);\n\t   *\n\t   * @name eql\n\t   * @alias eqls\n\t   * @param {Mixed} value\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertEql(obj, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    this.assert(\n\t        _.eql(obj, flag(this, 'object'))\n\t      , 'expected #{this} to deeply equal #{exp}'\n\t      , 'expected #{this} to not deeply equal #{exp}'\n\t      , obj\n\t      , this._obj\n\t      , true\n\t    );\n\t  }\n\t\n\t  Assertion.addMethod('eql', assertEql);\n\t  Assertion.addMethod('eqls', assertEql);\n\t\n\t  /**\n\t   * ### .above(value)\n\t   *\n\t   * Asserts that the target is greater than `value`.\n\t   *\n\t   *     expect(10).to.be.above(5);\n\t   *\n\t   * Can also be used in conjunction with `length` to\n\t   * assert a minimum length. The benefit being a\n\t   * more informative error message than if the length\n\t   * was supplied directly.\n\t   *\n\t   *     expect('foo').to.have.length.above(2);\n\t   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n\t   *\n\t   * @name above\n\t   * @alias gt\n\t   * @alias greaterThan\n\t   * @param {Number} value\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertAbove (n, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    if (flag(this, 'doLength')) {\n\t      new Assertion(obj, msg).to.have.property('length');\n\t      var len = obj.length;\n\t      this.assert(\n\t          len > n\n\t        , 'expected #{this} to have a length above #{exp} but got #{act}'\n\t        , 'expected #{this} to not have a length above #{exp}'\n\t        , n\n\t        , len\n\t      );\n\t    } else {\n\t      this.assert(\n\t          obj > n\n\t        , 'expected #{this} to be above ' + n\n\t        , 'expected #{this} to be at most ' + n\n\t      );\n\t    }\n\t  }\n\t\n\t  Assertion.addMethod('above', assertAbove);\n\t  Assertion.addMethod('gt', assertAbove);\n\t  Assertion.addMethod('greaterThan', assertAbove);\n\t\n\t  /**\n\t   * ### .least(value)\n\t   *\n\t   * Asserts that the target is greater than or equal to `value`.\n\t   *\n\t   *     expect(10).to.be.at.least(10);\n\t   *\n\t   * Can also be used in conjunction with `length` to\n\t   * assert a minimum length. The benefit being a\n\t   * more informative error message than if the length\n\t   * was supplied directly.\n\t   *\n\t   *     expect('foo').to.have.length.of.at.least(2);\n\t   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);\n\t   *\n\t   * @name least\n\t   * @alias gte\n\t   * @param {Number} value\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertLeast (n, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    if (flag(this, 'doLength')) {\n\t      new Assertion(obj, msg).to.have.property('length');\n\t      var len = obj.length;\n\t      this.assert(\n\t          len >= n\n\t        , 'expected #{this} to have a length at least #{exp} but got #{act}'\n\t        , 'expected #{this} to have a length below #{exp}'\n\t        , n\n\t        , len\n\t      );\n\t    } else {\n\t      this.assert(\n\t          obj >= n\n\t        , 'expected #{this} to be at least ' + n\n\t        , 'expected #{this} to be below ' + n\n\t      );\n\t    }\n\t  }\n\t\n\t  Assertion.addMethod('least', assertLeast);\n\t  Assertion.addMethod('gte', assertLeast);\n\t\n\t  /**\n\t   * ### .below(value)\n\t   *\n\t   * Asserts that the target is less than `value`.\n\t   *\n\t   *     expect(5).to.be.below(10);\n\t   *\n\t   * Can also be used in conjunction with `length` to\n\t   * assert a maximum length. The benefit being a\n\t   * more informative error message than if the length\n\t   * was supplied directly.\n\t   *\n\t   *     expect('foo').to.have.length.below(4);\n\t   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n\t   *\n\t   * @name below\n\t   * @alias lt\n\t   * @alias lessThan\n\t   * @param {Number} value\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertBelow (n, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    if (flag(this, 'doLength')) {\n\t      new Assertion(obj, msg).to.have.property('length');\n\t      var len = obj.length;\n\t      this.assert(\n\t          len < n\n\t        , 'expected #{this} to have a length below #{exp} but got #{act}'\n\t        , 'expected #{this} to not have a length below #{exp}'\n\t        , n\n\t        , len\n\t      );\n\t    } else {\n\t      this.assert(\n\t          obj < n\n\t        , 'expected #{this} to be below ' + n\n\t        , 'expected #{this} to be at least ' + n\n\t      );\n\t    }\n\t  }\n\t\n\t  Assertion.addMethod('below', assertBelow);\n\t  Assertion.addMethod('lt', assertBelow);\n\t  Assertion.addMethod('lessThan', assertBelow);\n\t\n\t  /**\n\t   * ### .most(value)\n\t   *\n\t   * Asserts that the target is less than or equal to `value`.\n\t   *\n\t   *     expect(5).to.be.at.most(5);\n\t   *\n\t   * Can also be used in conjunction with `length` to\n\t   * assert a maximum length. The benefit being a\n\t   * more informative error message than if the length\n\t   * was supplied directly.\n\t   *\n\t   *     expect('foo').to.have.length.of.at.most(4);\n\t   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);\n\t   *\n\t   * @name most\n\t   * @alias lte\n\t   * @param {Number} value\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertMost (n, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    if (flag(this, 'doLength')) {\n\t      new Assertion(obj, msg).to.have.property('length');\n\t      var len = obj.length;\n\t      this.assert(\n\t          len <= n\n\t        , 'expected #{this} to have a length at most #{exp} but got #{act}'\n\t        , 'expected #{this} to have a length above #{exp}'\n\t        , n\n\t        , len\n\t      );\n\t    } else {\n\t      this.assert(\n\t          obj <= n\n\t        , 'expected #{this} to be at most ' + n\n\t        , 'expected #{this} to be above ' + n\n\t      );\n\t    }\n\t  }\n\t\n\t  Assertion.addMethod('most', assertMost);\n\t  Assertion.addMethod('lte', assertMost);\n\t\n\t  /**\n\t   * ### .within(start, finish)\n\t   *\n\t   * Asserts that the target is within a range.\n\t   *\n\t   *     expect(7).to.be.within(5,10);\n\t   *\n\t   * Can also be used in conjunction with `length` to\n\t   * assert a length range. The benefit being a\n\t   * more informative error message than if the length\n\t   * was supplied directly.\n\t   *\n\t   *     expect('foo').to.have.length.within(2,4);\n\t   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n\t   *\n\t   * @name within\n\t   * @param {Number} start lowerbound inclusive\n\t   * @param {Number} finish upperbound inclusive\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addMethod('within', function (start, finish, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object')\n\t      , range = start + '..' + finish;\n\t    if (flag(this, 'doLength')) {\n\t      new Assertion(obj, msg).to.have.property('length');\n\t      var len = obj.length;\n\t      this.assert(\n\t          len >= start && len <= finish\n\t        , 'expected #{this} to have a length within ' + range\n\t        , 'expected #{this} to not have a length within ' + range\n\t      );\n\t    } else {\n\t      this.assert(\n\t          obj >= start && obj <= finish\n\t        , 'expected #{this} to be within ' + range\n\t        , 'expected #{this} to not be within ' + range\n\t      );\n\t    }\n\t  });\n\t\n\t  /**\n\t   * ### .instanceof(constructor)\n\t   *\n\t   * Asserts that the target is an instance of `constructor`.\n\t   *\n\t   *     var Tea = function (name) { this.name = name; }\n\t   *       , Chai = new Tea('chai');\n\t   *\n\t   *     expect(Chai).to.be.an.instanceof(Tea);\n\t   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);\n\t   *\n\t   * @name instanceof\n\t   * @param {Constructor} constructor\n\t   * @param {String} message _optional_\n\t   * @alias instanceOf\n\t   * @api public\n\t   */\n\t\n\t  function assertInstanceOf (constructor, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var name = _.getName(constructor);\n\t    this.assert(\n\t        flag(this, 'object') instanceof constructor\n\t      , 'expected #{this} to be an instance of ' + name\n\t      , 'expected #{this} to not be an instance of ' + name\n\t    );\n\t  };\n\t\n\t  Assertion.addMethod('instanceof', assertInstanceOf);\n\t  Assertion.addMethod('instanceOf', assertInstanceOf);\n\t\n\t  /**\n\t   * ### .property(name, [value])\n\t   *\n\t   * Asserts that the target has a property `name`, optionally asserting that\n\t   * the value of that property is strictly equal to  `value`.\n\t   * If the `deep` flag is set, you can use dot- and bracket-notation for deep\n\t   * references into objects and arrays.\n\t   *\n\t   *     // simple referencing\n\t   *     var obj = { foo: 'bar' };\n\t   *     expect(obj).to.have.property('foo');\n\t   *     expect(obj).to.have.property('foo', 'bar');\n\t   *\n\t   *     // deep referencing\n\t   *     var deepObj = {\n\t   *         green: { tea: 'matcha' }\n\t   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]\n\t   *     };\n\t   *\n\t   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');\n\t   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');\n\t   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');\n\t   *\n\t   * You can also use an array as the starting point of a `deep.property`\n\t   * assertion, or traverse nested arrays.\n\t   *\n\t   *     var arr = [\n\t   *         [ 'chai', 'matcha', 'konacha' ]\n\t   *       , [ { tea: 'chai' }\n\t   *         , { tea: 'matcha' }\n\t   *         , { tea: 'konacha' } ]\n\t   *     ];\n\t   *\n\t   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');\n\t   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');\n\t   *\n\t   * Furthermore, `property` changes the subject of the assertion\n\t   * to be the value of that property from the original object. This\n\t   * permits for further chainable assertions on that property.\n\t   *\n\t   *     expect(obj).to.have.property('foo')\n\t   *       .that.is.a('string');\n\t   *     expect(deepObj).to.have.property('green')\n\t   *       .that.is.an('object')\n\t   *       .that.deep.equals({ tea: 'matcha' });\n\t   *     expect(deepObj).to.have.property('teas')\n\t   *       .that.is.an('array')\n\t   *       .with.deep.property('[2]')\n\t   *         .that.deep.equals({ tea: 'konacha' });\n\t   *\n\t   * Note that dots and bracket in `name` must be backslash-escaped when\n\t   * the `deep` flag is set, while they must NOT be escaped when the `deep`\n\t   * flag is not set.\n\t   *\n\t   *     // simple referencing\n\t   *     var css = { '.link[target]': 42 };\n\t   *     expect(css).to.have.property('.link[target]', 42);\n\t   *\n\t   *     // deep referencing\n\t   *     var deepCss = { '.link': { '[target]': 42 }};\n\t   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n\t   *\n\t   * @name property\n\t   * @alias deep.property\n\t   * @param {String} name\n\t   * @param {Mixed} value (optional)\n\t   * @param {String} message _optional_\n\t   * @returns value of property for chaining\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addMethod('property', function (name, val, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t\n\t    var isDeep = !!flag(this, 'deep')\n\t      , descriptor = isDeep ? 'deep property ' : 'property '\n\t      , negate = flag(this, 'negate')\n\t      , obj = flag(this, 'object')\n\t      , pathInfo = isDeep ? _.getPathInfo(name, obj) : null\n\t      , hasProperty = isDeep\n\t        ? pathInfo.exists\n\t        : _.hasProperty(name, obj)\n\t      , value = isDeep\n\t        ? pathInfo.value\n\t        : obj[name];\n\t\n\t    if (negate && arguments.length > 1) {\n\t      if (undefined === value) {\n\t        msg = (msg != null) ? msg + ': ' : '';\n\t        throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));\n\t      }\n\t    } else {\n\t      this.assert(\n\t          hasProperty\n\t        , 'expected #{this} to have a ' + descriptor + _.inspect(name)\n\t        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n\t    }\n\t\n\t    if (arguments.length > 1) {\n\t      this.assert(\n\t          val === value\n\t        , 'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n\t        , 'expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}'\n\t        , val\n\t        , value\n\t      );\n\t    }\n\t\n\t    flag(this, 'object', value);\n\t  });\n\t\n\t\n\t  /**\n\t   * ### .ownProperty(name)\n\t   *\n\t   * Asserts that the target has an own property `name`.\n\t   *\n\t   *     expect('test').to.have.ownProperty('length');\n\t   *\n\t   * @name ownProperty\n\t   * @alias haveOwnProperty\n\t   * @param {String} name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertOwnProperty (name, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    this.assert(\n\t        obj.hasOwnProperty(name)\n\t      , 'expected #{this} to have own property ' + _.inspect(name)\n\t      , 'expected #{this} to not have own property ' + _.inspect(name)\n\t    );\n\t  }\n\t\n\t  Assertion.addMethod('ownProperty', assertOwnProperty);\n\t  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\t\n\t  /**\n\t   * ### .ownPropertyDescriptor(name[, descriptor[, message]])\n\t   *\n\t   * Asserts that the target has an own property descriptor `name`, that optionally matches `descriptor`.\n\t   *\n\t   *     expect('test').to.have.ownPropertyDescriptor('length');\n\t   *     expect('test').to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 4 });\n\t   *     expect('test').not.to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 3 });\n\t   *     expect('test').ownPropertyDescriptor('length').to.have.property('enumerable', false);\n\t   *     expect('test').ownPropertyDescriptor('length').to.have.keys('value');\n\t   *\n\t   * @name ownPropertyDescriptor\n\t   * @alias haveOwnPropertyDescriptor\n\t   * @param {String} name\n\t   * @param {Object} descriptor _optional_\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n\t    if (typeof descriptor === 'string') {\n\t      msg = descriptor;\n\t      descriptor = null;\n\t    }\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n\t    if (actualDescriptor && descriptor) {\n\t      this.assert(\n\t          _.eql(descriptor, actualDescriptor)\n\t        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n\t        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n\t        , descriptor\n\t        , actualDescriptor\n\t        , true\n\t      );\n\t    } else {\n\t      this.assert(\n\t          actualDescriptor\n\t        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n\t        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n\t      );\n\t    }\n\t    flag(this, 'object', actualDescriptor);\n\t  }\n\t\n\t  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n\t  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\t\n\t  /**\n\t   * ### .length\n\t   *\n\t   * Sets the `doLength` flag later used as a chain precursor to a value\n\t   * comparison for the `length` property.\n\t   *\n\t   *     expect('foo').to.have.length.above(2);\n\t   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n\t   *     expect('foo').to.have.length.below(4);\n\t   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n\t   *     expect('foo').to.have.length.within(2,4);\n\t   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n\t   *\n\t   * *Deprecation notice:* Using `length` as an assertion will be deprecated\n\t   * in version 2.4.0 and removed in 3.0.0. Code using the old style of\n\t   * asserting for `length` property value using `length(value)` should be\n\t   * switched to use `lengthOf(value)` instead.\n\t   *\n\t   * @name length\n\t   * @api public\n\t   */\n\t\n\t  /**\n\t   * ### .lengthOf(value[, message])\n\t   *\n\t   * Asserts that the target's `length` property has\n\t   * the expected value.\n\t   *\n\t   *     expect([ 1, 2, 3]).to.have.lengthOf(3);\n\t   *     expect('foobar').to.have.lengthOf(6);\n\t   *\n\t   * @name lengthOf\n\t   * @param {Number} length\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertLengthChain () {\n\t    flag(this, 'doLength', true);\n\t  }\n\t\n\t  function assertLength (n, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    new Assertion(obj, msg).to.have.property('length');\n\t    var len = obj.length;\n\t\n\t    this.assert(\n\t        len == n\n\t      , 'expected #{this} to have a length of #{exp} but got #{act}'\n\t      , 'expected #{this} to not have a length of #{act}'\n\t      , n\n\t      , len\n\t    );\n\t  }\n\t\n\t  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n\t  Assertion.addMethod('lengthOf', assertLength);\n\t\n\t  /**\n\t   * ### .match(regexp)\n\t   *\n\t   * Asserts that the target matches a regular expression.\n\t   *\n\t   *     expect('foobar').to.match(/^foo/);\n\t   *\n\t   * @name match\n\t   * @alias matches\n\t   * @param {RegExp} RegularExpression\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t  function assertMatch(re, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    this.assert(\n\t        re.exec(obj)\n\t      , 'expected #{this} to match ' + re\n\t      , 'expected #{this} not to match ' + re\n\t    );\n\t  }\n\t\n\t  Assertion.addMethod('match', assertMatch);\n\t  Assertion.addMethod('matches', assertMatch);\n\t\n\t  /**\n\t   * ### .string(string)\n\t   *\n\t   * Asserts that the string target contains another string.\n\t   *\n\t   *     expect('foobar').to.have.string('bar');\n\t   *\n\t   * @name string\n\t   * @param {String} string\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addMethod('string', function (str, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    new Assertion(obj, msg).is.a('string');\n\t\n\t    this.assert(\n\t        ~obj.indexOf(str)\n\t      , 'expected #{this} to contain ' + _.inspect(str)\n\t      , 'expected #{this} to not contain ' + _.inspect(str)\n\t    );\n\t  });\n\t\n\t\n\t  /**\n\t   * ### .keys(key1, [key2], [...])\n\t   *\n\t   * Asserts that the target contains any or all of the passed-in keys.\n\t   * Use in combination with `any`, `all`, `contains`, or `have` will affect\n\t   * what will pass.\n\t   *\n\t   * When used in conjunction with `any`, at least one key that is passed\n\t   * in must exist in the target object. This is regardless whether or not\n\t   * the `have` or `contain` qualifiers are used. Note, either `any` or `all`\n\t   * should be used in the assertion. If neither are used, the assertion is\n\t   * defaulted to `all`.\n\t   *\n\t   * When both `all` and `contain` are used, the target object must have at\n\t   * least all of the passed-in keys but may have more keys not listed.\n\t   *\n\t   * When both `all` and `have` are used, the target object must both contain\n\t   * all of the passed-in keys AND the number of keys in the target object must\n\t   * match the number of keys passed in (in other words, a target object must\n\t   * have all and only all of the passed-in keys).\n\t   *\n\t   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo', 'baz');\n\t   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo');\n\t   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys('bar', 'baz');\n\t   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys(['foo']);\n\t   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys({'foo': 6});\n\t   *     expect({ foo: 1, bar: 2 }).to.have.all.keys(['bar', 'foo']);\n\t   *     expect({ foo: 1, bar: 2 }).to.have.all.keys({'bar': 6, 'foo': 7});\n\t   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys(['bar', 'foo']);\n\t   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys({'bar': 6});\n\t   *\n\t   *\n\t   * @name keys\n\t   * @alias key\n\t   * @param {String...|Array|Object} keys\n\t   * @api public\n\t   */\n\t\n\t  function assertKeys (keys) {\n\t    var obj = flag(this, 'object')\n\t      , str\n\t      , ok = true\n\t      , mixedArgsMsg = 'keys must be given single argument of Array|Object|String, or multiple String arguments';\n\t\n\t    switch (_.type(keys)) {\n\t      case \"array\":\n\t        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n\t        break;\n\t      case \"object\":\n\t        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n\t        keys = Object.keys(keys);\n\t        break;\n\t      default:\n\t        keys = Array.prototype.slice.call(arguments);\n\t    }\n\t\n\t    if (!keys.length) throw new Error('keys required');\n\t\n\t    var actual = Object.keys(obj)\n\t      , expected = keys\n\t      , len = keys.length\n\t      , any = flag(this, 'any')\n\t      , all = flag(this, 'all');\n\t\n\t    if (!any && !all) {\n\t      all = true;\n\t    }\n\t\n\t    // Has any\n\t    if (any) {\n\t      var intersection = expected.filter(function(key) {\n\t        return ~actual.indexOf(key);\n\t      });\n\t      ok = intersection.length > 0;\n\t    }\n\t\n\t    // Has all\n\t    if (all) {\n\t      ok = keys.every(function(key){\n\t        return ~actual.indexOf(key);\n\t      });\n\t      if (!flag(this, 'negate') && !flag(this, 'contains')) {\n\t        ok = ok && keys.length == actual.length;\n\t      }\n\t    }\n\t\n\t    // Key string\n\t    if (len > 1) {\n\t      keys = keys.map(function(key){\n\t        return _.inspect(key);\n\t      });\n\t      var last = keys.pop();\n\t      if (all) {\n\t        str = keys.join(', ') + ', and ' + last;\n\t      }\n\t      if (any) {\n\t        str = keys.join(', ') + ', or ' + last;\n\t      }\n\t    } else {\n\t      str = _.inspect(keys[0]);\n\t    }\n\t\n\t    // Form\n\t    str = (len > 1 ? 'keys ' : 'key ') + str;\n\t\n\t    // Have / include\n\t    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\t\n\t    // Assertion\n\t    this.assert(\n\t        ok\n\t      , 'expected #{this} to ' + str\n\t      , 'expected #{this} to not ' + str\n\t      , expected.slice(0).sort()\n\t      , actual.sort()\n\t      , true\n\t    );\n\t  }\n\t\n\t  Assertion.addMethod('keys', assertKeys);\n\t  Assertion.addMethod('key', assertKeys);\n\t\n\t  /**\n\t   * ### .throw(constructor)\n\t   *\n\t   * Asserts that the function target will throw a specific error, or specific type of error\n\t   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test\n\t   * for the error's message.\n\t   *\n\t   *     var err = new ReferenceError('This is a bad function.');\n\t   *     var fn = function () { throw err; }\n\t   *     expect(fn).to.throw(ReferenceError);\n\t   *     expect(fn).to.throw(Error);\n\t   *     expect(fn).to.throw(/bad function/);\n\t   *     expect(fn).to.not.throw('good function');\n\t   *     expect(fn).to.throw(ReferenceError, /bad function/);\n\t   *     expect(fn).to.throw(err);\n\t   *     expect(fn).to.not.throw(new RangeError('Out of range.'));\n\t   *\n\t   * Please note that when a throw expectation is negated, it will check each\n\t   * parameter independently, starting with error constructor type. The appropriate way\n\t   * to check for the existence of a type of error but for a message that does not match\n\t   * is to use `and`.\n\t   *\n\t   *     expect(fn).to.throw(ReferenceError)\n\t   *        .and.not.throw(/good function/);\n\t   *\n\t   * @name throw\n\t   * @alias throws\n\t   * @alias Throw\n\t   * @param {ErrorConstructor} constructor\n\t   * @param {String|RegExp} expected error message\n\t   * @param {String} message _optional_\n\t   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n\t   * @returns error for chaining (null if no error)\n\t   * @api public\n\t   */\n\t\n\t  function assertThrows (constructor, errMsg, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    new Assertion(obj, msg).is.a('function');\n\t\n\t    var thrown = false\n\t      , desiredError = null\n\t      , name = null\n\t      , thrownError = null;\n\t\n\t    if (arguments.length === 0) {\n\t      errMsg = null;\n\t      constructor = null;\n\t    } else if (constructor && (constructor instanceof RegExp || 'string' === typeof constructor)) {\n\t      errMsg = constructor;\n\t      constructor = null;\n\t    } else if (constructor && constructor instanceof Error) {\n\t      desiredError = constructor;\n\t      constructor = null;\n\t      errMsg = null;\n\t    } else if (typeof constructor === 'function') {\n\t      name = constructor.prototype.name;\n\t      if (!name || (name === 'Error' && constructor !== Error)) {\n\t        name = constructor.name || (new constructor()).name;\n\t      }\n\t    } else {\n\t      constructor = null;\n\t    }\n\t\n\t    try {\n\t      obj();\n\t    } catch (err) {\n\t      // first, check desired error\n\t      if (desiredError) {\n\t        this.assert(\n\t            err === desiredError\n\t          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n\t          , 'expected #{this} to not throw #{exp}'\n\t          , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n\t          , (err instanceof Error ? err.toString() : err)\n\t        );\n\t\n\t        flag(this, 'object', err);\n\t        return this;\n\t      }\n\t\n\t      // next, check constructor\n\t      if (constructor) {\n\t        this.assert(\n\t            err instanceof constructor\n\t          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n\t          , 'expected #{this} to not throw #{exp} but #{act} was thrown'\n\t          , name\n\t          , (err instanceof Error ? err.toString() : err)\n\t        );\n\t\n\t        if (!errMsg) {\n\t          flag(this, 'object', err);\n\t          return this;\n\t        }\n\t      }\n\t\n\t      // next, check message\n\t      var message = 'error' === _.type(err) && \"message\" in err\n\t        ? err.message\n\t        : '' + err;\n\t\n\t      if ((message != null) && errMsg && errMsg instanceof RegExp) {\n\t        this.assert(\n\t            errMsg.exec(message)\n\t          , 'expected #{this} to throw error matching #{exp} but got #{act}'\n\t          , 'expected #{this} to throw error not matching #{exp}'\n\t          , errMsg\n\t          , message\n\t        );\n\t\n\t        flag(this, 'object', err);\n\t        return this;\n\t      } else if ((message != null) && errMsg && 'string' === typeof errMsg) {\n\t        this.assert(\n\t            ~message.indexOf(errMsg)\n\t          , 'expected #{this} to throw error including #{exp} but got #{act}'\n\t          , 'expected #{this} to throw error not including #{act}'\n\t          , errMsg\n\t          , message\n\t        );\n\t\n\t        flag(this, 'object', err);\n\t        return this;\n\t      } else {\n\t        thrown = true;\n\t        thrownError = err;\n\t      }\n\t    }\n\t\n\t    var actuallyGot = ''\n\t      , expectedThrown = name !== null\n\t        ? name\n\t        : desiredError\n\t          ? '#{exp}' //_.inspect(desiredError)\n\t          : 'an error';\n\t\n\t    if (thrown) {\n\t      actuallyGot = ' but #{act} was thrown'\n\t    }\n\t\n\t    this.assert(\n\t        thrown === true\n\t      , 'expected #{this} to throw ' + expectedThrown + actuallyGot\n\t      , 'expected #{this} to not throw ' + expectedThrown + actuallyGot\n\t      , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n\t      , (thrownError instanceof Error ? thrownError.toString() : thrownError)\n\t    );\n\t\n\t    flag(this, 'object', thrownError);\n\t  };\n\t\n\t  Assertion.addMethod('throw', assertThrows);\n\t  Assertion.addMethod('throws', assertThrows);\n\t  Assertion.addMethod('Throw', assertThrows);\n\t\n\t  /**\n\t   * ### .respondTo(method)\n\t   *\n\t   * Asserts that the object or class target will respond to a method.\n\t   *\n\t   *     Klass.prototype.bar = function(){};\n\t   *     expect(Klass).to.respondTo('bar');\n\t   *     expect(obj).to.respondTo('bar');\n\t   *\n\t   * To check if a constructor will respond to a static function,\n\t   * set the `itself` flag.\n\t   *\n\t   *     Klass.baz = function(){};\n\t   *     expect(Klass).itself.to.respondTo('baz');\n\t   *\n\t   * @name respondTo\n\t   * @alias respondsTo\n\t   * @param {String} method\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function respondTo (method, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object')\n\t      , itself = flag(this, 'itself')\n\t      , context = ('function' === _.type(obj) && !itself)\n\t        ? obj.prototype[method]\n\t        : obj[method];\n\t\n\t    this.assert(\n\t        'function' === typeof context\n\t      , 'expected #{this} to respond to ' + _.inspect(method)\n\t      , 'expected #{this} to not respond to ' + _.inspect(method)\n\t    );\n\t  }\n\t\n\t  Assertion.addMethod('respondTo', respondTo);\n\t  Assertion.addMethod('respondsTo', respondTo);\n\t\n\t  /**\n\t   * ### .itself\n\t   *\n\t   * Sets the `itself` flag, later used by the `respondTo` assertion.\n\t   *\n\t   *     function Foo() {}\n\t   *     Foo.bar = function() {}\n\t   *     Foo.prototype.baz = function() {}\n\t   *\n\t   *     expect(Foo).itself.to.respondTo('bar');\n\t   *     expect(Foo).itself.not.to.respondTo('baz');\n\t   *\n\t   * @name itself\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('itself', function () {\n\t    flag(this, 'itself', true);\n\t  });\n\t\n\t  /**\n\t   * ### .satisfy(method)\n\t   *\n\t   * Asserts that the target passes a given truth test.\n\t   *\n\t   *     expect(1).to.satisfy(function(num) { return num > 0; });\n\t   *\n\t   * @name satisfy\n\t   * @alias satisfies\n\t   * @param {Function} matcher\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function satisfy (matcher, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t    var result = matcher(obj);\n\t    this.assert(\n\t        result\n\t      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n\t      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n\t      , this.negate ? false : true\n\t      , result\n\t    );\n\t  }\n\t\n\t  Assertion.addMethod('satisfy', satisfy);\n\t  Assertion.addMethod('satisfies', satisfy);\n\t\n\t  /**\n\t   * ### .closeTo(expected, delta)\n\t   *\n\t   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n\t   *\n\t   *     expect(1.5).to.be.closeTo(1, 0.5);\n\t   *\n\t   * @name closeTo\n\t   * @alias approximately\n\t   * @param {Number} expected\n\t   * @param {Number} delta\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function closeTo(expected, delta, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t\n\t    new Assertion(obj, msg).is.a('number');\n\t    if (_.type(expected) !== 'number' || _.type(delta) !== 'number') {\n\t      throw new Error('the arguments to closeTo or approximately must be numbers');\n\t    }\n\t\n\t    this.assert(\n\t        Math.abs(obj - expected) <= delta\n\t      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n\t      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n\t    );\n\t  }\n\t\n\t  Assertion.addMethod('closeTo', closeTo);\n\t  Assertion.addMethod('approximately', closeTo);\n\t\n\t  function isSubsetOf(subset, superset, cmp) {\n\t    return subset.every(function(elem) {\n\t      if (!cmp) return superset.indexOf(elem) !== -1;\n\t\n\t      return superset.some(function(elem2) {\n\t        return cmp(elem, elem2);\n\t      });\n\t    })\n\t  }\n\t\n\t  /**\n\t   * ### .members(set)\n\t   *\n\t   * Asserts that the target is a superset of `set`,\n\t   * or that the target and `set` have the same strictly-equal (===) members.\n\t   * Alternately, if the `deep` flag is set, set members are compared for deep\n\t   * equality.\n\t   *\n\t   *     expect([1, 2, 3]).to.include.members([3, 2]);\n\t   *     expect([1, 2, 3]).to.not.include.members([3, 2, 8]);\n\t   *\n\t   *     expect([4, 2]).to.have.members([2, 4]);\n\t   *     expect([5, 2]).to.not.have.members([5, 2, 1]);\n\t   *\n\t   *     expect([{ id: 1 }]).to.deep.include.members([{ id: 1 }]);\n\t   *\n\t   * @name members\n\t   * @param {Array} set\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addMethod('members', function (subset, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var obj = flag(this, 'object');\n\t\n\t    new Assertion(obj).to.be.an('array');\n\t    new Assertion(subset).to.be.an('array');\n\t\n\t    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\t\n\t    if (flag(this, 'contains')) {\n\t      return this.assert(\n\t          isSubsetOf(subset, obj, cmp)\n\t        , 'expected #{this} to be a superset of #{act}'\n\t        , 'expected #{this} to not be a superset of #{act}'\n\t        , obj\n\t        , subset\n\t      );\n\t    }\n\t\n\t    this.assert(\n\t        isSubsetOf(obj, subset, cmp) && isSubsetOf(subset, obj, cmp)\n\t        , 'expected #{this} to have the same members as #{act}'\n\t        , 'expected #{this} to not have the same members as #{act}'\n\t        , obj\n\t        , subset\n\t    );\n\t  });\n\t\n\t  /**\n\t   * ### .oneOf(list)\n\t   *\n\t   * Assert that a value appears somewhere in the top level of array `list`.\n\t   *\n\t   *     expect('a').to.be.oneOf(['a', 'b', 'c']);\n\t   *     expect(9).to.not.be.oneOf(['z']);\n\t   *     expect([3]).to.not.be.oneOf([1, 2, [3]]);\n\t   *\n\t   *     var three = [3];\n\t   *     // for object-types, contents are not compared\n\t   *     expect(three).to.not.be.oneOf([1, 2, [3]]);\n\t   *     // comparing references works\n\t   *     expect(three).to.be.oneOf([1, 2, three]);\n\t   *\n\t   * @name oneOf\n\t   * @param {Array<*>} list\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function oneOf (list, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var expected = flag(this, 'object');\n\t    new Assertion(list).to.be.an('array');\n\t\n\t    this.assert(\n\t        list.indexOf(expected) > -1\n\t      , 'expected #{this} to be one of #{exp}'\n\t      , 'expected #{this} to not be one of #{exp}'\n\t      , list\n\t      , expected\n\t    );\n\t  }\n\t\n\t  Assertion.addMethod('oneOf', oneOf);\n\t\n\t\n\t  /**\n\t   * ### .change(function)\n\t   *\n\t   * Asserts that a function changes an object property\n\t   *\n\t   *     var obj = { val: 10 };\n\t   *     var fn = function() { obj.val += 3 };\n\t   *     var noChangeFn = function() { return 'foo' + 'bar'; }\n\t   *     expect(fn).to.change(obj, 'val');\n\t   *     expect(noChangFn).to.not.change(obj, 'val')\n\t   *\n\t   * @name change\n\t   * @alias changes\n\t   * @alias Change\n\t   * @param {String} object\n\t   * @param {String} property name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertChanges (object, prop, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var fn = flag(this, 'object');\n\t    new Assertion(object, msg).to.have.property(prop);\n\t    new Assertion(fn).is.a('function');\n\t\n\t    var initial = object[prop];\n\t    fn();\n\t\n\t    this.assert(\n\t      initial !== object[prop]\n\t      , 'expected .' + prop + ' to change'\n\t      , 'expected .' + prop + ' to not change'\n\t    );\n\t  }\n\t\n\t  Assertion.addChainableMethod('change', assertChanges);\n\t  Assertion.addChainableMethod('changes', assertChanges);\n\t\n\t  /**\n\t   * ### .increase(function)\n\t   *\n\t   * Asserts that a function increases an object property\n\t   *\n\t   *     var obj = { val: 10 };\n\t   *     var fn = function() { obj.val = 15 };\n\t   *     expect(fn).to.increase(obj, 'val');\n\t   *\n\t   * @name increase\n\t   * @alias increases\n\t   * @alias Increase\n\t   * @param {String} object\n\t   * @param {String} property name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertIncreases (object, prop, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var fn = flag(this, 'object');\n\t    new Assertion(object, msg).to.have.property(prop);\n\t    new Assertion(fn).is.a('function');\n\t\n\t    var initial = object[prop];\n\t    fn();\n\t\n\t    this.assert(\n\t      object[prop] - initial > 0\n\t      , 'expected .' + prop + ' to increase'\n\t      , 'expected .' + prop + ' to not increase'\n\t    );\n\t  }\n\t\n\t  Assertion.addChainableMethod('increase', assertIncreases);\n\t  Assertion.addChainableMethod('increases', assertIncreases);\n\t\n\t  /**\n\t   * ### .decrease(function)\n\t   *\n\t   * Asserts that a function decreases an object property\n\t   *\n\t   *     var obj = { val: 10 };\n\t   *     var fn = function() { obj.val = 5 };\n\t   *     expect(fn).to.decrease(obj, 'val');\n\t   *\n\t   * @name decrease\n\t   * @alias decreases\n\t   * @alias Decrease\n\t   * @param {String} object\n\t   * @param {String} property name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  function assertDecreases (object, prop, msg) {\n\t    if (msg) flag(this, 'message', msg);\n\t    var fn = flag(this, 'object');\n\t    new Assertion(object, msg).to.have.property(prop);\n\t    new Assertion(fn).is.a('function');\n\t\n\t    var initial = object[prop];\n\t    fn();\n\t\n\t    this.assert(\n\t      object[prop] - initial < 0\n\t      , 'expected .' + prop + ' to decrease'\n\t      , 'expected .' + prop + ' to not decrease'\n\t    );\n\t  }\n\t\n\t  Assertion.addChainableMethod('decrease', assertDecreases);\n\t  Assertion.addChainableMethod('decreases', assertDecreases);\n\t\n\t  /**\n\t   * ### .extensible\n\t   *\n\t   * Asserts that the target is extensible (can have new properties added to\n\t   * it).\n\t   *\n\t   *     var nonExtensibleObject = Object.preventExtensions({});\n\t   *     var sealedObject = Object.seal({});\n\t   *     var frozenObject = Object.freeze({});\n\t   *\n\t   *     expect({}).to.be.extensible;\n\t   *     expect(nonExtensibleObject).to.not.be.extensible;\n\t   *     expect(sealedObject).to.not.be.extensible;\n\t   *     expect(frozenObject).to.not.be.extensible;\n\t   *\n\t   * @name extensible\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('extensible', function() {\n\t    var obj = flag(this, 'object');\n\t\n\t    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n\t    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n\t    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n\t    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\t\n\t    var isExtensible;\n\t\n\t    try {\n\t      isExtensible = Object.isExtensible(obj);\n\t    } catch (err) {\n\t      if (err instanceof TypeError) isExtensible = false;\n\t      else throw err;\n\t    }\n\t\n\t    this.assert(\n\t      isExtensible\n\t      , 'expected #{this} to be extensible'\n\t      , 'expected #{this} to not be extensible'\n\t    );\n\t  });\n\t\n\t  /**\n\t   * ### .sealed\n\t   *\n\t   * Asserts that the target is sealed (cannot have new properties added to it\n\t   * and its existing properties cannot be removed).\n\t   *\n\t   *     var sealedObject = Object.seal({});\n\t   *     var frozenObject = Object.freeze({});\n\t   *\n\t   *     expect(sealedObject).to.be.sealed;\n\t   *     expect(frozenObject).to.be.sealed;\n\t   *     expect({}).to.not.be.sealed;\n\t   *\n\t   * @name sealed\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('sealed', function() {\n\t    var obj = flag(this, 'object');\n\t\n\t    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n\t    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n\t    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n\t    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\t\n\t    var isSealed;\n\t\n\t    try {\n\t      isSealed = Object.isSealed(obj);\n\t    } catch (err) {\n\t      if (err instanceof TypeError) isSealed = true;\n\t      else throw err;\n\t    }\n\t\n\t    this.assert(\n\t      isSealed\n\t      , 'expected #{this} to be sealed'\n\t      , 'expected #{this} to not be sealed'\n\t    );\n\t  });\n\t\n\t  /**\n\t   * ### .frozen\n\t   *\n\t   * Asserts that the target is frozen (cannot have new properties added to it\n\t   * and its existing properties cannot be modified).\n\t   *\n\t   *     var frozenObject = Object.freeze({});\n\t   *\n\t   *     expect(frozenObject).to.be.frozen;\n\t   *     expect({}).to.not.be.frozen;\n\t   *\n\t   * @name frozen\n\t   * @api public\n\t   */\n\t\n\t  Assertion.addProperty('frozen', function() {\n\t    var obj = flag(this, 'object');\n\t\n\t    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n\t    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n\t    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n\t    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\t\n\t    var isFrozen;\n\t\n\t    try {\n\t      isFrozen = Object.isFrozen(obj);\n\t    } catch (err) {\n\t      if (err instanceof TypeError) isFrozen = true;\n\t      else throw err;\n\t    }\n\t\n\t    this.assert(\n\t      isFrozen\n\t      , 'expected #{this} to be frozen'\n\t      , 'expected #{this} to not be frozen'\n\t    );\n\t  });\n\t};\n\n\n/***/ },\n/* 60 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * chai\n\t * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\tmodule.exports = function (chai, util) {\n\t  chai.expect = function (val, message) {\n\t    return new chai.Assertion(val, message);\n\t  };\n\t\n\t  /**\n\t   * ### .fail(actual, expected, [message], [operator])\n\t   *\n\t   * Throw a failure.\n\t   *\n\t   * @name fail\n\t   * @param {Mixed} actual\n\t   * @param {Mixed} expected\n\t   * @param {String} message\n\t   * @param {String} operator\n\t   * @api public\n\t   */\n\t\n\t  chai.expect.fail = function (actual, expected, message, operator) {\n\t    message = message || 'expect.fail()';\n\t    throw new chai.AssertionError(message, {\n\t        actual: actual\n\t      , expected: expected\n\t      , operator: operator\n\t    }, chai.expect.fail);\n\t  };\n\t};\n\n\n/***/ },\n/* 61 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * chai\n\t * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\tmodule.exports = function (chai, util) {\n\t  var Assertion = chai.Assertion;\n\t\n\t  function loadShould () {\n\t    // explicitly define this method as function as to have it's name to include as `ssfi`\n\t    function shouldGetter() {\n\t      if (this instanceof String || this instanceof Number || this instanceof Boolean ) {\n\t        return new Assertion(this.valueOf(), null, shouldGetter);\n\t      }\n\t      return new Assertion(this, null, shouldGetter);\n\t    }\n\t    function shouldSetter(value) {\n\t      // See https://github.com/chaijs/chai/issues/86: this makes\n\t      // `whatever.should = someValue` actually set `someValue`, which is\n\t      // especially useful for `global.should = require('chai').should()`.\n\t      //\n\t      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n\t      // since otherwise we would trigger this very setter!\n\t      Object.defineProperty(this, 'should', {\n\t        value: value,\n\t        enumerable: true,\n\t        configurable: true,\n\t        writable: true\n\t      });\n\t    }\n\t    // modify Object.prototype to have `should`\n\t    Object.defineProperty(Object.prototype, 'should', {\n\t      set: shouldSetter\n\t      , get: shouldGetter\n\t      , configurable: true\n\t    });\n\t\n\t    var should = {};\n\t\n\t    /**\n\t     * ### .fail(actual, expected, [message], [operator])\n\t     *\n\t     * Throw a failure.\n\t     *\n\t     * @name fail\n\t     * @param {Mixed} actual\n\t     * @param {Mixed} expected\n\t     * @param {String} message\n\t     * @param {String} operator\n\t     * @api public\n\t     */\n\t\n\t    should.fail = function (actual, expected, message, operator) {\n\t      message = message || 'should.fail()';\n\t      throw new chai.AssertionError(message, {\n\t          actual: actual\n\t        , expected: expected\n\t        , operator: operator\n\t      }, should.fail);\n\t    };\n\t\n\t    should.equal = function (val1, val2, msg) {\n\t      new Assertion(val1, msg).to.equal(val2);\n\t    };\n\t\n\t    should.Throw = function (fn, errt, errs, msg) {\n\t      new Assertion(fn, msg).to.Throw(errt, errs);\n\t    };\n\t\n\t    should.exist = function (val, msg) {\n\t      new Assertion(val, msg).to.exist;\n\t    }\n\t\n\t    // negation\n\t    should.not = {}\n\t\n\t    should.not.equal = function (val1, val2, msg) {\n\t      new Assertion(val1, msg).to.not.equal(val2);\n\t    };\n\t\n\t    should.not.Throw = function (fn, errt, errs, msg) {\n\t      new Assertion(fn, msg).to.not.Throw(errt, errs);\n\t    };\n\t\n\t    should.not.exist = function (val, msg) {\n\t      new Assertion(val, msg).to.not.exist;\n\t    }\n\t\n\t    should['throw'] = should['Throw'];\n\t    should.not['throw'] = should.not['Throw'];\n\t\n\t    return should;\n\t  };\n\t\n\t  chai.should = loadShould;\n\t  chai.Should = loadShould;\n\t};\n\n\n/***/ },\n/* 62 */\n/***/ function(module, exports) {\n\n\t/*!\n\t * chai\n\t * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n\t * MIT Licensed\n\t */\n\t\n\t\n\tmodule.exports = function (chai, util) {\n\t\n\t  /*!\n\t   * Chai dependencies.\n\t   */\n\t\n\t  var Assertion = chai.Assertion\n\t    , flag = util.flag;\n\t\n\t  /*!\n\t   * Module export.\n\t   */\n\t\n\t  /**\n\t   * ### assert(expression, message)\n\t   *\n\t   * Write your own test expressions.\n\t   *\n\t   *     assert('foo' !== 'bar', 'foo is not bar');\n\t   *     assert(Array.isArray([]), 'empty arrays are arrays');\n\t   *\n\t   * @param {Mixed} expression to test for truthiness\n\t   * @param {String} message to display on error\n\t   * @name assert\n\t   * @api public\n\t   */\n\t\n\t  var assert = chai.assert = function (express, errmsg) {\n\t    var test = new Assertion(null, null, chai.assert);\n\t    test.assert(\n\t        express\n\t      , errmsg\n\t      , '[ negation message unavailable ]'\n\t    );\n\t  };\n\t\n\t  /**\n\t   * ### .fail(actual, expected, [message], [operator])\n\t   *\n\t   * Throw a failure. Node.js `assert` module-compatible.\n\t   *\n\t   * @name fail\n\t   * @param {Mixed} actual\n\t   * @param {Mixed} expected\n\t   * @param {String} message\n\t   * @param {String} operator\n\t   * @api public\n\t   */\n\t\n\t  assert.fail = function (actual, expected, message, operator) {\n\t    message = message || 'assert.fail()';\n\t    throw new chai.AssertionError(message, {\n\t        actual: actual\n\t      , expected: expected\n\t      , operator: operator\n\t    }, assert.fail);\n\t  };\n\t\n\t  /**\n\t   * ### .isOk(object, [message])\n\t   *\n\t   * Asserts that `object` is truthy.\n\t   *\n\t   *     assert.isOk('everything', 'everything is ok');\n\t   *     assert.isOk(false, 'this will fail');\n\t   *\n\t   * @name isOk\n\t   * @alias ok\n\t   * @param {Mixed} object to test\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isOk = function (val, msg) {\n\t    new Assertion(val, msg).is.ok;\n\t  };\n\t\n\t  /**\n\t   * ### .isNotOk(object, [message])\n\t   *\n\t   * Asserts that `object` is falsy.\n\t   *\n\t   *     assert.isNotOk('everything', 'this will fail');\n\t   *     assert.isNotOk(false, 'this will pass');\n\t   *\n\t   * @name isNotOk\n\t   * @alias notOk\n\t   * @param {Mixed} object to test\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotOk = function (val, msg) {\n\t    new Assertion(val, msg).is.not.ok;\n\t  };\n\t\n\t  /**\n\t   * ### .equal(actual, expected, [message])\n\t   *\n\t   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n\t   *\n\t   *     assert.equal(3, '3', '== coerces values to strings');\n\t   *\n\t   * @name equal\n\t   * @param {Mixed} actual\n\t   * @param {Mixed} expected\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.equal = function (act, exp, msg) {\n\t    var test = new Assertion(act, msg, assert.equal);\n\t\n\t    test.assert(\n\t        exp == flag(test, 'object')\n\t      , 'expected #{this} to equal #{exp}'\n\t      , 'expected #{this} to not equal #{act}'\n\t      , exp\n\t      , act\n\t    );\n\t  };\n\t\n\t  /**\n\t   * ### .notEqual(actual, expected, [message])\n\t   *\n\t   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n\t   *\n\t   *     assert.notEqual(3, 4, 'these numbers are not equal');\n\t   *\n\t   * @name notEqual\n\t   * @param {Mixed} actual\n\t   * @param {Mixed} expected\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.notEqual = function (act, exp, msg) {\n\t    var test = new Assertion(act, msg, assert.notEqual);\n\t\n\t    test.assert(\n\t        exp != flag(test, 'object')\n\t      , 'expected #{this} to not equal #{exp}'\n\t      , 'expected #{this} to equal #{act}'\n\t      , exp\n\t      , act\n\t    );\n\t  };\n\t\n\t  /**\n\t   * ### .strictEqual(actual, expected, [message])\n\t   *\n\t   * Asserts strict equality (`===`) of `actual` and `expected`.\n\t   *\n\t   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n\t   *\n\t   * @name strictEqual\n\t   * @param {Mixed} actual\n\t   * @param {Mixed} expected\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.strictEqual = function (act, exp, msg) {\n\t    new Assertion(act, msg).to.equal(exp);\n\t  };\n\t\n\t  /**\n\t   * ### .notStrictEqual(actual, expected, [message])\n\t   *\n\t   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n\t   *\n\t   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n\t   *\n\t   * @name notStrictEqual\n\t   * @param {Mixed} actual\n\t   * @param {Mixed} expected\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.notStrictEqual = function (act, exp, msg) {\n\t    new Assertion(act, msg).to.not.equal(exp);\n\t  };\n\t\n\t  /**\n\t   * ### .deepEqual(actual, expected, [message])\n\t   *\n\t   * Asserts that `actual` is deeply equal to `expected`.\n\t   *\n\t   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n\t   *\n\t   * @name deepEqual\n\t   * @param {Mixed} actual\n\t   * @param {Mixed} expected\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.deepEqual = function (act, exp, msg) {\n\t    new Assertion(act, msg).to.eql(exp);\n\t  };\n\t\n\t  /**\n\t   * ### .notDeepEqual(actual, expected, [message])\n\t   *\n\t   * Assert that `actual` is not deeply equal to `expected`.\n\t   *\n\t   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n\t   *\n\t   * @name notDeepEqual\n\t   * @param {Mixed} actual\n\t   * @param {Mixed} expected\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.notDeepEqual = function (act, exp, msg) {\n\t    new Assertion(act, msg).to.not.eql(exp);\n\t  };\n\t\n\t   /**\n\t   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n\t   *\n\t   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`\n\t   *\n\t   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n\t   *\n\t   * @name isAbove\n\t   * @param {Mixed} valueToCheck\n\t   * @param {Mixed} valueToBeAbove\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isAbove = function (val, abv, msg) {\n\t    new Assertion(val, msg).to.be.above(abv);\n\t  };\n\t\n\t   /**\n\t   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n\t   *\n\t   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`\n\t   *\n\t   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n\t   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n\t   *\n\t   * @name isAtLeast\n\t   * @param {Mixed} valueToCheck\n\t   * @param {Mixed} valueToBeAtLeast\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isAtLeast = function (val, atlst, msg) {\n\t    new Assertion(val, msg).to.be.least(atlst);\n\t  };\n\t\n\t   /**\n\t   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n\t   *\n\t   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`\n\t   *\n\t   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n\t   *\n\t   * @name isBelow\n\t   * @param {Mixed} valueToCheck\n\t   * @param {Mixed} valueToBeBelow\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isBelow = function (val, blw, msg) {\n\t    new Assertion(val, msg).to.be.below(blw);\n\t  };\n\t\n\t   /**\n\t   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n\t   *\n\t   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`\n\t   *\n\t   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n\t   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n\t   *\n\t   * @name isAtMost\n\t   * @param {Mixed} valueToCheck\n\t   * @param {Mixed} valueToBeAtMost\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isAtMost = function (val, atmst, msg) {\n\t    new Assertion(val, msg).to.be.most(atmst);\n\t  };\n\t\n\t  /**\n\t   * ### .isTrue(value, [message])\n\t   *\n\t   * Asserts that `value` is true.\n\t   *\n\t   *     var teaServed = true;\n\t   *     assert.isTrue(teaServed, 'the tea has been served');\n\t   *\n\t   * @name isTrue\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isTrue = function (val, msg) {\n\t    new Assertion(val, msg).is['true'];\n\t  };\n\t\n\t  /**\n\t   * ### .isNotTrue(value, [message])\n\t   *\n\t   * Asserts that `value` is not true.\n\t   *\n\t   *     var tea = 'tasty chai';\n\t   *     assert.isNotTrue(tea, 'great, time for tea!');\n\t   *\n\t   * @name isNotTrue\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotTrue = function (val, msg) {\n\t    new Assertion(val, msg).to.not.equal(true);\n\t  };\n\t\n\t  /**\n\t   * ### .isFalse(value, [message])\n\t   *\n\t   * Asserts that `value` is false.\n\t   *\n\t   *     var teaServed = false;\n\t   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n\t   *\n\t   * @name isFalse\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isFalse = function (val, msg) {\n\t    new Assertion(val, msg).is['false'];\n\t  };\n\t\n\t  /**\n\t   * ### .isNotFalse(value, [message])\n\t   *\n\t   * Asserts that `value` is not false.\n\t   *\n\t   *     var tea = 'tasty chai';\n\t   *     assert.isNotFalse(tea, 'great, time for tea!');\n\t   *\n\t   * @name isNotFalse\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotFalse = function (val, msg) {\n\t    new Assertion(val, msg).to.not.equal(false);\n\t  };\n\t\n\t  /**\n\t   * ### .isNull(value, [message])\n\t   *\n\t   * Asserts that `value` is null.\n\t   *\n\t   *     assert.isNull(err, 'there was no error');\n\t   *\n\t   * @name isNull\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNull = function (val, msg) {\n\t    new Assertion(val, msg).to.equal(null);\n\t  };\n\t\n\t  /**\n\t   * ### .isNotNull(value, [message])\n\t   *\n\t   * Asserts that `value` is not null.\n\t   *\n\t   *     var tea = 'tasty chai';\n\t   *     assert.isNotNull(tea, 'great, time for tea!');\n\t   *\n\t   * @name isNotNull\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotNull = function (val, msg) {\n\t    new Assertion(val, msg).to.not.equal(null);\n\t  };\n\t\n\t  /**\n\t   * ### .isNaN\n\t   * Asserts that value is NaN\n\t   *\n\t   *    assert.isNaN('foo', 'foo is NaN');\n\t   *\n\t   * @name isNaN\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNaN = function (val, msg) {\n\t    new Assertion(val, msg).to.be.NaN;\n\t  };\n\t\n\t  /**\n\t   * ### .isNotNaN\n\t   * Asserts that value is not NaN\n\t   *\n\t   *    assert.isNotNaN(4, '4 is not NaN');\n\t   *\n\t   * @name isNotNaN\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t  assert.isNotNaN = function (val, msg) {\n\t    new Assertion(val, msg).not.to.be.NaN;\n\t  };\n\t\n\t  /**\n\t   * ### .isUndefined(value, [message])\n\t   *\n\t   * Asserts that `value` is `undefined`.\n\t   *\n\t   *     var tea;\n\t   *     assert.isUndefined(tea, 'no tea defined');\n\t   *\n\t   * @name isUndefined\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isUndefined = function (val, msg) {\n\t    new Assertion(val, msg).to.equal(undefined);\n\t  };\n\t\n\t  /**\n\t   * ### .isDefined(value, [message])\n\t   *\n\t   * Asserts that `value` is not `undefined`.\n\t   *\n\t   *     var tea = 'cup of chai';\n\t   *     assert.isDefined(tea, 'tea has been defined');\n\t   *\n\t   * @name isDefined\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isDefined = function (val, msg) {\n\t    new Assertion(val, msg).to.not.equal(undefined);\n\t  };\n\t\n\t  /**\n\t   * ### .isFunction(value, [message])\n\t   *\n\t   * Asserts that `value` is a function.\n\t   *\n\t   *     function serveTea() { return 'cup of tea'; };\n\t   *     assert.isFunction(serveTea, 'great, we can have tea now');\n\t   *\n\t   * @name isFunction\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isFunction = function (val, msg) {\n\t    new Assertion(val, msg).to.be.a('function');\n\t  };\n\t\n\t  /**\n\t   * ### .isNotFunction(value, [message])\n\t   *\n\t   * Asserts that `value` is _not_ a function.\n\t   *\n\t   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n\t   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n\t   *\n\t   * @name isNotFunction\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotFunction = function (val, msg) {\n\t    new Assertion(val, msg).to.not.be.a('function');\n\t  };\n\t\n\t  /**\n\t   * ### .isObject(value, [message])\n\t   *\n\t   * Asserts that `value` is an object (as revealed by\n\t   * `Object.prototype.toString`).\n\t   *\n\t   *     var selection = { name: 'Chai', serve: 'with spices' };\n\t   *     assert.isObject(selection, 'tea selection is an object');\n\t   *\n\t   * @name isObject\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isObject = function (val, msg) {\n\t    new Assertion(val, msg).to.be.a('object');\n\t  };\n\t\n\t  /**\n\t   * ### .isNotObject(value, [message])\n\t   *\n\t   * Asserts that `value` is _not_ an object.\n\t   *\n\t   *     var selection = 'chai'\n\t   *     assert.isNotObject(selection, 'tea selection is not an object');\n\t   *     assert.isNotObject(null, 'null is not an object');\n\t   *\n\t   * @name isNotObject\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotObject = function (val, msg) {\n\t    new Assertion(val, msg).to.not.be.a('object');\n\t  };\n\t\n\t  /**\n\t   * ### .isArray(value, [message])\n\t   *\n\t   * Asserts that `value` is an array.\n\t   *\n\t   *     var menu = [ 'green', 'chai', 'oolong' ];\n\t   *     assert.isArray(menu, 'what kind of tea do we want?');\n\t   *\n\t   * @name isArray\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isArray = function (val, msg) {\n\t    new Assertion(val, msg).to.be.an('array');\n\t  };\n\t\n\t  /**\n\t   * ### .isNotArray(value, [message])\n\t   *\n\t   * Asserts that `value` is _not_ an array.\n\t   *\n\t   *     var menu = 'green|chai|oolong';\n\t   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n\t   *\n\t   * @name isNotArray\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotArray = function (val, msg) {\n\t    new Assertion(val, msg).to.not.be.an('array');\n\t  };\n\t\n\t  /**\n\t   * ### .isString(value, [message])\n\t   *\n\t   * Asserts that `value` is a string.\n\t   *\n\t   *     var teaOrder = 'chai';\n\t   *     assert.isString(teaOrder, 'order placed');\n\t   *\n\t   * @name isString\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isString = function (val, msg) {\n\t    new Assertion(val, msg).to.be.a('string');\n\t  };\n\t\n\t  /**\n\t   * ### .isNotString(value, [message])\n\t   *\n\t   * Asserts that `value` is _not_ a string.\n\t   *\n\t   *     var teaOrder = 4;\n\t   *     assert.isNotString(teaOrder, 'order placed');\n\t   *\n\t   * @name isNotString\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotString = function (val, msg) {\n\t    new Assertion(val, msg).to.not.be.a('string');\n\t  };\n\t\n\t  /**\n\t   * ### .isNumber(value, [message])\n\t   *\n\t   * Asserts that `value` is a number.\n\t   *\n\t   *     var cups = 2;\n\t   *     assert.isNumber(cups, 'how many cups');\n\t   *\n\t   * @name isNumber\n\t   * @param {Number} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNumber = function (val, msg) {\n\t    new Assertion(val, msg).to.be.a('number');\n\t  };\n\t\n\t  /**\n\t   * ### .isNotNumber(value, [message])\n\t   *\n\t   * Asserts that `value` is _not_ a number.\n\t   *\n\t   *     var cups = '2 cups please';\n\t   *     assert.isNotNumber(cups, 'how many cups');\n\t   *\n\t   * @name isNotNumber\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotNumber = function (val, msg) {\n\t    new Assertion(val, msg).to.not.be.a('number');\n\t  };\n\t\n\t  /**\n\t   * ### .isBoolean(value, [message])\n\t   *\n\t   * Asserts that `value` is a boolean.\n\t   *\n\t   *     var teaReady = true\n\t   *       , teaServed = false;\n\t   *\n\t   *     assert.isBoolean(teaReady, 'is the tea ready');\n\t   *     assert.isBoolean(teaServed, 'has tea been served');\n\t   *\n\t   * @name isBoolean\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isBoolean = function (val, msg) {\n\t    new Assertion(val, msg).to.be.a('boolean');\n\t  };\n\t\n\t  /**\n\t   * ### .isNotBoolean(value, [message])\n\t   *\n\t   * Asserts that `value` is _not_ a boolean.\n\t   *\n\t   *     var teaReady = 'yep'\n\t   *       , teaServed = 'nope';\n\t   *\n\t   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n\t   *     assert.isNotBoolean(teaServed, 'has tea been served');\n\t   *\n\t   * @name isNotBoolean\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotBoolean = function (val, msg) {\n\t    new Assertion(val, msg).to.not.be.a('boolean');\n\t  };\n\t\n\t  /**\n\t   * ### .typeOf(value, name, [message])\n\t   *\n\t   * Asserts that `value`'s type is `name`, as determined by\n\t   * `Object.prototype.toString`.\n\t   *\n\t   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n\t   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n\t   *     assert.typeOf('tea', 'string', 'we have a string');\n\t   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n\t   *     assert.typeOf(null, 'null', 'we have a null');\n\t   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n\t   *\n\t   * @name typeOf\n\t   * @param {Mixed} value\n\t   * @param {String} name\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.typeOf = function (val, type, msg) {\n\t    new Assertion(val, msg).to.be.a(type);\n\t  };\n\t\n\t  /**\n\t   * ### .notTypeOf(value, name, [message])\n\t   *\n\t   * Asserts that `value`'s type is _not_ `name`, as determined by\n\t   * `Object.prototype.toString`.\n\t   *\n\t   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n\t   *\n\t   * @name notTypeOf\n\t   * @param {Mixed} value\n\t   * @param {String} typeof name\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.notTypeOf = function (val, type, msg) {\n\t    new Assertion(val, msg).to.not.be.a(type);\n\t  };\n\t\n\t  /**\n\t   * ### .instanceOf(object, constructor, [message])\n\t   *\n\t   * Asserts that `value` is an instance of `constructor`.\n\t   *\n\t   *     var Tea = function (name) { this.name = name; }\n\t   *       , chai = new Tea('chai');\n\t   *\n\t   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n\t   *\n\t   * @name instanceOf\n\t   * @param {Object} object\n\t   * @param {Constructor} constructor\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.instanceOf = function (val, type, msg) {\n\t    new Assertion(val, msg).to.be.instanceOf(type);\n\t  };\n\t\n\t  /**\n\t   * ### .notInstanceOf(object, constructor, [message])\n\t   *\n\t   * Asserts `value` is not an instance of `constructor`.\n\t   *\n\t   *     var Tea = function (name) { this.name = name; }\n\t   *       , chai = new String('chai');\n\t   *\n\t   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n\t   *\n\t   * @name notInstanceOf\n\t   * @param {Object} object\n\t   * @param {Constructor} constructor\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.notInstanceOf = function (val, type, msg) {\n\t    new Assertion(val, msg).to.not.be.instanceOf(type);\n\t  };\n\t\n\t  /**\n\t   * ### .include(haystack, needle, [message])\n\t   *\n\t   * Asserts that `haystack` includes `needle`. Works\n\t   * for strings and arrays.\n\t   *\n\t   *     assert.include('foobar', 'bar', 'foobar contains string \"bar\"');\n\t   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');\n\t   *\n\t   * @name include\n\t   * @param {Array|String} haystack\n\t   * @param {Mixed} needle\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.include = function (exp, inc, msg) {\n\t    new Assertion(exp, msg, assert.include).include(inc);\n\t  };\n\t\n\t  /**\n\t   * ### .notInclude(haystack, needle, [message])\n\t   *\n\t   * Asserts that `haystack` does not include `needle`. Works\n\t   * for strings and arrays.\n\t   *\n\t   *     assert.notInclude('foobar', 'baz', 'string not include substring');\n\t   *     assert.notInclude([ 1, 2, 3 ], 4, 'array not include contain value');\n\t   *\n\t   * @name notInclude\n\t   * @param {Array|String} haystack\n\t   * @param {Mixed} needle\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.notInclude = function (exp, inc, msg) {\n\t    new Assertion(exp, msg, assert.notInclude).not.include(inc);\n\t  };\n\t\n\t  /**\n\t   * ### .match(value, regexp, [message])\n\t   *\n\t   * Asserts that `value` matches the regular expression `regexp`.\n\t   *\n\t   *     assert.match('foobar', /^foo/, 'regexp matches');\n\t   *\n\t   * @name match\n\t   * @param {Mixed} value\n\t   * @param {RegExp} regexp\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.match = function (exp, re, msg) {\n\t    new Assertion(exp, msg).to.match(re);\n\t  };\n\t\n\t  /**\n\t   * ### .notMatch(value, regexp, [message])\n\t   *\n\t   * Asserts that `value` does not match the regular expression `regexp`.\n\t   *\n\t   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n\t   *\n\t   * @name notMatch\n\t   * @param {Mixed} value\n\t   * @param {RegExp} regexp\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.notMatch = function (exp, re, msg) {\n\t    new Assertion(exp, msg).to.not.match(re);\n\t  };\n\t\n\t  /**\n\t   * ### .property(object, property, [message])\n\t   *\n\t   * Asserts that `object` has a property named by `property`.\n\t   *\n\t   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n\t   *\n\t   * @name property\n\t   * @param {Object} object\n\t   * @param {String} property\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.property = function (obj, prop, msg) {\n\t    new Assertion(obj, msg).to.have.property(prop);\n\t  };\n\t\n\t  /**\n\t   * ### .notProperty(object, property, [message])\n\t   *\n\t   * Asserts that `object` does _not_ have a property named by `property`.\n\t   *\n\t   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n\t   *\n\t   * @name notProperty\n\t   * @param {Object} object\n\t   * @param {String} property\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.notProperty = function (obj, prop, msg) {\n\t    new Assertion(obj, msg).to.not.have.property(prop);\n\t  };\n\t\n\t  /**\n\t   * ### .deepProperty(object, property, [message])\n\t   *\n\t   * Asserts that `object` has a property named by `property`, which can be a\n\t   * string using dot- and bracket-notation for deep reference.\n\t   *\n\t   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');\n\t   *\n\t   * @name deepProperty\n\t   * @param {Object} object\n\t   * @param {String} property\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.deepProperty = function (obj, prop, msg) {\n\t    new Assertion(obj, msg).to.have.deep.property(prop);\n\t  };\n\t\n\t  /**\n\t   * ### .notDeepProperty(object, property, [message])\n\t   *\n\t   * Asserts that `object` does _not_ have a property named by `property`, which\n\t   * can be a string using dot- and bracket-notation for deep reference.\n\t   *\n\t   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n\t   *\n\t   * @name notDeepProperty\n\t   * @param {Object} object\n\t   * @param {String} property\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.notDeepProperty = function (obj, prop, msg) {\n\t    new Assertion(obj, msg).to.not.have.deep.property(prop);\n\t  };\n\t\n\t  /**\n\t   * ### .propertyVal(object, property, value, [message])\n\t   *\n\t   * Asserts that `object` has a property named by `property` with value given\n\t   * by `value`.\n\t   *\n\t   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n\t   *\n\t   * @name propertyVal\n\t   * @param {Object} object\n\t   * @param {String} property\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.propertyVal = function (obj, prop, val, msg) {\n\t    new Assertion(obj, msg).to.have.property(prop, val);\n\t  };\n\t\n\t  /**\n\t   * ### .propertyNotVal(object, property, value, [message])\n\t   *\n\t   * Asserts that `object` has a property named by `property`, but with a value\n\t   * different from that given by `value`.\n\t   *\n\t   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');\n\t   *\n\t   * @name propertyNotVal\n\t   * @param {Object} object\n\t   * @param {String} property\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.propertyNotVal = function (obj, prop, val, msg) {\n\t    new Assertion(obj, msg).to.not.have.property(prop, val);\n\t  };\n\t\n\t  /**\n\t   * ### .deepPropertyVal(object, property, value, [message])\n\t   *\n\t   * Asserts that `object` has a property named by `property` with value given\n\t   * by `value`. `property` can use dot- and bracket-notation for deep\n\t   * reference.\n\t   *\n\t   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n\t   *\n\t   * @name deepPropertyVal\n\t   * @param {Object} object\n\t   * @param {String} property\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.deepPropertyVal = function (obj, prop, val, msg) {\n\t    new Assertion(obj, msg).to.have.deep.property(prop, val);\n\t  };\n\t\n\t  /**\n\t   * ### .deepPropertyNotVal(object, property, value, [message])\n\t   *\n\t   * Asserts that `object` has a property named by `property`, but with a value\n\t   * different from that given by `value`. `property` can use dot- and\n\t   * bracket-notation for deep reference.\n\t   *\n\t   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n\t   *\n\t   * @name deepPropertyNotVal\n\t   * @param {Object} object\n\t   * @param {String} property\n\t   * @param {Mixed} value\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.deepPropertyNotVal = function (obj, prop, val, msg) {\n\t    new Assertion(obj, msg).to.not.have.deep.property(prop, val);\n\t  };\n\t\n\t  /**\n\t   * ### .lengthOf(object, length, [message])\n\t   *\n\t   * Asserts that `object` has a `length` property with the expected value.\n\t   *\n\t   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n\t   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n\t   *\n\t   * @name lengthOf\n\t   * @param {Mixed} object\n\t   * @param {Number} length\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.lengthOf = function (exp, len, msg) {\n\t    new Assertion(exp, msg).to.have.length(len);\n\t  };\n\t\n\t  /**\n\t   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])\n\t   *\n\t   * Asserts that `function` will throw an error that is an instance of\n\t   * `constructor`, or alternately that it will throw an error with message\n\t   * matching `regexp`.\n\t   *\n\t   *     assert.throws(fn, 'function throws a reference error');\n\t   *     assert.throws(fn, /function throws a reference error/);\n\t   *     assert.throws(fn, ReferenceError);\n\t   *     assert.throws(fn, ReferenceError, 'function throws a reference error');\n\t   *     assert.throws(fn, ReferenceError, /function throws a reference error/);\n\t   *\n\t   * @name throws\n\t   * @alias throw\n\t   * @alias Throw\n\t   * @param {Function} function\n\t   * @param {ErrorConstructor} constructor\n\t   * @param {RegExp} regexp\n\t   * @param {String} message\n\t   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n\t   * @api public\n\t   */\n\t\n\t  assert.throws = function (fn, errt, errs, msg) {\n\t    if ('string' === typeof errt || errt instanceof RegExp) {\n\t      errs = errt;\n\t      errt = null;\n\t    }\n\t\n\t    var assertErr = new Assertion(fn, msg).to.throw(errt, errs);\n\t    return flag(assertErr, 'object');\n\t  };\n\t\n\t  /**\n\t   * ### .doesNotThrow(function, [constructor/regexp], [message])\n\t   *\n\t   * Asserts that `function` will _not_ throw an error that is an instance of\n\t   * `constructor`, or alternately that it will not throw an error with message\n\t   * matching `regexp`.\n\t   *\n\t   *     assert.doesNotThrow(fn, Error, 'function does not throw');\n\t   *\n\t   * @name doesNotThrow\n\t   * @param {Function} function\n\t   * @param {ErrorConstructor} constructor\n\t   * @param {RegExp} regexp\n\t   * @param {String} message\n\t   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n\t   * @api public\n\t   */\n\t\n\t  assert.doesNotThrow = function (fn, type, msg) {\n\t    if ('string' === typeof type) {\n\t      msg = type;\n\t      type = null;\n\t    }\n\t\n\t    new Assertion(fn, msg).to.not.Throw(type);\n\t  };\n\t\n\t  /**\n\t   * ### .operator(val1, operator, val2, [message])\n\t   *\n\t   * Compares two values using `operator`.\n\t   *\n\t   *     assert.operator(1, '<', 2, 'everything is ok');\n\t   *     assert.operator(1, '>', 2, 'this will fail');\n\t   *\n\t   * @name operator\n\t   * @param {Mixed} val1\n\t   * @param {String} operator\n\t   * @param {Mixed} val2\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.operator = function (val, operator, val2, msg) {\n\t    var ok;\n\t    switch(operator) {\n\t      case '==':\n\t        ok = val == val2;\n\t        break;\n\t      case '===':\n\t        ok = val === val2;\n\t        break;\n\t      case '>':\n\t        ok = val > val2;\n\t        break;\n\t      case '>=':\n\t        ok = val >= val2;\n\t        break;\n\t      case '<':\n\t        ok = val < val2;\n\t        break;\n\t      case '<=':\n\t        ok = val <= val2;\n\t        break;\n\t      case '!=':\n\t        ok = val != val2;\n\t        break;\n\t      case '!==':\n\t        ok = val !== val2;\n\t        break;\n\t      default:\n\t        throw new Error('Invalid operator \"' + operator + '\"');\n\t    }\n\t    var test = new Assertion(ok, msg);\n\t    test.assert(\n\t        true === flag(test, 'object')\n\t      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n\t      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n\t  };\n\t\n\t  /**\n\t   * ### .closeTo(actual, expected, delta, [message])\n\t   *\n\t   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n\t   *\n\t   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n\t   *\n\t   * @name closeTo\n\t   * @param {Number} actual\n\t   * @param {Number} expected\n\t   * @param {Number} delta\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.closeTo = function (act, exp, delta, msg) {\n\t    new Assertion(act, msg).to.be.closeTo(exp, delta);\n\t  };\n\t\n\t  /**\n\t   * ### .approximately(actual, expected, delta, [message])\n\t   *\n\t   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n\t   *\n\t   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n\t   *\n\t   * @name approximately\n\t   * @param {Number} actual\n\t   * @param {Number} expected\n\t   * @param {Number} delta\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.approximately = function (act, exp, delta, msg) {\n\t    new Assertion(act, msg).to.be.approximately(exp, delta);\n\t  };\n\t\n\t  /**\n\t   * ### .sameMembers(set1, set2, [message])\n\t   *\n\t   * Asserts that `set1` and `set2` have the same members.\n\t   * Order is not taken into account.\n\t   *\n\t   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n\t   *\n\t   * @name sameMembers\n\t   * @param {Array} set1\n\t   * @param {Array} set2\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.sameMembers = function (set1, set2, msg) {\n\t    new Assertion(set1, msg).to.have.same.members(set2);\n\t  }\n\t\n\t  /**\n\t   * ### .sameDeepMembers(set1, set2, [message])\n\t   *\n\t   * Asserts that `set1` and `set2` have the same members - using a deep equality checking.\n\t   * Order is not taken into account.\n\t   *\n\t   *     assert.sameDeepMembers([ {b: 3}, {a: 2}, {c: 5} ], [ {c: 5}, {b: 3}, {a: 2} ], 'same deep members');\n\t   *\n\t   * @name sameDeepMembers\n\t   * @param {Array} set1\n\t   * @param {Array} set2\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.sameDeepMembers = function (set1, set2, msg) {\n\t    new Assertion(set1, msg).to.have.same.deep.members(set2);\n\t  }\n\t\n\t  /**\n\t   * ### .includeMembers(superset, subset, [message])\n\t   *\n\t   * Asserts that `subset` is included in `superset`.\n\t   * Order is not taken into account.\n\t   *\n\t   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], 'include members');\n\t   *\n\t   * @name includeMembers\n\t   * @param {Array} superset\n\t   * @param {Array} subset\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.includeMembers = function (superset, subset, msg) {\n\t    new Assertion(superset, msg).to.include.members(subset);\n\t  }\n\t\n\t  /**\n\t   * ### .oneOf(inList, list, [message])\n\t   *\n\t   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n\t   *\n\t   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n\t   *\n\t   * @name oneOf\n\t   * @param {*} inList\n\t   * @param {Array<*>} list\n\t   * @param {String} message\n\t   * @api public\n\t   */\n\t\n\t  assert.oneOf = function (inList, list, msg) {\n\t    new Assertion(inList, msg).to.be.oneOf(list);\n\t  }\n\t\n\t   /**\n\t   * ### .changes(function, object, property)\n\t   *\n\t   * Asserts that a function changes the value of a property\n\t   *\n\t   *     var obj = { val: 10 };\n\t   *     var fn = function() { obj.val = 22 };\n\t   *     assert.changes(fn, obj, 'val');\n\t   *\n\t   * @name changes\n\t   * @param {Function} modifier function\n\t   * @param {Object} object\n\t   * @param {String} property name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.changes = function (fn, obj, prop) {\n\t    new Assertion(fn).to.change(obj, prop);\n\t  }\n\t\n\t   /**\n\t   * ### .doesNotChange(function, object, property)\n\t   *\n\t   * Asserts that a function does not changes the value of a property\n\t   *\n\t   *     var obj = { val: 10 };\n\t   *     var fn = function() { console.log('foo'); };\n\t   *     assert.doesNotChange(fn, obj, 'val');\n\t   *\n\t   * @name doesNotChange\n\t   * @param {Function} modifier function\n\t   * @param {Object} object\n\t   * @param {String} property name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.doesNotChange = function (fn, obj, prop) {\n\t    new Assertion(fn).to.not.change(obj, prop);\n\t  }\n\t\n\t   /**\n\t   * ### .increases(function, object, property)\n\t   *\n\t   * Asserts that a function increases an object property\n\t   *\n\t   *     var obj = { val: 10 };\n\t   *     var fn = function() { obj.val = 13 };\n\t   *     assert.increases(fn, obj, 'val');\n\t   *\n\t   * @name increases\n\t   * @param {Function} modifier function\n\t   * @param {Object} object\n\t   * @param {String} property name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.increases = function (fn, obj, prop) {\n\t    new Assertion(fn).to.increase(obj, prop);\n\t  }\n\t\n\t   /**\n\t   * ### .doesNotIncrease(function, object, property)\n\t   *\n\t   * Asserts that a function does not increase object property\n\t   *\n\t   *     var obj = { val: 10 };\n\t   *     var fn = function() { obj.val = 8 };\n\t   *     assert.doesNotIncrease(fn, obj, 'val');\n\t   *\n\t   * @name doesNotIncrease\n\t   * @param {Function} modifier function\n\t   * @param {Object} object\n\t   * @param {String} property name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.doesNotIncrease = function (fn, obj, prop) {\n\t    new Assertion(fn).to.not.increase(obj, prop);\n\t  }\n\t\n\t   /**\n\t   * ### .decreases(function, object, property)\n\t   *\n\t   * Asserts that a function decreases an object property\n\t   *\n\t   *     var obj = { val: 10 };\n\t   *     var fn = function() { obj.val = 5 };\n\t   *     assert.decreases(fn, obj, 'val');\n\t   *\n\t   * @name decreases\n\t   * @param {Function} modifier function\n\t   * @param {Object} object\n\t   * @param {String} property name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.decreases = function (fn, obj, prop) {\n\t    new Assertion(fn).to.decrease(obj, prop);\n\t  }\n\t\n\t   /**\n\t   * ### .doesNotDecrease(function, object, property)\n\t   *\n\t   * Asserts that a function does not decreases an object property\n\t   *\n\t   *     var obj = { val: 10 };\n\t   *     var fn = function() { obj.val = 15 };\n\t   *     assert.doesNotDecrease(fn, obj, 'val');\n\t   *\n\t   * @name doesNotDecrease\n\t   * @param {Function} modifier function\n\t   * @param {Object} object\n\t   * @param {String} property name\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.doesNotDecrease = function (fn, obj, prop) {\n\t    new Assertion(fn).to.not.decrease(obj, prop);\n\t  }\n\t\n\t  /*!\n\t   * ### .ifError(object)\n\t   *\n\t   * Asserts if value is not a false value, and throws if it is a true value.\n\t   * This is added to allow for chai to be a drop-in replacement for Node's\n\t   * assert class.\n\t   *\n\t   *     var err = new Error('I am a custom error');\n\t   *     assert.ifError(err); // Rethrows err!\n\t   *\n\t   * @name ifError\n\t   * @param {Object} object\n\t   * @api public\n\t   */\n\t\n\t  assert.ifError = function (val) {\n\t    if (val) {\n\t      throw(val);\n\t    }\n\t  };\n\t\n\t  /**\n\t   * ### .isExtensible(object)\n\t   *\n\t   * Asserts that `object` is extensible (can have new properties added to it).\n\t   *\n\t   *     assert.isExtensible({});\n\t   *\n\t   * @name isExtensible\n\t   * @alias extensible\n\t   * @param {Object} object\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.isExtensible = function (obj, msg) {\n\t    new Assertion(obj, msg).to.be.extensible;\n\t  };\n\t\n\t  /**\n\t   * ### .isNotExtensible(object)\n\t   *\n\t   * Asserts that `object` is _not_ extensible.\n\t   *\n\t   *     var nonExtensibleObject = Object.preventExtensions({});\n\t   *     var sealedObject = Object.seal({});\n\t   *     var frozenObject = Object.freese({});\n\t   *\n\t   *     assert.isNotExtensible(nonExtensibleObject);\n\t   *     assert.isNotExtensible(sealedObject);\n\t   *     assert.isNotExtensible(frozenObject);\n\t   *\n\t   * @name isNotExtensible\n\t   * @alias notExtensible\n\t   * @param {Object} object\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotExtensible = function (obj, msg) {\n\t    new Assertion(obj, msg).to.not.be.extensible;\n\t  };\n\t\n\t  /**\n\t   * ### .isSealed(object)\n\t   *\n\t   * Asserts that `object` is sealed (cannot have new properties added to it\n\t   * and its existing properties cannot be removed).\n\t   *\n\t   *     var sealedObject = Object.seal({});\n\t   *     var frozenObject = Object.seal({});\n\t   *\n\t   *     assert.isSealed(sealedObject);\n\t   *     assert.isSealed(frozenObject);\n\t   *\n\t   * @name isSealed\n\t   * @alias sealed\n\t   * @param {Object} object\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.isSealed = function (obj, msg) {\n\t    new Assertion(obj, msg).to.be.sealed;\n\t  };\n\t\n\t  /**\n\t   * ### .isNotSealed(object)\n\t   *\n\t   * Asserts that `object` is _not_ sealed.\n\t   *\n\t   *     assert.isNotSealed({});\n\t   *\n\t   * @name isNotSealed\n\t   * @alias notSealed\n\t   * @param {Object} object\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotSealed = function (obj, msg) {\n\t    new Assertion(obj, msg).to.not.be.sealed;\n\t  };\n\t\n\t  /**\n\t   * ### .isFrozen(object)\n\t   *\n\t   * Asserts that `object` is frozen (cannot have new properties added to it\n\t   * and its existing properties cannot be modified).\n\t   *\n\t   *     var frozenObject = Object.freeze({});\n\t   *     assert.frozen(frozenObject);\n\t   *\n\t   * @name isFrozen\n\t   * @alias frozen\n\t   * @param {Object} object\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.isFrozen = function (obj, msg) {\n\t    new Assertion(obj, msg).to.be.frozen;\n\t  };\n\t\n\t  /**\n\t   * ### .isNotFrozen(object)\n\t   *\n\t   * Asserts that `object` is _not_ frozen.\n\t   *\n\t   *     assert.isNotFrozen({});\n\t   *\n\t   * @name isNotFrozen\n\t   * @alias notFrozen\n\t   * @param {Object} object\n\t   * @param {String} message _optional_\n\t   * @api public\n\t   */\n\t\n\t  assert.isNotFrozen = function (obj, msg) {\n\t    new Assertion(obj, msg).to.not.be.frozen;\n\t  };\n\t\n\t  /*!\n\t   * Aliases.\n\t   */\n\t\n\t  (function alias(name, as){\n\t    assert[as] = assert[name];\n\t    return alias;\n\t  })\n\t  ('isOk', 'ok')\n\t  ('isNotOk', 'notOk')\n\t  ('throws', 'throw')\n\t  ('throws', 'Throw')\n\t  ('isExtensible', 'extensible')\n\t  ('isNotExtensible', 'notExtensible')\n\t  ('isSealed', 'sealed')\n\t  ('isNotSealed', 'notSealed')\n\t  ('isFrozen', 'frozen')\n\t  ('isNotFrozen', 'notFrozen');\n\t};\n\n\n/***/ },\n/* 63 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar m = __webpack_require__(11);\n\tvar expect = __webpack_require__(23).expect;\n\t\n\tdescribe('microdata', function () {\n\t\tit('should extract microdata from DOM element with a single metadata root', function () {\n\t\t\tvar data = m.extract('offer1');\n\t\t\texpect(data).to.deep.equal({ \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } });\n\t\t});\n\t\n\t\tit('should extract microdata from DOM element with multiple metadata roots', function () {\n\t\t\tvar data = m.extract('multiple_meta_items');\n\t\t\texpect(data).to.deep.equal({ '__items' : [\n\t\t\t\t{ \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic1\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } },\t\t\t\n\t\t\t\t{ \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic2\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } }\t\t\t\n\t\t\t]});\n\t\t});\n\t\n\t\tit('should extract microdata from document HEAD', function () {\n\t\t\tvar data = m.extractFromHead();\n\t\t\texpect(data).to.deep.equal({ \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\" });\n\t\t});\n\t\t\n\t\tdescribe('meta-data mapper', function(){\n\t\t\tit('should be able to replace each extracted piece of metadata', function(){\n\t\t\t\t\n\t\t\t\tm.setMapper(function(meta){\n\t\t\t\t\treturn {c : 'd'};\n\t\t\t\t});\n\t\t\t\tvar data = m.extractFromHead();\n\t\t\t\texpect(data).to.deep.equal({ \"c\" : \"d\" });\t\n\t\t\t});\n\t\t\tit('should be able to convert metadata', function(){\n\t\t\t\t\n\t\t\t\tm.setMapper(function(meta){\n\t\t\t\t\treturn {c : 'd', d : meta['og:description']};\n\t\t\t\t});\n\t\t\t\tvar data = m.extractFromHead();\n\t\t\t\texpect(data).to.deep.equal({ \"c\" : \"d\", \"d\" : \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\" });\t\n\t\t\t});\n\t\t\tit('should be \"transparent\" mappig using the noMapper', function(){\n\t\t\t\texpect(m.noMapper('dfd')).to.equal('dfd');\n\t\t\t});\n\t\t\tit('should provide metadata and DOM tree root element it was extracted from', function(done){\n\t\t\t\tm.setMapper(function(meta, el){\n\t\t\t\t\texpect(el.attr('id')).to.equal('offer1');\n\t\t\t\t\texpect(el.attr('data-event-id')).to.equal('123');\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t\tm.extract('offer1');\n\t\t\t});\n\t\t\tit('should provide only metadata and no DOM tree root element when extracting from HEAD', function(done){\n\t\t\t\tm.setMapper(function(meta, el){\n\t\t\t\t\texpect(el).to.be.undefined;\n\t\t\t\t\tdone();\n\t\t\t\t});\n\t\t\t\tm.extractFromHead();\n\t\t\t});\n\t\t\tit('should handle mapper failure', function(){\n\t\t\t\tm.setMapper(function(meta, el){\n\t\t\t\t\tdasdf.asdfasdf = 5;\n\t\t\t\t});\n\t\t\t\tvar headerMeta = m.extractFromHead();\t\t\n\t\t\t\texpect(headerMeta).to.deep.equal({ \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\" });\n\t\t\t})\n\t\t});\n\t\t\n\t})\n\n/***/ },\n/* 64 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar cookies = __webpack_require__(7);\n\tbeforeEach('cleanup user and session info', function () {\n\t\tvar keys = cookies.keys();\n\t\tfor (var i = 0; i < keys.length; i++) {\n\t\t\tvar element = keys[i];\n\t\t\tcookies.removeItem(element);\n\t\t}\n\t\tkeys = cookies.keys();\n\t})\n\n/***/ },\n/* 65 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tvar expect = __webpack_require__(23).expect;\n\tvar info = __webpack_require__(14);\n\tvar features = __webpack_require__(15);\n\t\n\tdescribe('script version', function(){\n\t\tit('should be same as major.minor.build-feature1.feature2 format', function(){\n\t\t\tfeatures.defineExperiment('experiment1', 100);\n\t\t\tfeatures.defineExperiment('experiment2', 100);\n\t\t\texpect(info.version()).to.equal([info.major, info.minor, info.build].join('.') + '-experiment1.experiment2');\t\n\t\t});\n\t\tit('should be same as major.minor.build', function(){\n\t\t\tfeatures.clearExperiments();\n\t\t\texpect(info.version()).to.equal([info.major, info.minor, info.build].join('.'));\t\t\n\t\t});\n\t});\n\n/***/ }\n/******/ ]);\n\n\n/** WEBPACK FOOTER **\n ** tests.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 5f045019ab4deb14feae\n **/","// parseUri 1.2.2\n// (c) Steven Levithan <stevenlevithan.com>\n// MIT License\n\nfunction parseUri (str) {\n\tvar\to   = parseUri.options,\n\t\tm   = o.parser[o.strictMode ? \"strict\" : \"loose\"].exec(str),\n\t\turi = {},\n\t\ti   = 14;\n\n\twhile (i--) uri[o.key[i]] = m[i] || \"\";\n\n\turi[o.q.name] = {};\n\turi[o.key[12]].replace(o.q.parser, function ($0, $1, $2) {\n\t\tif ($1) uri[o.q.name][$1] = $2;\n\t});\n\n\treturn uri;\n}\n\nparseUri.options = {\n\tstrictMode: false,\n\tkey: [\"source\",\"protocol\",\"authority\",\"userInfo\",\"user\",\"password\",\"host\",\"port\",\"relative\",\"path\",\"directory\",\"file\",\"query\",\"anchor\"],\n\tq:   {\n\t\tname:   \"queryKey\",\n\t\tparser: /(?:^|&)([^&=]*)=?([^&]*)/g\n\t},\n\tparser: {\n\t\tstrict: /^(?:([^:\\/?#]+):)?(?:\\/\\/((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?))?((((?:[^?#\\/]*\\/)*)([^?#]*))(?:\\?([^#]*))?(?:#(.*))?)/,\n\t\tloose:  /^(?:(?![^:@]+:[^:@\\/]*@)([^:\\/?#.]+):)?(?:\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?([^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/\n\t}\n};\n\nmodule.exports = parseUri;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/parseuri.js\n ** module id = 2\n ** module chunks = 0 1\n **/","var session = require('./session');\nvar parseUri = require('./parseuri');\nmodule.exports = {\n\tsections: function () {\n\t\tvar locationHashChanged = function (oldHash, newHash) {\n\t\t\tasa('sectionentered', newHash.substr(1));\n\t\t};\n\t\tvar storedHash = '';\n\t\twindow.setInterval(function () {\n\t\t\tif (window.location.hash != storedHash) {\n\t\t\t\tvar newHash = window.location.hash;\n\t\t\t\tlocationHashChanged(storedHash, newHash);\n\t\t\t\tstoredHash = newHash;\n\t\t\t}\n\t\t}, 100);\n\t},\n\n\tlinks: function (domains) {\n\t\tvar domainsTracked = domains;\n\t\tvar tracker = function (ev) {\n\t\t\tvar href = ev.target.href;\n\t\t\tif (href) {\n\t\t\t\tvar destination = parseUri(href);\n\t\t\t\tif (domainsTracked.indexOf(destination.authority) > -1) {\n\t\t\t\t\tvar alreadyHasParams = ev.target.href.indexOf('?') !== -1;\n\t\t\t\t\thref = href + (alreadyHasParams ? '&' : '?') + '__asa_partner_id=' + encodeURIComponent(window.asaId) + '&__asa_partner_sid=' + encodeURIComponent(session.getSessionId());\n\t\t\t\t\tev.target.href = href;\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\t\tdocument.addEventListener('mousedown', tracker);\n\t\tdocument.addEventListener('keyup', tracker);\n\t\tdocument.addEventListener('touchstart', tracker);\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/auto_track.js\n ** module id = 3\n ** module chunks = 0 1\n **/","var debug = require('./debug');\nvar user = require('./user');\nvar randomness = require('./randomness');\nvar hash = require('./domain_hash');\n\n\nvar SESSION_EXPIRE_TIMEOUT = 30 * 60;\n// SESSION_EXPIRE_TIMEOUT = 30 * 60;\nvar SESSION_COOKIE_NAME = '__asa_session';\n\nvar store = {\n\thasItem: function (name) {\n\t\tvar item = window.sessionStorage.getItem(name);\n\t\treturn item && JSON.parse(item).t > (1 * new Date());\n\t},\n\tgetItem: function (name) {\n\t\treturn JSON.parse(window.sessionStorage.getItem(name)).v;\n\t},\n\tsetItem: function (name, value, timeout) {\n\t\twindow.sessionStorage.setItem(name, JSON.stringify({\n\t\t\tv: value,\n\t\t\tt: (1 * new Date()) + (1000 * timeout)\n\t\t}));\n\t},\n\tupdateTimeout: function (name, timeout) {\n\t\tvar item = JSON.parse(window.sessionStorage.getItem(name));\n\t\tstore.setItem(name, item.v, timeout);\n\t}\n};\n\nvar sessionStore = store;\nvar ourSessionManager = {\n\textendSession: function () {\n\t\tif (!sessionStore.hasItem(SESSION_COOKIE_NAME)) {\n\t\t\tdebug.log('starting session');\n\t\t\tsessionStore.setItem(SESSION_COOKIE_NAME, user.getDomainId() + '.' + hash(user.getUserId() + '.' + randomness.getNumber()), SESSION_EXPIRE_TIMEOUT);\n\t\t} else {\n\t\t\tsessionStore.updateTimeout(SESSION_COOKIE_NAME, SESSION_EXPIRE_TIMEOUT);\n\t\t}\n\t},\n\n\tgetSessionId: function () {\n\t\treturn sessionStore.getItem(SESSION_COOKIE_NAME);\n\t}\n    \n};\nvar providedSessionManager = function(getSessionId, extendSession){\n    return {\n        extendSession: function () {\n            if (extendSession) extendSession();\n        },\n    \n        getSessionId: function () {\n            return getSessionId();\n        }    \n    };\n};\nvar sessionManager = ourSessionManager;\nmodule.exports = {\n\textendSession: function () {\n        sessionManager.extendSession();\n\t},\n\n\tgetSessionId: function () {\n\t\treturn sessionManager.getSessionId();\n\t},\n    customSession : function(getSession, extendSession){\n        sessionManager = providedSessionManager(getSession, extendSession);\n    }\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/session.js\n ** module id = 4\n ** module chunks = 0 1\n **/","// old ie\nif (typeof console === 'undefined') {\n\twindow.console = {};\n}\nif (typeof console.log === 'undefined'){\n\twindow.console.log = function(){};\n}\n\nvar noLog = function noLog() { };\nvar doLog = function doLog() {\n\t[].unshift.call(arguments, 'asa.js:');\n\tconsole.log.apply(console, arguments);\n};\nvar me = module.exports = {\n\tlog: noLog,\n\tsetDebugMode: function (on) {\n\t\tme.log = on ? doLog : noLog;\n\t},\n\tforceLog:doLog\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/debug.js\n ** module id = 5\n ** module chunks = 0 1\n **/","var cookies = require('./cookies');\nvar hash = require('./domain_hash');\nvar randomness = require('./randomness');\nvar USER_ID_COOKIE = '__as_user';\nvar generateUserId = function () {\n\treturn hash(window.location.host) + '.' + hash('' + randomness.getNumber());\n};\nvar getUserId = function () {\n\tif (!cookies.hasItem(USER_ID_COOKIE)) {\n\t\tcookies.setItem(USER_ID_COOKIE, generateUserId(), Infinity, '/');\n\t}\n\n\treturn cookies.getItem(USER_ID_COOKIE);\n};\n\nmodule.exports = {\n\tgetUserId: getUserId,\n\tgetDomainId: function () {\n\t\treturn hash(window.location.host);\n\t},\n\tgetUserHash: function () {\n\t\treturn parseInt(getUserId().split('.')[1], 10);\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/user.js\n ** module id = 6\n ** module chunks = 0 1\n **/","/*\\\n|*|\n|*|  :: cookies.js ::\n|*|\n|*|  A complete cookies reader/writer framework with full unicode support.\n|*|\n|*|  Revision #1 - September 4, 2014\n|*|\n|*|  https://developer.mozilla.org/en-US/docs/Web/API/document.cookie\n|*|  https://developer.mozilla.org/User:fusionchess\n|*|\n|*|  This framework is released under the GNU Public License, version 3 or later.\n|*|  http://www.gnu.org/licenses/gpl-3.0-standalone.html\n|*|\n|*|  Syntaxes:\n|*|\n|*|  * docCookies.setItem(name, value[, end[, path[, domain[, secure]]]])\n|*|  * docCookies.getItem(name)\n|*|  * docCookies.removeItem(name[, path[, domain]])\n|*|  * docCookies.hasItem(name)\n|*|  * docCookies.keys()\n|*|\n\\*/\n\nvar docCookies = {\n  getItem: function (sKey) {\n    if (!sKey) { return null; }\n    return decodeURIComponent(document.cookie.replace(new RegExp(\"(?:(?:^|.*;)\\\\s*\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\\\\s*([^;]*).*$)|^.*$\"), \"$1\")) || null;\n  },\n  setItem: function (sKey, sValue, vEnd, sPath, sDomain, bSecure) {\n    if (!sKey || /^(?:expires|max\\-age|path|domain|secure)$/i.test(sKey)) { return false; }\n    var sExpires = \"\";\n    if (vEnd) {\n      switch (vEnd.constructor) {\n        case Number:\n          sExpires = vEnd === Infinity ? \"; expires=Fri, 31 Dec 9999 23:59:59 GMT\" : \"; max-age=\" + vEnd;\n          break;\n        case String:\n          sExpires = \"; expires=\" + vEnd;\n          break;\n        case Date:\n          sExpires = \"; expires=\" + vEnd.toUTCString();\n          break;\n      }\n    }\n    document.cookie = encodeURIComponent(sKey) + \"=\" + encodeURIComponent(sValue) + sExpires + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\") + (bSecure ? \"; secure\" : \"\");\n    return true;\n  },\n  removeItem: function (sKey, sPath, sDomain) {\n    if (!this.hasItem(sKey)) { return false; }\n    document.cookie = encodeURIComponent(sKey) + \"=; expires=Thu, 01 Jan 1970 00:00:00 GMT\" + (sDomain ? \"; domain=\" + sDomain : \"\") + (sPath ? \"; path=\" + sPath : \"\");\n    return true;\n  },\n  hasItem: function (sKey) {\n    if (!sKey) { return false; }\n    return (new RegExp(\"(?:^|;\\\\s*)\" + encodeURIComponent(sKey).replace(/[\\-\\.\\+\\*]/g, \"\\\\$&\") + \"\\\\s*\\\\=\")).test(document.cookie);\n  },\n  keys: function () {\n    var aKeys = document.cookie.replace(/((?:^|\\s*;)[^\\=]+)(?=;|$)|^\\s*|\\s*(?:\\=[^;]*)?(?:\\1|$)/g, \"\").split(/\\s*(?:\\=[^;]*)?;\\s*/);\n    for (var nLen = aKeys.length, nIdx = 0; nIdx < nLen; nIdx++) { aKeys[nIdx] = decodeURIComponent(aKeys[nIdx]); }\n    return aKeys;\n  }\n};\n\nmodule.exports = docCookies;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/cookies.js\n ** module id = 7\n ** module chunks = 0 1\n **/","// this hashing algorithm is as found in some version of Google Analytics\n/* jshint ignore:start */\nmodule.exports = function hash(d) {\n    var a = 1, c = 0, h, o;\n    if (d) {\n        a = 0;\n        for (h = d[\"length\"] - 1; h >= 0; h--) {\n            o = d.charCodeAt(h);\n            a = (a << 6 & 268435455) + o + (o << 14);\n            c = a & 266338304;\n            a = c != 0 ? a ^ c >> 21 : a\n        }\n    }\n    return a\n};\n/* jshint ignore:end */\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/domain_hash.js\n ** module id = 8\n ** module chunks = 0 1\n **/","module.exports = {\n\tgetNumber : function(){\n\t\treturn Math.round(Math.random() * new Date());\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/randomness.js\n ** module id = 9\n ** module chunks = 0 1\n **/","var session = require('./session');\nvar microdata = require('./microdata');\nvar autoTrack = require('./auto_track');\nvar debug = require('./debug');\nvar event = require('./event');\n\nmodule.exports = function inbox(transport) {\n\treturn function () {\n\t\ttry {\n\t\t\tif (arguments[0] == 'session') {\n\t\t\t\tsession.customSession(arguments[1], arguments[2])\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (arguments[0] == 'connectedPartners') {\n\t\t\t\tautoTrack.links(arguments[1]);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (arguments[0] == 'tenantId') {\n\t\t\t\twindow.asaId = arguments[1];\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (arguments[0] == 'debug') {\n\t\t\t\tdebug.setDebugMode(arguments[1]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (arguments[0] == 'transformer') {\n\t\t\t\tmicrodata.setMapper(arguments[1]);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tsession.extendSession();\n\t\t\t\n\t\t\ttransport(event.package.apply(event, arguments));\n\t\t} catch (e) {\n\t\t\tdebug.forceLog('inbox exception:', e);\n\t\t}\n\t};\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/inbox.js\n ** module id = 10\n ** module chunks = 0 1\n **/","// var jq = $;\nvar jq = require('./DOM');\nvar debug = require('./debug');\n\nvar collectReferencedProperties = function (element, item) {\n\tvar refString = element.attr('itemref');\n\tif (typeof refString !== 'undefined') {\n\t\tvar refs = refString.split(' ');\n\t\tfor (var i = 0; i < refs.length; i++) {\n\t\t\tvar ref = refs[i];\n\t\t\tvar refItem = jq('#' + ref);\n\t\t\tif (refItem.length === 1){\n\t\t\t\tcollectProperties(refItem.get(0), item);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tdebug.log('missing metadata element', ref);\n\t\t\t}\n\t\t}\n\t}\n};\n\nvar collectComplexProperty = function (element) {\n\tvar item = {\n\t\t\"type\": element.attr(\"itemtype\"),\n\t\t\"properties\": {}\n\t};\n\tcollectReferencedProperties(element, item);\n\tcollectProperties(element, item);\n\treturn item;\n};\n\nvar collectSimpleProperty = function (el) {\n\tvar tag = el.prop('tagName');\n\tswitch (tag) {\n\t\tcase 'TIME': return el.attr('datetime');\n\t\tcase 'A':\n\t\tcase 'LINK':\n\t\t\treturn el.attr('href');\n\t\tdefault:\n\t\t\treturn el.prop(\"content\") || el.text() || el.attr(\"src\");\n\t}\n\n};\n\nvar collectProperties = function (el, item) {\n\tel.children().each(function (_, c) {\n\t\tvar child = jq(c);\n\t\tvar prop = child.attr('itemprop');\n\t\tif (typeof prop === 'string') {\n\t\t\tif (typeof child.attr('itemscope') !== 'undefined') {\n\t\t\t\titem.properties[prop] = collectComplexProperty(child);\n\t\t\t} else {\n\t\t\t\titem.properties[prop] = collectSimpleProperty(child);\n\t\t\t}\n\t\t}\n\n\t\tif (typeof child.attr('itemscope') == 'undefined') {\n\t\t\tcollectProperties(child, item);\n\t\t}\n\t});\n};\n\nvar findTopLevelItems = function (el) {\n\tif (!el) return undefined; \n\tvar items = [];\n\tif (typeof el === 'string') { el = jq('#'+el).get(0); }\n\telse if (typeof el === 'object' && typeof el.tagName === 'string') { el = jq(el); }\n\telse return {};\n\n\tvar processElement = function (e) {\n\t\tvar el = jq(e);\n\t\tvar itemScope = el.attr('itemscope');\n\t\tvar itemProp = el.attr('itemprop');\n\t\tif (typeof itemScope !== 'undefined') {\n\t\t\tif (typeof itemProp !== 'undefined') {\n\t\t\t\treturn;\n\t\t\t} else {\n\t\t\t\titems.push(theOneMapper(collectComplexProperty(el), el));\n\t\t\t}\n\t\t} else {\n\t\t\tel.children().each(function (_, c) {\n\t\t\t\tprocessElement(c);\n\t\t\t});\n\t\t}\n\t};\n\n\tprocessElement(el);\n\n\tif (items.length === 0) return {};\n\tif (items.length === 1) return items[0];\n\treturn {'__items' : items};\n};\n\nvar extractFromHead = function () {\n\tvar meta = {};\n\tjq('head > meta[property^=\"og:\"]').each(function () { var m = jq(this); meta[m.attr('property')] = m.attr('content'); });\n\tjq('head > meta[name=\"keywords\"]').each(function () { var m = jq(this); meta[\"keywords\"] = m.attr('content'); });\n\treturn theOneMapper(meta);\n};\nvar noMapper = function(m) {return m;};\nvar theOneMapper = noMapper;\nvar callbackWrapper = function callbackWrapper(cb){\n\treturn function(meta, el){\n\t\ttry{\n\t\t\treturn cb(meta, el);\n\t\t} catch(e){\n\t\t\treturn meta;\n\t\t}\n\t}\n}\nmodule.exports = {\n\textract: findTopLevelItems,\n\textractFromHead: extractFromHead,\n\tsetMapper : function(mapper){\n\t\ttheOneMapper = callbackWrapper(mapper);\n\t},\n\tnoMapper : noMapper\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/microdata.js\n ** module id = 11\n ** module chunks = 0 1\n **/","\n// Prototype of our jQuery killer ;)\nfunction DOMElement() {\n}\n\nDOMElement.prototype.text = function text() {\n    return this._element.textContent;\n};\n\nDOMElement.prototype.attr = function attr(name) {\n    // emulating the jQuery behaviour\n    var attrValue = this._element.getAttribute('' + name);\n    if (attrValue === null) return undefined;\n    else\n        return attrValue;\n};\n\nDOMElement.prototype.prop = function prop(name) {\n    return this._element[name];\n};\n\nDOMElement.prototype.children = function children() {\n\n    var c = this._element.children,\n        $doms = [],\n        i, n = c.length;\n\n    for (i = 0; i < n; i++)\n        $doms[i] = $DOM(c[i]);\n\n    return new DOMElements($doms);\n};\n\nfunction DOMElements(els) {\n    this._els = els;\n    this.length = els.length;\n}\n\nDOMElements.prototype.each = function each(callback) {\n    for (var i = 0; i < this._els.length; i++) {\n        var element = this._els[i];\n        callback.call(element, i, element);\n    }\n};\n\nDOMElements.prototype.get = function get(index) {\n    return this._els[index];\n};\n\n// query parameter is either an element id or a css-style selector\nvar $DOM = module.exports = function $DOM(query) {\n\n    if (!query || !(typeof query === 'string' || query instanceof Element || query instanceof DOMElement || query instanceof DOMElements)) {\n        throw new Error('Invalid argument provided:' + query);\n    }\n\n    if (query instanceof DOMElement || query instanceof DOMElements) return query;\n\n    if (query instanceof Element) {\n        var wrapper = new DOMElement();\n        wrapper._element = query;\n        return wrapper;\n    }\n\n    query = ('' + query).trim();\n\n    var elem, elems = [], i, n;\n\n    try {\n        if (query[0] === '#') {         \n            elem = document.getElementById(query.substr(1));\n            if (elem) elem = [elem]; else elem = [];\n        } else {\n            elem = document.querySelectorAll(query);\n        }\n        n = elem.length;\n\n        for (i = 0; i < n; i++)\n            elems.push($DOM(elem[i]));\n\n        return new DOMElements(elems);\n    } catch (exception) {\n        throw new Error('Invalid selector: ' + query);\n    }\n};\n\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/DOM.js\n ** module id = 12\n ** module chunks = 0 1\n **/","var microdata = require('./microdata');\nvar session = require('./session');\nvar info = require('./version');\nvar user = require('./user');\nvar _ = require('./utils');\n\nvar DOMMeta = function (o) {\n\tif (o.length < 2) return false;\n\treturn (typeof o[1] === 'object' && typeof o[1].tagName === 'undefined') ? o[1] : false;\n};\n\nvar pageview = function () {\n\tvar title = document.title;\n\tvar location = window.location.protocol + '//' + window.location.host + window.location.pathname + window.location.hash + window.location.search;\n\tvar page = window.location.pathname + window.location.search;\n\treturn { type: 'pageview', page: page, location: location, title: title };\n};\n\nvar sectionentered = function (section, page) {\n\tpage = page || window.location.pathname + window.location.hash + window.location.search;\n\treturn { type: 'section_entered', page: page, section: section };\n};\n\nvar custom = function (event) {\n\treturn { type: 'custom', event: event };\n};\n\nvar gatherMetaInfo = function gatherMetaInfo(a) {\n\tvar event = a[0];\n\tvar eventBody = {};\n\tif (event) {\n\t\tswitch (event.trim()) {\n\t\t\tcase 'pageview':\n\t\t\t\teventBody = pageview.apply(null, [].slice.call(a, 1));\n\t\t\t\tbreak;\n\t\t\tcase 'sectionentered':\n\t\t\t\teventBody = sectionentered.apply(null, [].slice.call(a, 1));\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\teventBody = custom.apply(null, a);\n\t\t}\n\t\treturn eventBody;\n\t}\n\tthrow new Error('Upsi! There is something wrong with this event:', a);\n};\n\nvar gatherSystemInfo = function (e) {\n\te.t = 1 * new Date();\n\te.session = session.getSessionId();\n\te.uid = user.getUserId();\n\tvar partnerId = window.sessionStorage.getItem('__as.partner_id');\n\tvar partnerSId = window.sessionStorage.getItem('__as.partner_sid');\n\tif (partnerId) {\n\t\te.partner_id = partnerId;\n\t}\n\tif (partnerSId) {\n\t\te.partner_sid = partnerSId;\n\t}\n\te.tenant_id = window.asaId;\n\te.v = info.version();\n\treturn e;\n};\n\nmodule.exports = {\n\tpackage: function (eventname, domElement, extra) {\n\n\t\tvar event = gatherMetaInfo(arguments);\n\t\tevent = gatherSystemInfo(event);\n\t\tif (arguments[0] == 'pageview') {\n\t\t\tevent.meta = microdata.extractFromHead();\n\t\t\tif (typeof arguments[1] === 'object') {\n\t\t\t\tevent.meta = _.override(event.meta, arguments[1]);\n\t\t\t}\n\t\t} else\n\t\t\tif (arguments[0] == 'itemview') {\n\t\t\t\tevent.meta = DOMMeta(arguments) || microdata.extract(arguments[1]);\n\t\t\t} else\n\t\t\t\tif (arguments[0] == 'sectionentered') {\n\t\t\t\t\tevent.meta = DOMMeta(arguments) || microdata.extract(arguments[1]);\n\t\t\t\t} else {\n\t\t\t\t\tvar meta = undefined;\n\t\t\t\t\tif (typeof domElement === 'string' || (typeof domElement === 'object' && typeof domElement.tagName !== 'undefined')) { \n\t\t\t\t\t\tmeta = microdata.extract(domElement); \n\t\t\t\t\t} else\n\t\t\t\t\tif (typeof extra === 'undefined' && typeof domElement === 'object') { \n\t\t\t\t\t\textra = domElement; \n\t\t\t\t\t\tdomElement = null; \n\t\t\t\t\t}\n\t\t\t\t\tmeta = _.override(meta, extra);\n\t\t\t\t\tif (meta !== undefined) event.meta = meta;\n\t\t\t\t}\n\t\treturn event;\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/event.js\n ** module id = 13\n ** module chunks = 0 1\n **/","var features = require('./features');\nvar major = 1,\n\tminor = 1,\n\tbuild = 8;\nmodule.exports = {\n\tmajor : major,\n\tminor: minor,\n\tbuild: build,\n\tversion : function(){\n\t\tvar experiments = '-'+features.experimentsLive();\n\t\tif (experiments === '-') experiments = '';\n\t\treturn [major, minor, build].join('.') + experiments;}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/version.js\n ** module id = 14\n ** module chunks = 0 1\n **/","var user = require('./user');\nvar experiments = {};\nmodule.exports = {\n\tdefineExperiment : function(name, percentage){\n\t\texperiments[name] = (user.getUserHash() % 100) <= percentage;\n\t},\n\tisExperiment : function(name){\n\t\tvar exp = experiments[name];\n\t\treturn !!exp;\n\t},\n\tclearExperiments : function(){\n\t\texperiments = {};\t\n\t},\n\texperimentsLive : function(){\n\t\tvar result = [];\n\t\tfor (var exp in experiments) {\n\t\t\tif (experiments.hasOwnProperty(exp)) {\n\t\t\t\tif (experiments[exp]) result.push(exp);\t\t\t\t\n\t\t\t}\n\t\t}\n\t\treturn result.join('.');\n\t},\n\tMINI_AJAX : 'miniAjax'\t\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/features.js\n ** module id = 15\n ** module chunks = 0 1\n **/","var copyProps = function copyProps(o1, o2){\n\tfor (var key in o2) {\n\t\tif (o2.hasOwnProperty(key)) {\n\t\t\to1[key] = o2[key];\n\t\t}\n\t}\n}\t\nmodule.exports = {\n\toverride: function (o1, o2) {\n\t\tif (!o1 && !o2) return undefined;\n\t\tif (!o1 && o2) return o2;\n\t\tif (o1 && !o2) return o1;\n\t\tvar result = {};\n\t\tcopyProps(result, o1);\n\t\tcopyProps(result, o2);\n\t\treturn result;\n\t}\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/utils.js\n ** module id = 16\n ** module chunks = 0 1\n **/","var r = require('superagent');\nvar debug = require('./debug');\nvar ajax = require('./ajax');\nvar features = require('./features');\n\nvar pendingSubmission = [], done = true;\nvar batchIntervalHandler;\n\nvar postalAddress = '//inbox.activitystream.com/asa';\n// postalAddress = '//localhost:8070/asa';\n\nvar post = function (packet, callback) {\n    var request = ajax.post(postalAddress, 'POST', callback);\n\trequest.setRequestHeader('Content-Type', 'text/plain; charset=UTF-8');\n\trequest.send(JSON.stringify(packet));\n};\nvar submitNow = function (ev) {\n\tif (!(ev instanceof Array)) ev = [ev];\n\tvar packet = {\n\t\tev: ev,\n\t\tt: 1 * new Date()\n\t};\n\n\tdebug.log('submitting event: ', ev);\n\tif (features.isExperiment(features.MINI_AJAX)) {\n\t\tpost(packet, function (err, _) {\n\t\t\tif (err) {\n\t\t\t\tdebug.log('error on server', err);\n\t\t\t} else {\n\t\t\t\tdebug.log('server got it');\n\t\t\t}\n\t\t});\n\n\t} else {\n\t\tr\n\t\t\t.post(postalAddress)\n\t\t\t.set('Content-Type', 'application/json')\n\t\t\t.send(packet)\n\t\t\t.end(function (err, res) {\n\t\t\t\tif (err) {\n\t\t\t\t\tdebug.log('error on server', err);\n\t\t\t\t} else {\n\t\t\t\t\tdebug.log('server got it');\n\t\t\t\t}\n\t\t\t});\n\t}\n};\nvar submitNow2 = function (ev) {\n\tdone = false;\n\tif (!(ev instanceof Array)) ev = [ev];\n\tvar packet = {\n\t\tev: ev,\n\t\tt: 1 * new Date()\n\t};\n\tdebug.log('submitting event: ', ev);\n\tr\n\t\t.post(postalAddress)\n\t\t.set('Content-Type', 'application/json')\n\t\t.send(packet)\n\t\t.end(function (err, res) {\n\t\t\tif (err) {\n\t\t\t\tdebug.log('error on server', err);\n\t\t\t} else {\n\t\t\t\tpendingSubmission.splice(0, ev.length);\n\t\t\t\tdebug.log('server got it');\n\t\t\t}\n\t\t\tdone = true;\n\t\t});\n};\nmodule.exports = {\n\tsubmitEvent: submitNow,\n\tbatchEvent: function (e) {\n\t\tpendingSubmission.push(e);\n\t},\n\tbatchOn: function () {\n\t\tbatchIntervalHandler = setInterval(function batchProcessor() {\n\t\t\ttry {\n\t\t\t\tif (pendingSubmission.length > 0 && done) {\n\t\t\t\t\tvar batchSize = Math.min(pendingSubmission.length, 10);\n\t\t\t\t\tsubmitNow2(pendingSubmission.slice(0, batchSize));\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tdebug.log('exception submitting', e);\n\t\t\t}\n\t\t}, 400);\n\t},\n\tbatchOff: function () {\n\t\tif (!batchIntervalHandler) {\n\t\t\tdebug.log('cannot batch off, it is not on');\n\t\t} else {\n\t\t\tclearInterval(batchIntervalHandler);\n\t\t}\n\t}\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/server.js\n ** module id = 17\n ** module chunks = 0 1\n **/","/**\n * Module dependencies.\n */\n\nvar Emitter = require('emitter');\nvar reduce = require('reduce');\n\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  root = this;\n}\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * TODO: future proof, move to compoent land\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isHost(obj) {\n  var str = {}.toString.call(obj);\n\n  switch (str) {\n    case '[object File]':\n    case '[object Blob]':\n    case '[object FormData]':\n      return true;\n    default:\n      return false;\n  }\n}\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  return false;\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return obj === Object(obj);\n}\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    if (null != obj[key]) {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(obj[key]));\n    }\n  }\n  return pairs.join('&');\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var parts;\n  var pair;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    parts = pair.split('=');\n    obj[decodeURIComponent(parts[0])] = decodeURIComponent(parts[1]);\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nfunction type(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction params(str){\n  return reduce(str.split(/ *; */), function(obj, str){\n    var parts = str.split(/ *= */)\n      , key = parts.shift()\n      , val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  this.setStatusProperties(this.xhr.status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this.setHeaderProperties(this.header);\n  this.body = this.req.method != 'HEAD'\n    ? this.parseBody(this.text ? this.text : this.xhr.response)\n    : null;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponse.prototype.get = function(field){\n  return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponse.prototype.setHeaderProperties = function(header){\n  // content-type\n  var ct = this.header['content-type'] || '';\n  this.type = type(ct);\n\n  // params\n  var obj = params(ct);\n  for (var key in obj) this[key] = obj[key];\n};\n\n/**\n * Force given parser\n * \n * Sets the body parser no matter type.\n * \n * @param {Function}\n * @api public\n */\n\nResponse.prototype.parse = function(fn){\n  this.parser = fn;\n  return this;\n};\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype.parseBody = function(str){\n  var parse = this.parser || request.parse[this.type];\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponse.prototype.setStatusProperties = function(status){\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n    status = 204;\n  }\n\n  var type = status / 100 | 0;\n\n  // status / class\n  this.status = this.statusCode = status;\n  this.statusType = type;\n\n  // basics\n  this.info = 1 == type;\n  this.ok = 2 == type;\n  this.clientError = 4 == type;\n  this.serverError = 5 == type;\n  this.error = (4 == type || 5 == type)\n    ? this.toError()\n    : false;\n\n  // sugar\n  this.accepted = 202 == status;\n  this.noContent = 204 == status;\n  this.badRequest = 400 == status;\n  this.unauthorized = 401 == status;\n  this.notAcceptable = 406 == status;\n  this.notFound = 404 == status;\n  this.forbidden = 403 == status;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  Emitter.call(this);\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {};\n  this._header = {};\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    if (err) {\n      return self.callback(err, res);\n    }\n\n    if (res.status >= 200 && res.status < 300) {\n      return self.callback(err, res);\n    }\n\n    var new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n    new_err.original = err;\n    new_err.response = res;\n    new_err.status = res.status;\n\n    self.callback(new_err, res);\n  });\n}\n\n/**\n * Mixin `Emitter`.\n */\n\nEmitter(Request.prototype);\n\n/**\n * Allow for extension\n */\n\nRequest.prototype.use = function(fn) {\n  fn(this);\n  return this;\n}\n\n/**\n * Set timeout to `ms`.\n *\n * @param {Number} ms\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.timeout = function(ms){\n  this._timeout = ms;\n  return this;\n};\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.clearTimeout = function(){\n  this._timeout = 0;\n  clearTimeout(this._timer);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\n\nRequest.prototype.abort = function(){\n  if (this.aborted) return;\n  this.aborted = true;\n  this.xhr.abort();\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Get case-insensitive header `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api private\n */\n\nRequest.prototype.getHeader = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass){\n  var str = btoa(user + ':' + pass);\n  this.set('Authorization', 'Basic ' + str);\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Write the field `name` and `val` for \"multipart/form-data\"\n * request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n * ```\n *\n * @param {String} name\n * @param {String|Blob|File} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.field = function(name, val){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(name, val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `filename`.\n *\n * ``` js\n * request.post('/upload')\n *   .attach(new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String} filename\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, filename){\n  if (!this._formData) this._formData = new root.FormData();\n  this._formData.append(field, file, filename);\n  return this;\n};\n\n/**\n * Send `data`, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // querystring\n *       request.get('/search')\n *         .end(callback)\n *\n *       // multiple data \"writes\"\n *       request.get('/search')\n *         .send({ search: 'query' })\n *         .send({ range: '1..5' })\n *         .send({ order: 'desc' })\n *         .end(callback)\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"})\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n  *      request.post('/user')\n  *        .send('name=tobi')\n  *        .send('species=ferret')\n  *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.send = function(data){\n  var obj = isObject(data);\n  var type = this.getHeader('Content-Type');\n\n  // merge\n  if (obj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    if (!type) this.type('form');\n    type = this.getHeader('Content-Type');\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!obj || isHost(data)) return this;\n  if (!type) this.type('json');\n  return this;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Origin is not allowed by Access-Control-Allow-Origin');\n  err.crossDomain = true;\n  this.callback(err);\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequest.prototype.timeoutError = function(){\n  var timeout = this._timeout;\n  var err = new Error('timeout of ' + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  this.callback(err);\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequest.prototype.withCredentials = function(){\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var query = this._query.join('&');\n  var timeout = this._timeout;\n  var data = this._formData || this._data;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    if (4 != xhr.readyState) return;\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (0 == status) {\n      if (self.timedout) return self.timeoutError();\n      if (self.aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(e){\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    self.emit('progress', e);\n  };\n  if (this.hasListeners('progress')) {\n    xhr.onprogress = handleProgress;\n  }\n  try {\n    if (xhr.upload && this.hasListeners('progress')) {\n      xhr.upload.onprogress = handleProgress;\n    }\n  } catch(e) {\n    // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n    // Reported here:\n    // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n  }\n\n  // timeout\n  if (timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self.timedout = true;\n      self.abort();\n    }, timeout);\n  }\n\n  // querystring\n  if (query) {\n    query = request.serializeObject(query);\n    this.url += ~this.url.indexOf('?')\n      ? '&' + query\n      : '?' + query;\n  }\n\n  // initiate request\n  xhr.open(this.method, this.url, true);\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if ('GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !isHost(data)) {\n    // serialize stuff\n    var contentType = this.getHeader('Content-Type');\n    var serialize = request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  // send stuff\n  this.emit('request', this);\n  xhr.send(data);\n  return this;\n};\n\n/**\n * Faux promise support\n *\n * @param {Function} fulfill\n * @param {Function} reject\n * @return {Request}\n */\n\nRequest.prototype.then = function (fulfill, reject) {\n  return this.end(function(err, res) {\n    err ? reject(err) : fulfill(res);\n  });\n}\n\n/**\n * Expose `Request`.\n */\n\nrequest.Request = Request;\n\n/**\n * Issue a request:\n *\n * Examples:\n *\n *    request('GET', '/users').end(callback)\n *    request('/users').end(callback)\n *    request('/users', callback)\n *\n * @param {String} method\n * @param {String|Function} url or callback\n * @return {Request}\n * @api public\n */\n\nfunction request(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new Request('GET', method);\n  }\n\n  return new Request(method, url);\n}\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.del = function(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} data\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} data or fn\n * @param {Function} fn\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * Expose `request`.\n */\n\nmodule.exports = request;\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/lib/client.js\n ** module id = 18\n ** module chunks = 0 1\n **/","\n/**\n * Expose `Emitter`.\n */\n\nmodule.exports = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n};\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks[event] = this._callbacks[event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  var self = this;\n  this._callbacks = this._callbacks || {};\n\n  function on() {\n    self.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks[event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks[event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n  var args = [].slice.call(arguments, 1)\n    , callbacks = this._callbacks[event];\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks[event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/~/component-emitter/index.js\n ** module id = 19\n ** module chunks = 0 1\n **/","\n/**\n * Reduce `arr` with `fn`.\n *\n * @param {Array} arr\n * @param {Function} fn\n * @param {Mixed} initial\n *\n * TODO: combatible error handling?\n */\n\nmodule.exports = function(arr, fn, initial){  \n  var idx = 0;\n  var len = arr.length;\n  var curr = arguments.length == 3\n    ? initial\n    : arr[idx++];\n\n  while (idx < len) {\n    curr = fn.call(null, curr, arr[idx], ++idx, arr);\n  }\n  \n  return curr;\n};\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/superagent/~/reduce-component/index.js\n ** module id = 20\n ** module chunks = 0 1\n **/","module.exports = {\n    post: /**\n * Make a X-Domain request to url and callback.\n *\n * @param url {String}\n * @param method {String} HTTP verb ('GET', 'POST', 'DELETE', etc.)\n * @param data {String} request body\n * @param callback {Function} to callback on completion\n * @param errback {Function} to callback on error\n */\n    function xdr(url, method, callback) {\n        var req;\n\n        if (XMLHttpRequest) {\n            req = new XMLHttpRequest();\n\n            if ('withCredentials' in req) {\n                req.open(method, url, true);\n                req.onerror = function(e){callback(e, null);};\n                req.onreadystatechange = function () {\n                    if (req.readyState === 4) {\n                        if (req.status >= 200 && req.status < 400) {\n                            callback(null,req.responseText);\n                        } else {\n                            callback(new Error('Response returned with non-OK status'));\n                        }\n                    }\n                };\n                return req;\n            }\n        } else if (XDomainRequest) {\n            req = new XDomainRequest();\n            req.open(method, url);\n            req.onerror = function(e){callback(e, null);};\n            req.onload = function () {\n                callback(null,req.responseText);\n            };\n            return req;\n        } else {\n            throw new Error('CORS not supported');\n        }\n    }\n}\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./src/ajax.js\n ** module id = 21\n ** module chunks = 0 1\n **/","/* global sinon */\nvar inbox = require('inbox');\nvar expect = require('chai').expect;\nvar core = require('server');\nvar info = require('version');\nvar features = require('features');\n\ndescribe('inbox', function () {\n    var requests = [];\n\tvar xhr;\n    var asa;\n\tvar lastRequest = function (keepSession) {\n\t\tvar request = JSON.parse(requests[0].requestBody);\n\t\tfor (var i = 0; i < request.ev.length; i++) {\n\t\t\tvar element = request.ev[i];\n\t\t\tif (!keepSession) delete element.session;\n\t\t\tdelete element.uid;\n\t\t\tdelete element.t;\n\t\t\tdelete element.location;\n\t\t}\n\t\tdelete request.t;\n\t\treturn request;\n\t};\n\n\tvar adjustSystemInfo = function (ev) {\n\t\tfor (var i = 0; i < ev.ev.length; i++) {\n\t\t\tvar element = ev.ev[i];\n\t\t\telement[\"v\"] = info.version();\n\t\t\tif (element[\"location\"]) \n\t\t\t\tdelete element[\"location\"];\n\t\t}\n\t\treturn ev;\n\t};\n\n\tbeforeEach(function () {\n\t\tfeatures.clearExperiments();\n\t\trequests = [];\n\t\txhr = sinon.useFakeXMLHttpRequest();\n        xhr.onCreate = function (xhr) {\n            requests.push(xhr);\n        };\n        asa = inbox(core.submitEvent);\n\t});\n\n\tafterEach(function () {\n\t\txhr.restore();\n\t});\n\n\tdescribe('default pageview', function () {\n\t\tit('should sent only one event', function () {\n\t\t\tasa('pageview');\n\n\t\t\texpect(requests.length).to.equal(1);\n\t\t})\n\t\tit('should be a POST with data describing the event', function () {\n\t\t\tasa('pageview');\n\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\" } }] });\n\n\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t})\n\t})\n\n\tdescribe('pageview with custom meta', function () {\n\t\tit('should be a POST with data describing the event', function () {\n\n\t\t\tasa('pageview', { a: 's' });\n\n\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\", \"a\": \"s\" } }] });\n\n\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t})\n\n\t});\n\n\tdescribe('custom events', function () {\n\t\tit('should send no metadata when none specified', function () {\n\t\t\tasa('custom_one');\n\n\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\" }] });\n\n\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t});\n\t\tit('should send metadata when client id specified as string', function () {\n\t\t\tasa('custom_one', 'offer1');\n\n\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } } }] });\n\n\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t});\n\t\tit('should send metadata when specified as DOM element', function () {\n\t\t\tasa('custom_one', document.getElementById('offer1'));\n\n\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } } }] });\n\n\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t});\n\t\tit('should send metadata when specified as explicit extra one', function () {\n\t\t\tasa('custom_one', { 'a': 's' });\n\n\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { 'a': 's' } }] });\n\n\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t});\n\t\tit('should send metadata when specified as DOM element and extra metadata', function () {\n\t\t\tasa('custom_one', document.getElementById('offer1'), { a: 's' });\n\n\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { \"a\": \"s\", \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } } }] });\n\n\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t});\n\t\tit('should send metadata when specified as DOM element ID and extra metadata', function () {\n\t\t\tasa('custom_one', 'offer1', { a: 's' });\n\n\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"custom\", \"event\": \"custom_one\", \"meta\": { \"a\": \"s\", \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } } }] });\n\n\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t});\n\t})\n\n\tdescribe('experiment miniAjax', function () {\n\t\tit('should be a POST with data describing the event', function () {\n\t\t\tfeatures.defineExperiment(features.MINI_AJAX, 100);\n\t\t\tasa('pageview', { a: 's' });\n\n\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\", \"a\": \"s\" } }] });\n\n\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t})\n\n\t});\n\n\tdescribe('batching', function () {\n\t\tit('should have both events', function (done) {\n\t\t\tcore.batchOn();\n\t\t\tvar batchingInbox = inbox(core.batchEvent);\n\t\t\tbatchingInbox('pageview', { a: 's' });\n\t\t\tbatchingInbox('pageview', { a: 'd' });\n\n\t\t\tsetTimeout(function () {\n\t\t\t\tcore.batchOff();\n\t\t\t\tvar expectation = adjustSystemInfo({ \"ev\": [{ \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\", \"a\": \"s\" } }, { \"type\": \"pageview\", \"page\": \"/test.html\", \"location\": \"sadfs\", \"title\": \"Opera, Ballett og Konserter | Operaen \\\\ Den Norske Opera & Ballett\", \"meta\": { \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\", \"a\": \"d\" } }] });\n\n\t\t\t\texpect(lastRequest()).to.eql(expectation);\n\t\t\t\tdone();\n\t\t\t}, 700);\n\t\t})\n\n\t});\n    \n    describe('custom session management', function(){\n        it('should allow devs to provide their own session id', function(){\n            asa('session', function() {return 'my_session';});\n            asa('pageview');\n            expect(lastRequest(true).ev[0].session).to.equal('my_session');            \n        })\n    })\n\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./test/inbox.js\n ** module id = 22\n ** module chunks = 1\n **/","module.exports = require('./lib/chai');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/index.js\n ** module id = 23\n ** module chunks = 1\n **/","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar used = []\n  , exports = module.exports = {};\n\n/*!\n * Chai version\n */\n\nexports.version = '3.4.0';\n\n/*!\n * Assertion Error\n */\n\nexports.AssertionError = require('assertion-error');\n\n/*!\n * Utils for plugins (not exported)\n */\n\nvar util = require('./chai/utils');\n\n/**\n * # .use(function)\n *\n * Provides a way to extend the internals of Chai\n *\n * @param {Function}\n * @returns {this} for chaining\n * @api public\n */\n\nexports.use = function (fn) {\n  if (!~used.indexOf(fn)) {\n    fn(this, util);\n    used.push(fn);\n  }\n\n  return this;\n};\n\n/*!\n * Utility Functions\n */\n\nexports.util = util;\n\n/*!\n * Configuration\n */\n\nvar config = require('./chai/config');\nexports.config = config;\n\n/*!\n * Primary `Assertion` prototype\n */\n\nvar assertion = require('./chai/assertion');\nexports.use(assertion);\n\n/*!\n * Core Assertions\n */\n\nvar core = require('./chai/core/assertions');\nexports.use(core);\n\n/*!\n * Expect interface\n */\n\nvar expect = require('./chai/interface/expect');\nexports.use(expect);\n\n/*!\n * Should interface\n */\n\nvar should = require('./chai/interface/should');\nexports.use(should);\n\n/*!\n * Assert interface\n */\n\nvar assert = require('./chai/interface/assert');\nexports.use(assert);\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai.js\n ** module id = 24\n ** module chunks = 1\n **/","/*!\n * assertion-error\n * Copyright(c) 2013 Jake Luer <jake@qualiancy.com>\n * MIT Licensed\n */\n\n/*!\n * Return a function that will copy properties from\n * one object to another excluding any originally\n * listed. Returned function will create a new `{}`.\n *\n * @param {String} excluded properties ...\n * @return {Function}\n */\n\nfunction exclude () {\n  var excludes = [].slice.call(arguments);\n\n  function excludeProps (res, obj) {\n    Object.keys(obj).forEach(function (key) {\n      if (!~excludes.indexOf(key)) res[key] = obj[key];\n    });\n  }\n\n  return function extendExclude () {\n    var args = [].slice.call(arguments)\n      , i = 0\n      , res = {};\n\n    for (; i < args.length; i++) {\n      excludeProps(res, args[i]);\n    }\n\n    return res;\n  };\n};\n\n/*!\n * Primary Exports\n */\n\nmodule.exports = AssertionError;\n\n/**\n * ### AssertionError\n *\n * An extension of the JavaScript `Error` constructor for\n * assertion and validation scenarios.\n *\n * @param {String} message\n * @param {Object} properties to include (optional)\n * @param {callee} start stack function (optional)\n */\n\nfunction AssertionError (message, _props, ssf) {\n  var extend = exclude('name', 'message', 'stack', 'constructor', 'toJSON')\n    , props = extend(_props || {});\n\n  // default values\n  this.message = message || 'Unspecified AssertionError';\n  this.showDiff = false;\n\n  // copy from properties\n  for (var key in props) {\n    this[key] = props[key];\n  }\n\n  // capture stack trace\n  ssf = ssf || arguments.callee;\n  if (ssf && Error.captureStackTrace) {\n    Error.captureStackTrace(this, ssf);\n  } else {\n    this.stack = new Error().stack;\n  }\n}\n\n/*!\n * Inherit from Error.prototype\n */\n\nAssertionError.prototype = Object.create(Error.prototype);\n\n/*!\n * Statically set name\n */\n\nAssertionError.prototype.name = 'AssertionError';\n\n/*!\n * Ensure correct constructor\n */\n\nAssertionError.prototype.constructor = AssertionError;\n\n/**\n * Allow errors to be converted to JSON for static transfer.\n *\n * @param {Boolean} include stack (default: `true`)\n * @return {Object} object that can be `JSON.stringify`\n */\n\nAssertionError.prototype.toJSON = function (stack) {\n  var extend = exclude('constructor', 'toJSON', 'stack')\n    , props = extend({ name: this.name }, this);\n\n  // include stack if exists and not turned off\n  if (false !== stack && this.stack) {\n    props.stack = this.stack;\n  }\n\n  return props;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/~/assertion-error/index.js\n ** module id = 25\n ** module chunks = 1\n **/","/*!\n * chai\n * Copyright(c) 2011 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Main exports\n */\n\nvar exports = module.exports = {};\n\n/*!\n * test utility\n */\n\nexports.test = require('./test');\n\n/*!\n * type utility\n */\n\nexports.type = require('type-detect');\n\n/*!\n * expectTypes utility\n */\nexports.expectTypes = require('./expectTypes');\n\n/*!\n * message utility\n */\n\nexports.getMessage = require('./getMessage');\n\n/*!\n * actual utility\n */\n\nexports.getActual = require('./getActual');\n\n/*!\n * Inspect util\n */\n\nexports.inspect = require('./inspect');\n\n/*!\n * Object Display util\n */\n\nexports.objDisplay = require('./objDisplay');\n\n/*!\n * Flag utility\n */\n\nexports.flag = require('./flag');\n\n/*!\n * Flag transferring utility\n */\n\nexports.transferFlags = require('./transferFlags');\n\n/*!\n * Deep equal utility\n */\n\nexports.eql = require('deep-eql');\n\n/*!\n * Deep path value\n */\n\nexports.getPathValue = require('./getPathValue');\n\n/*!\n * Deep path info\n */\n\nexports.getPathInfo = require('./getPathInfo');\n\n/*!\n * Check if a property exists\n */\n\nexports.hasProperty = require('./hasProperty');\n\n/*!\n * Function name\n */\n\nexports.getName = require('./getName');\n\n/*!\n * add Property\n */\n\nexports.addProperty = require('./addProperty');\n\n/*!\n * add Method\n */\n\nexports.addMethod = require('./addMethod');\n\n/*!\n * overwrite Property\n */\n\nexports.overwriteProperty = require('./overwriteProperty');\n\n/*!\n * overwrite Method\n */\n\nexports.overwriteMethod = require('./overwriteMethod');\n\n/*!\n * Add a chainable method\n */\n\nexports.addChainableMethod = require('./addChainableMethod');\n\n/*!\n * Overwrite chainable method\n */\n\nexports.overwriteChainableMethod = require('./overwriteChainableMethod');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/index.js\n ** module id = 26\n ** module chunks = 1\n **/","/*!\n * Chai - test utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag');\n\n/**\n * # test(object, expression)\n *\n * Test and object for expression.\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , expr = args[0];\n  return negate ? !expr : expr;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/test.js\n ** module id = 27\n ** module chunks = 1\n **/","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### flag(object, key, [value])\n *\n * Get or set a flag value on an object. If a\n * value is provided it will be set, else it will\n * return the currently set value or `undefined` if\n * the value is not set.\n *\n *     utils.flag(this, 'foo', 'bar'); // setter\n *     utils.flag(this, 'foo'); // getter, returns `bar`\n *\n * @param {Object} object constructed Assertion\n * @param {String} key\n * @param {Mixed} value (optional)\n * @name flag\n * @api private\n */\n\nmodule.exports = function (obj, key, value) {\n  var flags = obj.__flags || (obj.__flags = Object.create(null));\n  if (arguments.length === 3) {\n    flags[key] = value;\n  } else {\n    return flags[key];\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/flag.js\n ** module id = 28\n ** module chunks = 1\n **/","module.exports = require('./lib/type');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/~/type-detect/index.js\n ** module id = 29\n ** module chunks = 1\n **/","/*!\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Primary Exports\n */\n\nvar exports = module.exports = getType;\n\n/**\n * ### typeOf (obj)\n *\n * Use several different techniques to determine\n * the type of object being tested.\n *\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\nvar objectTypeRegexp = /^\\[object (.*)\\]$/;\n\nfunction getType(obj) {\n  var type = Object.prototype.toString.call(obj).match(objectTypeRegexp)[1].toLowerCase();\n  // Let \"new String('')\" return 'object'\n  if (typeof Promise === 'function' && obj instanceof Promise) return 'promise';\n  // PhantomJS has type \"DOMWindow\" for null\n  if (obj === null) return 'null';\n  // PhantomJS has type \"DOMWindow\" for undefined\n  if (obj === undefined) return 'undefined';\n  return type;\n}\n\nexports.Library = Library;\n\n/**\n * ### Library\n *\n * Create a repository for custom type detection.\n *\n * ```js\n * var lib = new type.Library;\n * ```\n *\n */\n\nfunction Library() {\n  if (!(this instanceof Library)) return new Library();\n  this.tests = {};\n}\n\n/**\n * #### .of (obj)\n *\n * Expose replacement `typeof` detection to the library.\n *\n * ```js\n * if ('string' === lib.of('hello world')) {\n *   // ...\n * }\n * ```\n *\n * @param {Mixed} object to test\n * @return {String} type\n */\n\nLibrary.prototype.of = getType;\n\n/**\n * #### .define (type, test)\n *\n * Add a test to for the `.test()` assertion.\n *\n * Can be defined as a regular expression:\n *\n * ```js\n * lib.define('int', /^[0-9]+$/);\n * ```\n *\n * ... or as a function:\n *\n * ```js\n * lib.define('bln', function (obj) {\n *   if ('boolean' === lib.of(obj)) return true;\n *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n *   return !! ~blns.indexOf(obj);\n * });\n * ```\n *\n * @param {String} type\n * @param {RegExp|Function} test\n * @api public\n */\n\nLibrary.prototype.define = function(type, test) {\n  if (arguments.length === 1) return this.tests[type];\n  this.tests[type] = test;\n  return this;\n};\n\n/**\n * #### .test (obj, test)\n *\n * Assert that an object is of type. Will first\n * check natives, and if that does not pass it will\n * use the user defined custom tests.\n *\n * ```js\n * assert(lib.test('1', 'int'));\n * assert(lib.test('yes', 'bln'));\n * ```\n *\n * @param {Mixed} object\n * @param {String} type\n * @return {Boolean} result\n * @api public\n */\n\nLibrary.prototype.test = function(obj, type) {\n  if (type === getType(obj)) return true;\n  var test = this.tests[type];\n\n  if (test && 'regexp' === getType(test)) {\n    return test.test(obj);\n  } else if (test && 'function' === getType(test)) {\n    return test(obj);\n  } else {\n    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/~/type-detect/lib/type.js\n ** module id = 30\n ** module chunks = 1\n **/","/*!\n * Chai - expectTypes utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### expectTypes(obj, types)\n *\n * Ensures that the object being tested against is of a valid type.\n *\n *     utils.expectTypes(this, ['array', 'object', 'string']);\n *\n * @param {Mixed} obj constructed Assertion\n * @param {Array} type A list of allowed types for this assertion\n * @name expectTypes\n * @api public\n */\n\nvar AssertionError = require('assertion-error');\nvar flag = require('./flag');\nvar type = require('type-detect');\n\nmodule.exports = function (obj, types) {\n  var obj = flag(obj, 'object');\n  types = types.map(function (t) { return t.toLowerCase(); });\n  types.sort();\n\n  // Transforms ['lorem', 'ipsum'] into 'a lirum, or an ipsum'\n  var str = types.map(function (t, index) {\n    var art = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(t.charAt(0)) ? 'an' : 'a';\n    var or = types.length > 1 && index === types.length - 1 ? 'or ' : '';\n    return or + art + ' ' + t;\n  }).join(', ');\n\n  if (!types.some(function (expected) { return type(obj) === expected; })) {\n    throw new AssertionError(\n      'object tested must be ' + str + ', but ' + type(obj) + ' given'\n    );\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/expectTypes.js\n ** module id = 31\n ** module chunks = 1\n **/","/*!\n * Chai - message composition utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar flag = require('./flag')\n  , getActual = require('./getActual')\n  , inspect = require('./inspect')\n  , objDisplay = require('./objDisplay');\n\n/**\n * ### .getMessage(object, message, negateMessage)\n *\n * Construct the error message based on flags\n * and template tags. Template tags will return\n * a stringified inspection of the object referenced.\n *\n * Message template tags:\n * - `#{this}` current asserted object\n * - `#{act}` actual value\n * - `#{exp}` expected value\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n * @name getMessage\n * @api public\n */\n\nmodule.exports = function (obj, args) {\n  var negate = flag(obj, 'negate')\n    , val = flag(obj, 'object')\n    , expected = args[3]\n    , actual = getActual(obj, args)\n    , msg = negate ? args[2] : args[1]\n    , flagMsg = flag(obj, 'message');\n\n  if(typeof msg === \"function\") msg = msg();\n  msg = msg || '';\n  msg = msg\n    .replace(/#{this}/g, objDisplay(val))\n    .replace(/#{act}/g, objDisplay(actual))\n    .replace(/#{exp}/g, objDisplay(expected));\n\n  return flagMsg ? flagMsg + ': ' + msg : msg;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/getMessage.js\n ** module id = 32\n ** module chunks = 1\n **/","/*!\n * Chai - getActual utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getActual(object, [actual])\n *\n * Returns the `actual` value for an Assertion\n *\n * @param {Object} object (constructed Assertion)\n * @param {Arguments} chai.Assertion.prototype.assert arguments\n */\n\nmodule.exports = function (obj, args) {\n  return args.length > 4 ? args[4] : obj._obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/getActual.js\n ** module id = 33\n ** module chunks = 1\n **/","// This is (almost) directly from Node.js utils\n// https://github.com/joyent/node/blob/f8c335d0caf47f16d31413f89aa28eda3878e3aa/lib/util.js\n\nvar getName = require('./getName');\nvar getProperties = require('./getProperties');\nvar getEnumerableProperties = require('./getEnumerableProperties');\n\nmodule.exports = inspect;\n\n/**\n * Echos the value of a value. Trys to print the value out\n * in the best way possible given the different types.\n *\n * @param {Object} obj The object to print out.\n * @param {Boolean} showHidden Flag that shows hidden (not enumerable)\n *    properties of objects.\n * @param {Number} depth Depth in which to descend in object. Default is 2.\n * @param {Boolean} colors Flag to turn on ANSI escape codes to color the\n *    output. Default is false (no coloring).\n */\nfunction inspect(obj, showHidden, depth, colors) {\n  var ctx = {\n    showHidden: showHidden,\n    seen: [],\n    stylize: function (str) { return str; }\n  };\n  return formatValue(ctx, obj, (typeof depth === 'undefined' ? 2 : depth));\n}\n\n// Returns true if object is a DOM element.\nvar isDOMElement = function (object) {\n  if (typeof HTMLElement === 'object') {\n    return object instanceof HTMLElement;\n  } else {\n    return object &&\n      typeof object === 'object' &&\n      object.nodeType === 1 &&\n      typeof object.nodeName === 'string';\n  }\n};\n\nfunction formatValue(ctx, value, recurseTimes) {\n  // Provide a hook for user-specified inspect functions.\n  // Check that value is an object with an inspect function on it\n  if (value && typeof value.inspect === 'function' &&\n      // Filter out the util module, it's inspect function is special\n      value.inspect !== exports.inspect &&\n      // Also filter out any prototype objects using the circular check.\n      !(value.constructor && value.constructor.prototype === value)) {\n    var ret = value.inspect(recurseTimes);\n    if (typeof ret !== 'string') {\n      ret = formatValue(ctx, ret, recurseTimes);\n    }\n    return ret;\n  }\n\n  // Primitive types cannot have properties\n  var primitive = formatPrimitive(ctx, value);\n  if (primitive) {\n    return primitive;\n  }\n\n  // If this is a DOM element, try to get the outer HTML.\n  if (isDOMElement(value)) {\n    if ('outerHTML' in value) {\n      return value.outerHTML;\n      // This value does not have an outerHTML attribute,\n      //   it could still be an XML element\n    } else {\n      // Attempt to serialize it\n      try {\n        if (document.xmlVersion) {\n          var xmlSerializer = new XMLSerializer();\n          return xmlSerializer.serializeToString(value);\n        } else {\n          // Firefox 11- do not support outerHTML\n          //   It does, however, support innerHTML\n          //   Use the following to render the element\n          var ns = \"http://www.w3.org/1999/xhtml\";\n          var container = document.createElementNS(ns, '_');\n\n          container.appendChild(value.cloneNode(false));\n          html = container.innerHTML\n            .replace('><', '>' + value.innerHTML + '<');\n          container.innerHTML = '';\n          return html;\n        }\n      } catch (err) {\n        // This could be a non-native DOM implementation,\n        //   continue with the normal flow:\n        //   printing the element as if it is an object.\n      }\n    }\n  }\n\n  // Look up the keys of the object.\n  var visibleKeys = getEnumerableProperties(value);\n  var keys = ctx.showHidden ? getProperties(value) : visibleKeys;\n\n  // Some type of object without properties can be shortcutted.\n  // In IE, errors have a single `stack` property, or if they are vanilla `Error`,\n  // a `stack` plus `description` property; ignore those for consistency.\n  if (keys.length === 0 || (isError(value) && (\n      (keys.length === 1 && keys[0] === 'stack') ||\n      (keys.length === 2 && keys[0] === 'description' && keys[1] === 'stack')\n     ))) {\n    if (typeof value === 'function') {\n      var name = getName(value);\n      var nameSuffix = name ? ': ' + name : '';\n      return ctx.stylize('[Function' + nameSuffix + ']', 'special');\n    }\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    }\n    if (isDate(value)) {\n      return ctx.stylize(Date.prototype.toUTCString.call(value), 'date');\n    }\n    if (isError(value)) {\n      return formatError(value);\n    }\n  }\n\n  var base = '', array = false, braces = ['{', '}'];\n\n  // Make Array say that they are Array\n  if (isArray(value)) {\n    array = true;\n    braces = ['[', ']'];\n  }\n\n  // Make functions say that they are functions\n  if (typeof value === 'function') {\n    var name = getName(value);\n    var nameSuffix = name ? ': ' + name : '';\n    base = ' [Function' + nameSuffix + ']';\n  }\n\n  // Make RegExps say that they are RegExps\n  if (isRegExp(value)) {\n    base = ' ' + RegExp.prototype.toString.call(value);\n  }\n\n  // Make dates with properties first say the date\n  if (isDate(value)) {\n    base = ' ' + Date.prototype.toUTCString.call(value);\n  }\n\n  // Make error with message first say the error\n  if (isError(value)) {\n    return formatError(value);\n  }\n\n  if (keys.length === 0 && (!array || value.length == 0)) {\n    return braces[0] + base + braces[1];\n  }\n\n  if (recurseTimes < 0) {\n    if (isRegExp(value)) {\n      return ctx.stylize(RegExp.prototype.toString.call(value), 'regexp');\n    } else {\n      return ctx.stylize('[Object]', 'special');\n    }\n  }\n\n  ctx.seen.push(value);\n\n  var output;\n  if (array) {\n    output = formatArray(ctx, value, recurseTimes, visibleKeys, keys);\n  } else {\n    output = keys.map(function(key) {\n      return formatProperty(ctx, value, recurseTimes, visibleKeys, key, array);\n    });\n  }\n\n  ctx.seen.pop();\n\n  return reduceToSingleString(output, base, braces);\n}\n\n\nfunction formatPrimitive(ctx, value) {\n  switch (typeof value) {\n    case 'undefined':\n      return ctx.stylize('undefined', 'undefined');\n\n    case 'string':\n      var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                               .replace(/'/g, \"\\\\'\")\n                                               .replace(/\\\\\"/g, '\"') + '\\'';\n      return ctx.stylize(simple, 'string');\n\n    case 'number':\n      if (value === 0 && (1/value) === -Infinity) {\n        return ctx.stylize('-0', 'number');\n      }\n      return ctx.stylize('' + value, 'number');\n\n    case 'boolean':\n      return ctx.stylize('' + value, 'boolean');\n  }\n  // For some reason typeof null is \"object\", so special case here.\n  if (value === null) {\n    return ctx.stylize('null', 'null');\n  }\n}\n\n\nfunction formatError(value) {\n  return '[' + Error.prototype.toString.call(value) + ']';\n}\n\n\nfunction formatArray(ctx, value, recurseTimes, visibleKeys, keys) {\n  var output = [];\n  for (var i = 0, l = value.length; i < l; ++i) {\n    if (Object.prototype.hasOwnProperty.call(value, String(i))) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          String(i), true));\n    } else {\n      output.push('');\n    }\n  }\n  keys.forEach(function(key) {\n    if (!key.match(/^\\d+$/)) {\n      output.push(formatProperty(ctx, value, recurseTimes, visibleKeys,\n          key, true));\n    }\n  });\n  return output;\n}\n\n\nfunction formatProperty(ctx, value, recurseTimes, visibleKeys, key, array) {\n  var name, str;\n  if (value.__lookupGetter__) {\n    if (value.__lookupGetter__(key)) {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Getter/Setter]', 'special');\n      } else {\n        str = ctx.stylize('[Getter]', 'special');\n      }\n    } else {\n      if (value.__lookupSetter__(key)) {\n        str = ctx.stylize('[Setter]', 'special');\n      }\n    }\n  }\n  if (visibleKeys.indexOf(key) < 0) {\n    name = '[' + key + ']';\n  }\n  if (!str) {\n    if (ctx.seen.indexOf(value[key]) < 0) {\n      if (recurseTimes === null) {\n        str = formatValue(ctx, value[key], null);\n      } else {\n        str = formatValue(ctx, value[key], recurseTimes - 1);\n      }\n      if (str.indexOf('\\n') > -1) {\n        if (array) {\n          str = str.split('\\n').map(function(line) {\n            return '  ' + line;\n          }).join('\\n').substr(2);\n        } else {\n          str = '\\n' + str.split('\\n').map(function(line) {\n            return '   ' + line;\n          }).join('\\n');\n        }\n      }\n    } else {\n      str = ctx.stylize('[Circular]', 'special');\n    }\n  }\n  if (typeof name === 'undefined') {\n    if (array && key.match(/^\\d+$/)) {\n      return str;\n    }\n    name = JSON.stringify('' + key);\n    if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n      name = name.substr(1, name.length - 2);\n      name = ctx.stylize(name, 'name');\n    } else {\n      name = name.replace(/'/g, \"\\\\'\")\n                 .replace(/\\\\\"/g, '\"')\n                 .replace(/(^\"|\"$)/g, \"'\");\n      name = ctx.stylize(name, 'string');\n    }\n  }\n\n  return name + ': ' + str;\n}\n\n\nfunction reduceToSingleString(output, base, braces) {\n  var numLinesEst = 0;\n  var length = output.reduce(function(prev, cur) {\n    numLinesEst++;\n    if (cur.indexOf('\\n') >= 0) numLinesEst++;\n    return prev + cur.length + 1;\n  }, 0);\n\n  if (length > 60) {\n    return braces[0] +\n           (base === '' ? '' : base + '\\n ') +\n           ' ' +\n           output.join(',\\n  ') +\n           ' ' +\n           braces[1];\n  }\n\n  return braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n}\n\nfunction isArray(ar) {\n  return Array.isArray(ar) ||\n         (typeof ar === 'object' && objectToString(ar) === '[object Array]');\n}\n\nfunction isRegExp(re) {\n  return typeof re === 'object' && objectToString(re) === '[object RegExp]';\n}\n\nfunction isDate(d) {\n  return typeof d === 'object' && objectToString(d) === '[object Date]';\n}\n\nfunction isError(e) {\n  return typeof e === 'object' && objectToString(e) === '[object Error]';\n}\n\nfunction objectToString(o) {\n  return Object.prototype.toString.call(o);\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/inspect.js\n ** module id = 34\n ** module chunks = 1\n **/","/*!\n * Chai - getName utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * # getName(func)\n *\n * Gets the name of a function, in a cross-browser way.\n *\n * @param {Function} a function (usually a constructor)\n */\n\nmodule.exports = function (func) {\n  if (func.name) return func.name;\n\n  var match = /^\\s?function ([^(]*)\\(/.exec(func);\n  return match && match[1] ? match[1] : \"\";\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/getName.js\n ** module id = 35\n ** module chunks = 1\n **/","/*!\n * Chai - getProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getProperties(object)\n *\n * This allows the retrieval of property names of an object, enumerable or not,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @name getProperties\n * @api public\n */\n\nmodule.exports = function getProperties(object) {\n  var result = Object.getOwnPropertyNames(object);\n\n  function addProperty(property) {\n    if (result.indexOf(property) === -1) {\n      result.push(property);\n    }\n  }\n\n  var proto = Object.getPrototypeOf(object);\n  while (proto !== null) {\n    Object.getOwnPropertyNames(proto).forEach(addProperty);\n    proto = Object.getPrototypeOf(proto);\n  }\n\n  return result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/getProperties.js\n ** module id = 36\n ** module chunks = 1\n **/","/*!\n * Chai - getEnumerableProperties utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### .getEnumerableProperties(object)\n *\n * This allows the retrieval of enumerable property names of an object,\n * inherited or not.\n *\n * @param {Object} object\n * @returns {Array}\n * @name getEnumerableProperties\n * @api public\n */\n\nmodule.exports = function getEnumerableProperties(object) {\n  var result = [];\n  for (var name in object) {\n    result.push(name);\n  }\n  return result;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/getEnumerableProperties.js\n ** module id = 37\n ** module chunks = 1\n **/","/*!\n * Chai - flag utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependancies\n */\n\nvar inspect = require('./inspect');\nvar config = require('../config');\n\n/**\n * ### .objDisplay (object)\n *\n * Determines if an object or an array matches\n * criteria to be inspected in-line for error\n * messages or should be truncated.\n *\n * @param {Mixed} javascript object to inspect\n * @name objDisplay\n * @api public\n */\n\nmodule.exports = function (obj) {\n  var str = inspect(obj)\n    , type = Object.prototype.toString.call(obj);\n\n  if (config.truncateThreshold && str.length >= config.truncateThreshold) {\n    if (type === '[object Function]') {\n      return !obj.name || obj.name === ''\n        ? '[Function]'\n        : '[Function: ' + obj.name + ']';\n    } else if (type === '[object Array]') {\n      return '[ Array(' + obj.length + ') ]';\n    } else if (type === '[object Object]') {\n      var keys = Object.keys(obj)\n        , kstr = keys.length > 2\n          ? keys.splice(0, 2).join(', ') + ', ...'\n          : keys.join(', ');\n      return '{ Object (' + kstr + ') }';\n    } else {\n      return str;\n    }\n  } else {\n    return str;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/objDisplay.js\n ** module id = 38\n ** module chunks = 1\n **/","module.exports = {\n\n  /**\n   * ### config.includeStack\n   *\n   * User configurable property, influences whether stack trace\n   * is included in Assertion error message. Default of false\n   * suppresses stack trace in the error message.\n   *\n   *     chai.config.includeStack = true;  // enable stack on error\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n   includeStack: false,\n\n  /**\n   * ### config.showDiff\n   *\n   * User configurable property, influences whether or not\n   * the `showDiff` flag should be included in the thrown\n   * AssertionErrors. `false` will always be `false`; `true`\n   * will be true when the assertion has requested a diff\n   * be shown.\n   *\n   * @param {Boolean}\n   * @api public\n   */\n\n  showDiff: true,\n\n  /**\n   * ### config.truncateThreshold\n   *\n   * User configurable property, sets length threshold for actual and\n   * expected values in assertion errors. If this threshold is exceeded, for\n   * example for large data structures, the value is replaced with something\n   * like `[ Array(3) ]` or `{ Object (prop1, prop2) }`.\n   *\n   * Set it to zero if you want to disable truncating altogether.\n   *\n   * This is especially userful when doing assertions on arrays: having this\n   * set to a reasonable large value makes the failure messages readily\n   * inspectable.\n   *\n   *     chai.config.truncateThreshold = 0;  // disable truncating\n   *\n   * @param {Number}\n   * @api public\n   */\n\n  truncateThreshold: 40\n\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/config.js\n ** module id = 39\n ** module chunks = 1\n **/","/*!\n * Chai - transferFlags utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### transferFlags(assertion, object, includeAll = true)\n *\n * Transfer all the flags for `assertion` to `object`. If\n * `includeAll` is set to `false`, then the base Chai\n * assertion flags (namely `object`, `ssfi`, and `message`)\n * will not be transferred.\n *\n *\n *     var newAssertion = new Assertion();\n *     utils.transferFlags(assertion, newAssertion);\n *\n *     var anotherAsseriton = new Assertion(myObj);\n *     utils.transferFlags(assertion, anotherAssertion, false);\n *\n * @param {Assertion} assertion the assertion to transfer the flags from\n * @param {Object} object the object to transfer the flags to; usually a new assertion\n * @param {Boolean} includeAll\n * @name transferFlags\n * @api private\n */\n\nmodule.exports = function (assertion, object, includeAll) {\n  var flags = assertion.__flags || (assertion.__flags = Object.create(null));\n\n  if (!object.__flags) {\n    object.__flags = Object.create(null);\n  }\n\n  includeAll = arguments.length === 3 ? includeAll : true;\n\n  for (var flag in flags) {\n    if (includeAll ||\n        (flag !== 'object' && flag !== 'ssfi' && flag != 'message')) {\n      object.__flags[flag] = flags[flag];\n    }\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/transferFlags.js\n ** module id = 40\n ** module chunks = 1\n **/","module.exports = require('./lib/eql');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/~/deep-eql/index.js\n ** module id = 41\n ** module chunks = 1\n **/","/*!\n * deep-eql\n * Copyright(c) 2013 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar type = require('type-detect');\n\n/*!\n * Buffer.isBuffer browser shim\n */\n\nvar Buffer;\ntry { Buffer = require('buffer').Buffer; }\ncatch(ex) {\n  Buffer = {};\n  Buffer.isBuffer = function() { return false; }\n}\n\n/*!\n * Primary Export\n */\n\nmodule.exports = deepEqual;\n\n/**\n * Assert super-strict (egal) equality between\n * two objects of any type.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @param {Array} memoised (optional)\n * @return {Boolean} equal match\n */\n\nfunction deepEqual(a, b, m) {\n  if (sameValue(a, b)) {\n    return true;\n  } else if ('date' === type(a)) {\n    return dateEqual(a, b);\n  } else if ('regexp' === type(a)) {\n    return regexpEqual(a, b);\n  } else if (Buffer.isBuffer(a)) {\n    return bufferEqual(a, b);\n  } else if ('arguments' === type(a)) {\n    return argumentsEqual(a, b, m);\n  } else if (!typeEqual(a, b)) {\n    return false;\n  } else if (('object' !== type(a) && 'object' !== type(b))\n  && ('array' !== type(a) && 'array' !== type(b))) {\n    return sameValue(a, b);\n  } else {\n    return objectEqual(a, b, m);\n  }\n}\n\n/*!\n * Strict (egal) equality test. Ensures that NaN always\n * equals NaN and `-0` does not equal `+0`.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} equal match\n */\n\nfunction sameValue(a, b) {\n  if (a === b) return a !== 0 || 1 / a === 1 / b;\n  return a !== a && b !== b;\n}\n\n/*!\n * Compare the types of two given objects and\n * return if they are equal. Note that an Array\n * has a type of `array` (not `object`) and arguments\n * have a type of `arguments` (not `array`/`object`).\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction typeEqual(a, b) {\n  return type(a) === type(b);\n}\n\n/*!\n * Compare two Date objects by asserting that\n * the time values are equal using `saveValue`.\n *\n * @param {Date} a\n * @param {Date} b\n * @return {Boolean} result\n */\n\nfunction dateEqual(a, b) {\n  if ('date' !== type(b)) return false;\n  return sameValue(a.getTime(), b.getTime());\n}\n\n/*!\n * Compare two regular expressions by converting them\n * to string and checking for `sameValue`.\n *\n * @param {RegExp} a\n * @param {RegExp} b\n * @return {Boolean} result\n */\n\nfunction regexpEqual(a, b) {\n  if ('regexp' !== type(b)) return false;\n  return sameValue(a.toString(), b.toString());\n}\n\n/*!\n * Assert deep equality of two `arguments` objects.\n * Unfortunately, these must be sliced to arrays\n * prior to test to ensure no bad behavior.\n *\n * @param {Arguments} a\n * @param {Arguments} b\n * @param {Array} memoize (optional)\n * @return {Boolean} result\n */\n\nfunction argumentsEqual(a, b, m) {\n  if ('arguments' !== type(b)) return false;\n  a = [].slice.call(a);\n  b = [].slice.call(b);\n  return deepEqual(a, b, m);\n}\n\n/*!\n * Get enumerable properties of a given object.\n *\n * @param {Object} a\n * @return {Array} property names\n */\n\nfunction enumerable(a) {\n  var res = [];\n  for (var key in a) res.push(key);\n  return res;\n}\n\n/*!\n * Simple equality for flat iterable objects\n * such as Arrays or Node.js buffers.\n *\n * @param {Iterable} a\n * @param {Iterable} b\n * @return {Boolean} result\n */\n\nfunction iterableEqual(a, b) {\n  if (a.length !==  b.length) return false;\n\n  var i = 0;\n  var match = true;\n\n  for (; i < a.length; i++) {\n    if (a[i] !== b[i]) {\n      match = false;\n      break;\n    }\n  }\n\n  return match;\n}\n\n/*!\n * Extension to `iterableEqual` specifically\n * for Node.js Buffers.\n *\n * @param {Buffer} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction bufferEqual(a, b) {\n  if (!Buffer.isBuffer(b)) return false;\n  return iterableEqual(a, b);\n}\n\n/*!\n * Block for `objectEqual` ensuring non-existing\n * values don't get in.\n *\n * @param {Mixed} object\n * @return {Boolean} result\n */\n\nfunction isValue(a) {\n  return a !== null && a !== undefined;\n}\n\n/*!\n * Recursively check the equality of two objects.\n * Once basic sameness has been established it will\n * defer to `deepEqual` for each enumerable key\n * in the object.\n *\n * @param {Mixed} a\n * @param {Mixed} b\n * @return {Boolean} result\n */\n\nfunction objectEqual(a, b, m) {\n  if (!isValue(a) || !isValue(b)) {\n    return false;\n  }\n\n  if (a.prototype !== b.prototype) {\n    return false;\n  }\n\n  var i;\n  if (m) {\n    for (i = 0; i < m.length; i++) {\n      if ((m[i][0] === a && m[i][1] === b)\n      ||  (m[i][0] === b && m[i][1] === a)) {\n        return true;\n      }\n    }\n  } else {\n    m = [];\n  }\n\n  try {\n    var ka = enumerable(a);\n    var kb = enumerable(b);\n  } catch (ex) {\n    return false;\n  }\n\n  ka.sort();\n  kb.sort();\n\n  if (!iterableEqual(ka, kb)) {\n    return false;\n  }\n\n  m.push([ a, b ]);\n\n  var key;\n  for (i = ka.length - 1; i >= 0; i--) {\n    key = ka[i];\n    if (!deepEqual(a[key], b[key], m)) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/~/deep-eql/lib/eql.js\n ** module id = 42\n ** module chunks = 1\n **/","module.exports = require('./lib/type');\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/~/deep-eql/~/type-detect/index.js\n ** module id = 43\n ** module chunks = 1\n **/","/*!\n * type-detect\n * Copyright(c) 2013 jake luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Primary Exports\n */\n\nvar exports = module.exports = getType;\n\n/*!\n * Detectable javascript natives\n */\n\nvar natives = {\n    '[object Array]': 'array'\n  , '[object RegExp]': 'regexp'\n  , '[object Function]': 'function'\n  , '[object Arguments]': 'arguments'\n  , '[object Date]': 'date'\n};\n\n/**\n * ### typeOf (obj)\n *\n * Use several different techniques to determine\n * the type of object being tested.\n *\n *\n * @param {Mixed} object\n * @return {String} object type\n * @api public\n */\n\nfunction getType (obj) {\n  var str = Object.prototype.toString.call(obj);\n  if (natives[str]) return natives[str];\n  if (obj === null) return 'null';\n  if (obj === undefined) return 'undefined';\n  if (obj === Object(obj)) return 'object';\n  return typeof obj;\n}\n\nexports.Library = Library;\n\n/**\n * ### Library\n *\n * Create a repository for custom type detection.\n *\n * ```js\n * var lib = new type.Library;\n * ```\n *\n */\n\nfunction Library () {\n  this.tests = {};\n}\n\n/**\n * #### .of (obj)\n *\n * Expose replacement `typeof` detection to the library.\n *\n * ```js\n * if ('string' === lib.of('hello world')) {\n *   // ...\n * }\n * ```\n *\n * @param {Mixed} object to test\n * @return {String} type\n */\n\nLibrary.prototype.of = getType;\n\n/**\n * #### .define (type, test)\n *\n * Add a test to for the `.test()` assertion.\n *\n * Can be defined as a regular expression:\n *\n * ```js\n * lib.define('int', /^[0-9]+$/);\n * ```\n *\n * ... or as a function:\n *\n * ```js\n * lib.define('bln', function (obj) {\n *   if ('boolean' === lib.of(obj)) return true;\n *   var blns = [ 'yes', 'no', 'true', 'false', 1, 0 ];\n *   if ('string' === lib.of(obj)) obj = obj.toLowerCase();\n *   return !! ~blns.indexOf(obj);\n * });\n * ```\n *\n * @param {String} type\n * @param {RegExp|Function} test\n * @api public\n */\n\nLibrary.prototype.define = function (type, test) {\n  if (arguments.length === 1) return this.tests[type];\n  this.tests[type] = test;\n  return this;\n};\n\n/**\n * #### .test (obj, test)\n *\n * Assert that an object is of type. Will first\n * check natives, and if that does not pass it will\n * use the user defined custom tests.\n *\n * ```js\n * assert(lib.test('1', 'int'));\n * assert(lib.test('yes', 'bln'));\n * ```\n *\n * @param {Mixed} object\n * @param {String} type\n * @return {Boolean} result\n * @api public\n */\n\nLibrary.prototype.test = function (obj, type) {\n  if (type === getType(obj)) return true;\n  var test = this.tests[type];\n\n  if (test && 'regexp' === getType(test)) {\n    return test.test(obj);\n  } else if (test && 'function' === getType(test)) {\n    return test(obj);\n  } else {\n    throw new ReferenceError('Type test \"' + type + '\" not defined or invalid.');\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/~/deep-eql/~/type-detect/lib/type.js\n ** module id = 44\n ** module chunks = 1\n **/","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('is-array')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\nBuffer.poolSize = 8192 // not used by this implementation\n\nvar rootParent = {}\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Safari 5-7 lacks support for changing the `Object.prototype.constructor` property\n *     on objects.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\nfunction typedArraySupport () {\n  function Bar () {}\n  try {\n    var arr = new Uint8Array(1)\n    arr.foo = function () { return 42 }\n    arr.constructor = Bar\n    return arr.foo() === 42 && // typed array instances can be augmented\n        arr.constructor === Bar && // constructor can be set\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\n/**\n * Class: Buffer\n * =============\n *\n * The Buffer constructor returns instances of `Uint8Array` that are augmented\n * with function properties for all the node `Buffer` API functions. We use\n * `Uint8Array` so that square bracket notation works as expected -- it returns\n * a single octet.\n *\n * By augmenting the instances, we can avoid modifying the `Uint8Array`\n * prototype.\n */\nfunction Buffer (arg) {\n  if (!(this instanceof Buffer)) {\n    // Avoid going through an ArgumentsAdaptorTrampoline in the common case.\n    if (arguments.length > 1) return new Buffer(arg, arguments[1])\n    return new Buffer(arg)\n  }\n\n  this.length = 0\n  this.parent = undefined\n\n  // Common case.\n  if (typeof arg === 'number') {\n    return fromNumber(this, arg)\n  }\n\n  // Slightly less common case.\n  if (typeof arg === 'string') {\n    return fromString(this, arg, arguments.length > 1 ? arguments[1] : 'utf8')\n  }\n\n  // Unusual.\n  return fromObject(this, arg)\n}\n\nfunction fromNumber (that, length) {\n  that = allocate(that, length < 0 ? 0 : checked(length) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < length; i++) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') encoding = 'utf8'\n\n  // Assumption: byteLength() return value is always < kMaxLength.\n  var length = byteLength(string, encoding) | 0\n  that = allocate(that, length)\n\n  that.write(string, encoding)\n  return that\n}\n\nfunction fromObject (that, object) {\n  if (Buffer.isBuffer(object)) return fromBuffer(that, object)\n\n  if (isArray(object)) return fromArray(that, object)\n\n  if (object == null) {\n    throw new TypeError('must start with number, buffer, array or string')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined') {\n    if (object.buffer instanceof ArrayBuffer) {\n      return fromTypedArray(that, object)\n    }\n    if (object instanceof ArrayBuffer) {\n      return fromArrayBuffer(that, object)\n    }\n  }\n\n  if (object.length) return fromArrayLike(that, object)\n\n  return fromJsonObject(that, object)\n}\n\nfunction fromBuffer (that, buffer) {\n  var length = checked(buffer.length) | 0\n  that = allocate(that, length)\n  buffer.copy(that, 0, 0, length)\n  return that\n}\n\nfunction fromArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Duplicate of fromArray() to keep fromArray() monomorphic.\nfunction fromTypedArray (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  // Truncating the elements is probably not what people expect from typed\n  // arrays with BYTES_PER_ELEMENT > 1 but it's compatible with the behavior\n  // of the old Buffer constructor.\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    array.byteLength\n    that = Buffer._augment(new Uint8Array(array))\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromTypedArray(that, new Uint8Array(array))\n  }\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = checked(array.length) | 0\n  that = allocate(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\n// Deserialize { type: 'Buffer', data: [1,2,3,...] } into a Buffer object.\n// Returns a zero-length buffer for inputs that don't conform to the spec.\nfunction fromJsonObject (that, object) {\n  var array\n  var length = 0\n\n  if (object.type === 'Buffer' && isArray(object.data)) {\n    array = object.data\n    length = checked(array.length) | 0\n  }\n  that = allocate(that, length)\n\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n}\n\nfunction allocate (that, length) {\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = Buffer._augment(new Uint8Array(length))\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that.length = length\n    that._isBuffer = true\n  }\n\n  var fromPool = length !== 0 && length <= Buffer.poolSize >>> 1\n  if (fromPool) that.parent = rootParent\n\n  return that\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (subject, encoding) {\n  if (!(this instanceof SlowBuffer)) return new SlowBuffer(subject, encoding)\n\n  var buf = new Buffer(subject, encoding)\n  delete buf.parent\n  return buf\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  var i = 0\n  var len = Math.min(x, y)\n  while (i < len) {\n    if (a[i] !== b[i]) break\n\n    ++i\n  }\n\n  if (i !== len) {\n    x = a[i]\n    y = b[i]\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'binary':\n    case 'base64':\n    case 'raw':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) throw new TypeError('list argument must be an Array of Buffers.')\n\n  if (list.length === 0) {\n    return new Buffer(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; i++) {\n      length += list[i].length\n    }\n  }\n\n  var buf = new Buffer(length)\n  var pos = 0\n  for (i = 0; i < list.length; i++) {\n    var item = list[i]\n    item.copy(buf, pos)\n    pos += item.length\n  }\n  return buf\n}\n\nfunction byteLength (string, encoding) {\n  if (typeof string !== 'string') string = '' + string\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'binary':\n      // Deprecated\n      case 'raw':\n      case 'raws':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\n// pre-set for values that may exist in the future\nBuffer.prototype.length = undefined\nBuffer.prototype.parent = undefined\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  start = start | 0\n  end = end === undefined || end === Infinity ? this.length : end | 0\n\n  if (!encoding) encoding = 'utf8'\n  if (start < 0) start = 0\n  if (end > this.length) end = this.length\n  if (end <= start) return ''\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'binary':\n        return binarySlice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return 0\n  return Buffer.compare(this, b)\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset) {\n  if (byteOffset > 0x7fffffff) byteOffset = 0x7fffffff\n  else if (byteOffset < -0x80000000) byteOffset = -0x80000000\n  byteOffset >>= 0\n\n  if (this.length === 0) return -1\n  if (byteOffset >= this.length) return -1\n\n  // Negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = Math.max(this.length + byteOffset, 0)\n\n  if (typeof val === 'string') {\n    if (val.length === 0) return -1 // special case: looking for empty string always fails\n    return String.prototype.indexOf.call(this, val, byteOffset)\n  }\n  if (Buffer.isBuffer(val)) {\n    return arrayIndexOf(this, val, byteOffset)\n  }\n  if (typeof val === 'number') {\n    if (Buffer.TYPED_ARRAY_SUPPORT && Uint8Array.prototype.indexOf === 'function') {\n      return Uint8Array.prototype.indexOf.call(this, val, byteOffset)\n    }\n    return arrayIndexOf(this, [ val ], byteOffset)\n  }\n\n  function arrayIndexOf (arr, val, byteOffset) {\n    var foundIndex = -1\n    for (var i = 0; byteOffset + i < arr.length; i++) {\n      if (arr[byteOffset + i] === val[foundIndex === -1 ? 0 : i - foundIndex]) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === val.length) return byteOffset + foundIndex\n      } else {\n        foundIndex = -1\n      }\n    }\n    return -1\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\n// `get` is deprecated\nBuffer.prototype.get = function get (offset) {\n  console.log('.get() is deprecated. Access using array indexes instead.')\n  return this.readUInt8(offset)\n}\n\n// `set` is deprecated\nBuffer.prototype.set = function set (v, offset) {\n  console.log('.set() is deprecated. Access using array indexes instead.')\n  return this.writeUInt8(v, offset)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new Error('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; i++) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) throw new Error('Invalid hex string')\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction binaryWrite (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    var swap = encoding\n    encoding = offset\n    offset = length | 0\n    length = swap\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'binary':\n        return binaryWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction binarySlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; i++) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; i++) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = Buffer._augment(this.subarray(start, end))\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; i++) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  if (newBuf.length) newBuf.parent = this.parent || this\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('buffer must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkInt(this, value, offset, byteLength, Math.pow(2, 8 * byteLength), 0)\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; i++) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; i++) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = value < 0 ? 1 : 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (value > max || value < min) throw new RangeError('value is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('index out of range')\n  if (offset < 0) throw new RangeError('index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; i--) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; i++) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    target._set(this.subarray(start, start + len), targetStart)\n  }\n\n  return len\n}\n\n// fill(value, start=0, end=buffer.length)\nBuffer.prototype.fill = function fill (value, start, end) {\n  if (!value) value = 0\n  if (!start) start = 0\n  if (!end) end = this.length\n\n  if (end < start) throw new RangeError('end < start')\n\n  // Fill 0 bytes; we're done\n  if (end === start) return\n  if (this.length === 0) return\n\n  if (start < 0 || start >= this.length) throw new RangeError('start out of bounds')\n  if (end < 0 || end > this.length) throw new RangeError('end out of bounds')\n\n  var i\n  if (typeof value === 'number') {\n    for (i = start; i < end; i++) {\n      this[i] = value\n    }\n  } else {\n    var bytes = utf8ToBytes(value.toString())\n    var len = bytes.length\n    for (i = start; i < end; i++) {\n      this[i] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n/**\n * Creates a new `ArrayBuffer` with the *copied* memory of the buffer instance.\n * Added in Node 0.12. Only available in browsers that support ArrayBuffer.\n */\nBuffer.prototype.toArrayBuffer = function toArrayBuffer () {\n  if (typeof Uint8Array !== 'undefined') {\n    if (Buffer.TYPED_ARRAY_SUPPORT) {\n      return (new Buffer(this)).buffer\n    } else {\n      var buf = new Uint8Array(this.length)\n      for (var i = 0, len = buf.length; i < len; i += 1) {\n        buf[i] = this[i]\n      }\n      return buf.buffer\n    }\n  } else {\n    throw new TypeError('Buffer.toArrayBuffer not supported in this browser')\n  }\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar BP = Buffer.prototype\n\n/**\n * Augment a Uint8Array *instance* (not the Uint8Array class!) with Buffer methods\n */\nBuffer._augment = function _augment (arr) {\n  arr.constructor = Buffer\n  arr._isBuffer = true\n\n  // save reference to original Uint8Array set method before overwriting\n  arr._set = arr.set\n\n  // deprecated\n  arr.get = BP.get\n  arr.set = BP.set\n\n  arr.write = BP.write\n  arr.toString = BP.toString\n  arr.toLocaleString = BP.toString\n  arr.toJSON = BP.toJSON\n  arr.equals = BP.equals\n  arr.compare = BP.compare\n  arr.indexOf = BP.indexOf\n  arr.copy = BP.copy\n  arr.slice = BP.slice\n  arr.readUIntLE = BP.readUIntLE\n  arr.readUIntBE = BP.readUIntBE\n  arr.readUInt8 = BP.readUInt8\n  arr.readUInt16LE = BP.readUInt16LE\n  arr.readUInt16BE = BP.readUInt16BE\n  arr.readUInt32LE = BP.readUInt32LE\n  arr.readUInt32BE = BP.readUInt32BE\n  arr.readIntLE = BP.readIntLE\n  arr.readIntBE = BP.readIntBE\n  arr.readInt8 = BP.readInt8\n  arr.readInt16LE = BP.readInt16LE\n  arr.readInt16BE = BP.readInt16BE\n  arr.readInt32LE = BP.readInt32LE\n  arr.readInt32BE = BP.readInt32BE\n  arr.readFloatLE = BP.readFloatLE\n  arr.readFloatBE = BP.readFloatBE\n  arr.readDoubleLE = BP.readDoubleLE\n  arr.readDoubleBE = BP.readDoubleBE\n  arr.writeUInt8 = BP.writeUInt8\n  arr.writeUIntLE = BP.writeUIntLE\n  arr.writeUIntBE = BP.writeUIntBE\n  arr.writeUInt16LE = BP.writeUInt16LE\n  arr.writeUInt16BE = BP.writeUInt16BE\n  arr.writeUInt32LE = BP.writeUInt32LE\n  arr.writeUInt32BE = BP.writeUInt32BE\n  arr.writeIntLE = BP.writeIntLE\n  arr.writeIntBE = BP.writeIntBE\n  arr.writeInt8 = BP.writeInt8\n  arr.writeInt16LE = BP.writeInt16LE\n  arr.writeInt16BE = BP.writeInt16BE\n  arr.writeInt32LE = BP.writeInt32LE\n  arr.writeInt32BE = BP.writeInt32BE\n  arr.writeFloatLE = BP.writeFloatLE\n  arr.writeFloatBE = BP.writeFloatBE\n  arr.writeDoubleLE = BP.writeDoubleLE\n  arr.writeDoubleBE = BP.writeDoubleBE\n  arr.fill = BP.fill\n  arr.inspect = BP.inspect\n  arr.toArrayBuffer = BP.toArrayBuffer\n\n  return arr\n}\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; i++) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00 | 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; i++) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; i++) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/index.js\n ** module id = 45\n ** module chunks = 1\n **/","var lookup = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n\n;(function (exports) {\n\t'use strict';\n\n  var Arr = (typeof Uint8Array !== 'undefined')\n    ? Uint8Array\n    : Array\n\n\tvar PLUS   = '+'.charCodeAt(0)\n\tvar SLASH  = '/'.charCodeAt(0)\n\tvar NUMBER = '0'.charCodeAt(0)\n\tvar LOWER  = 'a'.charCodeAt(0)\n\tvar UPPER  = 'A'.charCodeAt(0)\n\tvar PLUS_URL_SAFE = '-'.charCodeAt(0)\n\tvar SLASH_URL_SAFE = '_'.charCodeAt(0)\n\n\tfunction decode (elt) {\n\t\tvar code = elt.charCodeAt(0)\n\t\tif (code === PLUS ||\n\t\t    code === PLUS_URL_SAFE)\n\t\t\treturn 62 // '+'\n\t\tif (code === SLASH ||\n\t\t    code === SLASH_URL_SAFE)\n\t\t\treturn 63 // '/'\n\t\tif (code < NUMBER)\n\t\t\treturn -1 //no match\n\t\tif (code < NUMBER + 10)\n\t\t\treturn code - NUMBER + 26 + 26\n\t\tif (code < UPPER + 26)\n\t\t\treturn code - UPPER\n\t\tif (code < LOWER + 26)\n\t\t\treturn code - LOWER + 26\n\t}\n\n\tfunction b64ToByteArray (b64) {\n\t\tvar i, j, l, tmp, placeHolders, arr\n\n\t\tif (b64.length % 4 > 0) {\n\t\t\tthrow new Error('Invalid string. Length must be a multiple of 4')\n\t\t}\n\n\t\t// the number of equal signs (place holders)\n\t\t// if there are two placeholders, than the two characters before it\n\t\t// represent one byte\n\t\t// if there is only one, then the three characters before it represent 2 bytes\n\t\t// this is just a cheap hack to not do indexOf twice\n\t\tvar len = b64.length\n\t\tplaceHolders = '=' === b64.charAt(len - 2) ? 2 : '=' === b64.charAt(len - 1) ? 1 : 0\n\n\t\t// base64 is 4/3 + up to two characters of the original data\n\t\tarr = new Arr(b64.length * 3 / 4 - placeHolders)\n\n\t\t// if there are placeholders, only get up to the last complete 4 chars\n\t\tl = placeHolders > 0 ? b64.length - 4 : b64.length\n\n\t\tvar L = 0\n\n\t\tfunction push (v) {\n\t\t\tarr[L++] = v\n\t\t}\n\n\t\tfor (i = 0, j = 0; i < l; i += 4, j += 3) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 18) | (decode(b64.charAt(i + 1)) << 12) | (decode(b64.charAt(i + 2)) << 6) | decode(b64.charAt(i + 3))\n\t\t\tpush((tmp & 0xFF0000) >> 16)\n\t\t\tpush((tmp & 0xFF00) >> 8)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\tif (placeHolders === 2) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 2) | (decode(b64.charAt(i + 1)) >> 4)\n\t\t\tpush(tmp & 0xFF)\n\t\t} else if (placeHolders === 1) {\n\t\t\ttmp = (decode(b64.charAt(i)) << 10) | (decode(b64.charAt(i + 1)) << 4) | (decode(b64.charAt(i + 2)) >> 2)\n\t\t\tpush((tmp >> 8) & 0xFF)\n\t\t\tpush(tmp & 0xFF)\n\t\t}\n\n\t\treturn arr\n\t}\n\n\tfunction uint8ToBase64 (uint8) {\n\t\tvar i,\n\t\t\textraBytes = uint8.length % 3, // if we have 1 byte left, pad 2 bytes\n\t\t\toutput = \"\",\n\t\t\ttemp, length\n\n\t\tfunction encode (num) {\n\t\t\treturn lookup.charAt(num)\n\t\t}\n\n\t\tfunction tripletToBase64 (num) {\n\t\t\treturn encode(num >> 18 & 0x3F) + encode(num >> 12 & 0x3F) + encode(num >> 6 & 0x3F) + encode(num & 0x3F)\n\t\t}\n\n\t\t// go through the array every three bytes, we'll deal with trailing stuff later\n\t\tfor (i = 0, length = uint8.length - extraBytes; i < length; i += 3) {\n\t\t\ttemp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n\t\t\toutput += tripletToBase64(temp)\n\t\t}\n\n\t\t// pad the end with zeros, but make sure to not forget the extra bytes\n\t\tswitch (extraBytes) {\n\t\t\tcase 1:\n\t\t\t\ttemp = uint8[uint8.length - 1]\n\t\t\t\toutput += encode(temp >> 2)\n\t\t\t\toutput += encode((temp << 4) & 0x3F)\n\t\t\t\toutput += '=='\n\t\t\t\tbreak\n\t\t\tcase 2:\n\t\t\t\ttemp = (uint8[uint8.length - 2] << 8) + (uint8[uint8.length - 1])\n\t\t\t\toutput += encode(temp >> 10)\n\t\t\t\toutput += encode((temp >> 4) & 0x3F)\n\t\t\t\toutput += encode((temp << 2) & 0x3F)\n\t\t\t\toutput += '='\n\t\t\t\tbreak\n\t\t}\n\n\t\treturn output\n\t}\n\n\texports.toByteArray = b64ToByteArray\n\texports.fromByteArray = uint8ToBase64\n}(typeof exports === 'undefined' ? (this.base64js = {}) : exports))\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/base64-js/lib/b64.js\n ** module id = 46\n ** module chunks = 1\n **/","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/ieee754/index.js\n ** module id = 47\n ** module chunks = 1\n **/","\n/**\n * isArray\n */\n\nvar isArray = Array.isArray;\n\n/**\n * toString\n */\n\nvar str = Object.prototype.toString;\n\n/**\n * Whether or not the given `val`\n * is an array.\n *\n * example:\n *\n *        isArray([]);\n *        // > true\n *        isArray(arguments);\n *        // > false\n *        isArray('');\n *        // > false\n *\n * @param {mixed} val\n * @return {bool}\n */\n\nmodule.exports = isArray || function (val) {\n  return !! val && '[object Array]' == str.call(val);\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** (webpack)/~/node-libs-browser/~/buffer/~/is-array/index.js\n ** module id = 48\n ** module chunks = 1\n **/","/*!\n * Chai - getPathValue utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * @see https://github.com/logicalparadox/filtr\n * MIT Licensed\n */\n\nvar getPathInfo = require('./getPathInfo');\n\n/**\n * ### .getPathValue(path, object)\n *\n * This allows the retrieval of values in an\n * object given a string path.\n *\n *     var obj = {\n *         prop1: {\n *             arr: ['a', 'b', 'c']\n *           , str: 'Hello'\n *         }\n *       , prop2: {\n *             arr: [ { nested: 'Universe' } ]\n *           , str: 'Hello again!'\n *         }\n *     }\n *\n * The following would be the results.\n *\n *     getPathValue('prop1.str', obj); // Hello\n *     getPathValue('prop1.att[2]', obj); // b\n *     getPathValue('prop2.arr[0].nested', obj); // Universe\n *\n * @param {String} path\n * @param {Object} object\n * @returns {Object} value or `undefined`\n * @name getPathValue\n * @api public\n */\nmodule.exports = function(path, obj) {\n  var info = getPathInfo(path, obj);\n  return info.value;\n}; \n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/getPathValue.js\n ** module id = 49\n ** module chunks = 1\n **/","/*!\n * Chai - getPathInfo utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar hasProperty = require('./hasProperty');\n\n/**\n * ### .getPathInfo(path, object)\n *\n * This allows the retrieval of property info in an\n * object given a string path.\n *\n * The path info consists of an object with the\n * following properties:\n *\n * * parent - The parent object of the property referenced by `path`\n * * name - The name of the final property, a number if it was an array indexer\n * * value - The value of the property, if it exists, otherwise `undefined`\n * * exists - Whether the property exists or not\n *\n * @param {String} path\n * @param {Object} object\n * @returns {Object} info\n * @name getPathInfo\n * @api public\n */\n\nmodule.exports = function getPathInfo(path, obj) {\n  var parsed = parsePath(path),\n      last = parsed[parsed.length - 1];\n\n  var info = {\n    parent: parsed.length > 1 ? _getPathValue(parsed, obj, parsed.length - 1) : obj,\n    name: last.p || last.i,\n    value: _getPathValue(parsed, obj)\n  };\n  info.exists = hasProperty(info.name, info.parent);\n\n  return info;\n};\n\n\n/*!\n * ## parsePath(path)\n *\n * Helper function used to parse string object\n * paths. Use in conjunction with `_getPathValue`.\n *\n *      var parsed = parsePath('myobject.property.subprop');\n *\n * ### Paths:\n *\n * * Can be as near infinitely deep and nested\n * * Arrays are also valid using the formal `myobject.document[3].property`.\n * * Literal dots and brackets (not delimiter) must be backslash-escaped.\n *\n * @param {String} path\n * @returns {Object} parsed\n * @api private\n */\n\nfunction parsePath (path) {\n  var str = path.replace(/([^\\\\])\\[/g, '$1.[')\n    , parts = str.match(/(\\\\\\.|[^.]+?)+/g);\n  return parts.map(function (value) {\n    var re = /^\\[(\\d+)\\]$/\n      , mArr = re.exec(value);\n    if (mArr) return { i: parseFloat(mArr[1]) };\n    else return { p: value.replace(/\\\\([.\\[\\]])/g, '$1') };\n  });\n}\n\n\n/*!\n * ## _getPathValue(parsed, obj)\n *\n * Helper companion function for `.parsePath` that returns\n * the value located at the parsed address.\n *\n *      var value = getPathValue(parsed, obj);\n *\n * @param {Object} parsed definition from `parsePath`.\n * @param {Object} object to search against\n * @param {Number} object to search against\n * @returns {Object|Undefined} value\n * @api private\n */\n\nfunction _getPathValue (parsed, obj, index) {\n  var tmp = obj\n    , res;\n\n  index = (index === undefined ? parsed.length : index);\n\n  for (var i = 0, l = index; i < l; i++) {\n    var part = parsed[i];\n    if (tmp) {\n      if ('undefined' !== typeof part.p)\n        tmp = tmp[part.p];\n      else if ('undefined' !== typeof part.i)\n        tmp = tmp[part.i];\n      if (i == (l - 1)) res = tmp;\n    } else {\n      res = undefined;\n    }\n  }\n  return res;\n}\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/getPathInfo.js\n ** module id = 50\n ** module chunks = 1\n **/","/*!\n * Chai - hasProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar type = require('type-detect');\n\n/**\n * ### .hasProperty(object, name)\n *\n * This allows checking whether an object has\n * named property or numeric array index.\n *\n * Basically does the same thing as the `in`\n * operator but works properly with natives\n * and null/undefined values.\n *\n *     var obj = {\n *         arr: ['a', 'b', 'c']\n *       , str: 'Hello'\n *     }\n *\n * The following would be the results.\n *\n *     hasProperty('str', obj);  // true\n *     hasProperty('constructor', obj);  // true\n *     hasProperty('bar', obj);  // false\n *     \n *     hasProperty('length', obj.str); // true\n *     hasProperty(1, obj.str);  // true\n *     hasProperty(5, obj.str);  // false\n *\n *     hasProperty('length', obj.arr);  // true\n *     hasProperty(2, obj.arr);  // true\n *     hasProperty(3, obj.arr);  // false\n *\n * @param {Objuect} object\n * @param {String|Number} name\n * @returns {Boolean} whether it exists\n * @name getPathInfo\n * @api public\n */\n\nvar literals = {\n    'number': Number\n  , 'string': String\n};\n\nmodule.exports = function hasProperty(name, obj) {\n  var ot = type(obj);\n\n  // Bad Object, obviously no props at all\n  if(ot === 'null' || ot === 'undefined')\n    return false;\n\n  // The `in` operator does not work with certain literals\n  // box these before the check\n  if(literals[ot] && typeof obj !== 'object')\n    obj = new literals[ot](obj);\n\n  return name in obj;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/hasProperty.js\n ** module id = 51\n ** module chunks = 1\n **/","/*!\n * Chai - addProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('../config');\nvar flag = require('./flag');\n\n/**\n * ### addProperty (ctx, name, getter)\n *\n * Adds a property to the prototype of an object.\n *\n *     utils.addProperty(chai.Assertion.prototype, 'foo', function () {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.instanceof(Foo);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.foo;\n *\n * @param {Object} ctx object to which the property is added\n * @param {String} name of property to add\n * @param {Function} getter function to be used for name\n * @name addProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  Object.defineProperty(ctx, name,\n    { get: function addProperty() {\n        var old_ssfi = flag(this, 'ssfi');\n        if (old_ssfi && config.includeStack === false)\n          flag(this, 'ssfi', addProperty);\n\n        var result = getter.call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/addProperty.js\n ** module id = 52\n ** module chunks = 1\n **/","/*!\n * Chai - addMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('../config');\n\n/**\n * ### .addMethod (ctx, name, method)\n *\n * Adds a method to the prototype of an object.\n *\n *     utils.addMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(fooStr).to.be.foo('bar');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for name\n * @name addMethod\n * @api public\n */\nvar flag = require('./flag');\n\nmodule.exports = function (ctx, name, method) {\n  ctx[name] = function () {\n    var old_ssfi = flag(this, 'ssfi');\n    if (old_ssfi && config.includeStack === false)\n      flag(this, 'ssfi', ctx[name]);\n    var result = method.apply(this, arguments);\n    return result === undefined ? this : result;\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/addMethod.js\n ** module id = 53\n ** module chunks = 1\n **/","/*!\n * Chai - overwriteProperty utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteProperty (ctx, name, fn)\n *\n * Overwites an already existing property getter and provides\n * access to previous value. Must return function to use as getter.\n *\n *     utils.overwriteProperty(chai.Assertion.prototype, 'ok', function (_super) {\n *       return function () {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.name).to.equal('bar');\n *         } else {\n *           _super.call(this);\n *         }\n *       }\n *     });\n *\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteProperty('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.be.ok;\n *\n * @param {Object} ctx object whose property is to be overwritten\n * @param {String} name of property to overwrite\n * @param {Function} getter function that returns a getter function to be used for name\n * @name overwriteProperty\n * @api public\n */\n\nmodule.exports = function (ctx, name, getter) {\n  var _get = Object.getOwnPropertyDescriptor(ctx, name)\n    , _super = function () {};\n\n  if (_get && 'function' === typeof _get.get)\n    _super = _get.get\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        var result = getter(_super).call(this);\n        return result === undefined ? this : result;\n      }\n    , configurable: true\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/overwriteProperty.js\n ** module id = 54\n ** module chunks = 1\n **/","/*!\n * Chai - overwriteMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteMethod (ctx, name, fn)\n *\n * Overwites an already existing method and provides\n * access to previous function. Must return function\n * to be used for name.\n *\n *     utils.overwriteMethod(chai.Assertion.prototype, 'equal', function (_super) {\n *       return function (str) {\n *         var obj = utils.flag(this, 'object');\n *         if (obj instanceof Foo) {\n *           new chai.Assertion(obj.value).to.equal(str);\n *         } else {\n *           _super.apply(this, arguments);\n *         }\n *       }\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteMethod('foo', fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.equal('bar');\n *\n * @param {Object} ctx object whose method is to be overwritten\n * @param {String} name of method to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @name overwriteMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method) {\n  var _method = ctx[name]\n    , _super = function () { return this; };\n\n  if (_method && 'function' === typeof _method)\n    _super = _method;\n\n  ctx[name] = function () {\n    var result = method(_super).apply(this, arguments);\n    return result === undefined ? this : result;\n  }\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/overwriteMethod.js\n ** module id = 55\n ** module chunks = 1\n **/","/*!\n * Chai - addChainingMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/*!\n * Module dependencies\n */\n\nvar transferFlags = require('./transferFlags');\nvar flag = require('./flag');\nvar config = require('../config');\n\n/*!\n * Module variables\n */\n\n// Check whether `__proto__` is supported\nvar hasProtoSupport = '__proto__' in Object;\n\n// Without `__proto__` support, this module will need to add properties to a function.\n// However, some Function.prototype methods cannot be overwritten,\n// and there seems no easy cross-platform way to detect them (@see chaijs/chai/issues/69).\nvar excludeNames = /^(?:length|name|arguments|caller)$/;\n\n// Cache `Function` properties\nvar call  = Function.prototype.call,\n    apply = Function.prototype.apply;\n\n/**\n * ### addChainableMethod (ctx, name, method, chainingBehavior)\n *\n * Adds a method to an object, such that the method can also be chained.\n *\n *     utils.addChainableMethod(chai.Assertion.prototype, 'foo', function (str) {\n *       var obj = utils.flag(this, 'object');\n *       new chai.Assertion(obj).to.be.equal(str);\n *     });\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.addChainableMethod('foo', fn, chainingBehavior);\n *\n * The result can then be used as both a method assertion, executing both `method` and\n * `chainingBehavior`, or as a language chain, which only executes `chainingBehavior`.\n *\n *     expect(fooStr).to.be.foo('bar');\n *     expect(fooStr).to.be.foo.equal('foo');\n *\n * @param {Object} ctx object to which the method is added\n * @param {String} name of method to add\n * @param {Function} method function to be used for `name`, when called\n * @param {Function} chainingBehavior function to be called every time the property is accessed\n * @name addChainableMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method, chainingBehavior) {\n  if (typeof chainingBehavior !== 'function') {\n    chainingBehavior = function () { };\n  }\n\n  var chainableBehavior = {\n      method: method\n    , chainingBehavior: chainingBehavior\n  };\n\n  // save the methods so we can overwrite them later, if we need to.\n  if (!ctx.__methods) {\n    ctx.__methods = {};\n  }\n  ctx.__methods[name] = chainableBehavior;\n\n  Object.defineProperty(ctx, name,\n    { get: function () {\n        chainableBehavior.chainingBehavior.call(this);\n\n        var assert = function assert() {\n          var old_ssfi = flag(this, 'ssfi');\n          if (old_ssfi && config.includeStack === false)\n            flag(this, 'ssfi', assert);\n          var result = chainableBehavior.method.apply(this, arguments);\n          return result === undefined ? this : result;\n        };\n\n        // Use `__proto__` if available\n        if (hasProtoSupport) {\n          // Inherit all properties from the object by replacing the `Function` prototype\n          var prototype = assert.__proto__ = Object.create(this);\n          // Restore the `call` and `apply` methods from `Function`\n          prototype.call = call;\n          prototype.apply = apply;\n        }\n        // Otherwise, redefine all properties (slow!)\n        else {\n          var asserterNames = Object.getOwnPropertyNames(ctx);\n          asserterNames.forEach(function (asserterName) {\n            if (!excludeNames.test(asserterName)) {\n              var pd = Object.getOwnPropertyDescriptor(ctx, asserterName);\n              Object.defineProperty(assert, asserterName, pd);\n            }\n          });\n        }\n\n        transferFlags(this, assert);\n        return assert;\n      }\n    , configurable: true\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/addChainableMethod.js\n ** module id = 56\n ** module chunks = 1\n **/","/*!\n * Chai - overwriteChainableMethod utility\n * Copyright(c) 2012-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n/**\n * ### overwriteChainableMethod (ctx, name, method, chainingBehavior)\n *\n * Overwites an already existing chainable method\n * and provides access to the previous function or\n * property.  Must return functions to be used for\n * name.\n *\n *     utils.overwriteChainableMethod(chai.Assertion.prototype, 'length',\n *       function (_super) {\n *       }\n *     , function (_super) {\n *       }\n *     );\n *\n * Can also be accessed directly from `chai.Assertion`.\n *\n *     chai.Assertion.overwriteChainableMethod('foo', fn, fn);\n *\n * Then can be used as any other assertion.\n *\n *     expect(myFoo).to.have.length(3);\n *     expect(myFoo).to.have.length.above(3);\n *\n * @param {Object} ctx object whose method / property is to be overwritten\n * @param {String} name of method / property to overwrite\n * @param {Function} method function that returns a function to be used for name\n * @param {Function} chainingBehavior function that returns a function to be used for property\n * @name overwriteChainableMethod\n * @api public\n */\n\nmodule.exports = function (ctx, name, method, chainingBehavior) {\n  var chainableBehavior = ctx.__methods[name];\n\n  var _chainingBehavior = chainableBehavior.chainingBehavior;\n  chainableBehavior.chainingBehavior = function () {\n    var result = chainingBehavior(_chainingBehavior).call(this);\n    return result === undefined ? this : result;\n  };\n\n  var _method = chainableBehavior.method;\n  chainableBehavior.method = function () {\n    var result = method(_method).apply(this, arguments);\n    return result === undefined ? this : result;\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/utils/overwriteChainableMethod.js\n ** module id = 57\n ** module chunks = 1\n **/","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nvar config = require('./config');\n\nmodule.exports = function (_chai, util) {\n  /*!\n   * Module dependencies.\n   */\n\n  var AssertionError = _chai.AssertionError\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  _chai.Assertion = Assertion;\n\n  /*!\n   * Assertion Constructor\n   *\n   * Creates object for chaining.\n   *\n   * @api private\n   */\n\n  function Assertion (obj, msg, stack) {\n    flag(this, 'ssfi', stack || arguments.callee);\n    flag(this, 'object', obj);\n    flag(this, 'message', msg);\n  }\n\n  Object.defineProperty(Assertion, 'includeStack', {\n    get: function() {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      return config.includeStack;\n    },\n    set: function(value) {\n      console.warn('Assertion.includeStack is deprecated, use chai.config.includeStack instead.');\n      config.includeStack = value;\n    }\n  });\n\n  Object.defineProperty(Assertion, 'showDiff', {\n    get: function() {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      return config.showDiff;\n    },\n    set: function(value) {\n      console.warn('Assertion.showDiff is deprecated, use chai.config.showDiff instead.');\n      config.showDiff = value;\n    }\n  });\n\n  Assertion.addProperty = function (name, fn) {\n    util.addProperty(this.prototype, name, fn);\n  };\n\n  Assertion.addMethod = function (name, fn) {\n    util.addMethod(this.prototype, name, fn);\n  };\n\n  Assertion.addChainableMethod = function (name, fn, chainingBehavior) {\n    util.addChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  Assertion.overwriteProperty = function (name, fn) {\n    util.overwriteProperty(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteMethod = function (name, fn) {\n    util.overwriteMethod(this.prototype, name, fn);\n  };\n\n  Assertion.overwriteChainableMethod = function (name, fn, chainingBehavior) {\n    util.overwriteChainableMethod(this.prototype, name, fn, chainingBehavior);\n  };\n\n  /**\n   * ### .assert(expression, message, negateMessage, expected, actual, showDiff)\n   *\n   * Executes an expression and check expectations. Throws AssertionError for reporting if test doesn't pass.\n   *\n   * @name assert\n   * @param {Philosophical} expression to be tested\n   * @param {String or Function} message or function that returns message to display if expression fails\n   * @param {String or Function} negatedMessage or function that returns negatedMessage to display if negated expression fails\n   * @param {Mixed} expected value (remember to check for negation)\n   * @param {Mixed} actual (optional) will default to `this.obj`\n   * @param {Boolean} showDiff (optional) when set to `true`, assert will display a diff in addition to the message if expression fails\n   * @api private\n   */\n\n  Assertion.prototype.assert = function (expr, msg, negateMsg, expected, _actual, showDiff) {\n    var ok = util.test(this, arguments);\n    if (true !== showDiff) showDiff = false;\n    if (true !== config.showDiff) showDiff = false;\n\n    if (!ok) {\n      var msg = util.getMessage(this, arguments)\n        , actual = util.getActual(this, arguments);\n      throw new AssertionError(msg, {\n          actual: actual\n        , expected: expected\n        , showDiff: showDiff\n      }, (config.includeStack) ? this.assert : flag(this, 'ssfi'));\n    }\n  };\n\n  /*!\n   * ### ._obj\n   *\n   * Quick reference to stored `actual` value for plugin developers.\n   *\n   * @api private\n   */\n\n  Object.defineProperty(Assertion.prototype, '_obj',\n    { get: function () {\n        return flag(this, 'object');\n      }\n    , set: function (val) {\n        flag(this, 'object', val);\n      }\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/assertion.js\n ** module id = 58\n ** module chunks = 1\n **/","/*!\n * chai\n * http://chaijs.com\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, _) {\n  var Assertion = chai.Assertion\n    , toString = Object.prototype.toString\n    , flag = _.flag;\n\n  /**\n   * ### Language Chains\n   *\n   * The following are provided as chainable getters to\n   * improve the readability of your assertions. They\n   * do not provide testing capabilities unless they\n   * have been overwritten by a plugin.\n   *\n   * **Chains**\n   *\n   * - to\n   * - be\n   * - been\n   * - is\n   * - that\n   * - which\n   * - and\n   * - has\n   * - have\n   * - with\n   * - at\n   * - of\n   * - same\n   *\n   * @name language chains\n   * @api public\n   */\n\n  [ 'to', 'be', 'been'\n  , 'is', 'and', 'has', 'have'\n  , 'with', 'that', 'which', 'at'\n  , 'of', 'same' ].forEach(function (chain) {\n    Assertion.addProperty(chain, function () {\n      return this;\n    });\n  });\n\n  /**\n   * ### .not\n   *\n   * Negates any of assertions following in the chain.\n   *\n   *     expect(foo).to.not.equal('bar');\n   *     expect(goodFn).to.not.throw(Error);\n   *     expect({ foo: 'baz' }).to.have.property('foo')\n   *       .and.not.equal('bar');\n   *\n   * @name not\n   * @api public\n   */\n\n  Assertion.addProperty('not', function () {\n    flag(this, 'negate', true);\n  });\n\n  /**\n   * ### .deep\n   *\n   * Sets the `deep` flag, later used by the `equal` and\n   * `property` assertions.\n   *\n   *     expect(foo).to.deep.equal({ bar: 'baz' });\n   *     expect({ foo: { bar: { baz: 'quux' } } })\n   *       .to.have.deep.property('foo.bar.baz', 'quux');\n   *\n   * `.deep.property` special characters can be escaped\n   * by adding two slashes before the `.` or `[]`.\n   *\n   *     var deepCss = { '.link': { '[target]': 42 }};\n   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n   *\n   * @name deep\n   * @api public\n   */\n\n  Assertion.addProperty('deep', function () {\n    flag(this, 'deep', true);\n  });\n\n  /**\n   * ### .any\n   *\n   * Sets the `any` flag, (opposite of the `all` flag)\n   * later used in the `keys` assertion.\n   *\n   *     expect(foo).to.have.any.keys('bar', 'baz');\n   *\n   * @name any\n   * @api public\n   */\n\n  Assertion.addProperty('any', function () {\n    flag(this, 'any', true);\n    flag(this, 'all', false)\n  });\n\n\n  /**\n   * ### .all\n   *\n   * Sets the `all` flag (opposite of the `any` flag)\n   * later used by the `keys` assertion.\n   *\n   *     expect(foo).to.have.all.keys('bar', 'baz');\n   *\n   * @name all\n   * @api public\n   */\n\n  Assertion.addProperty('all', function () {\n    flag(this, 'all', true);\n    flag(this, 'any', false);\n  });\n\n  /**\n   * ### .a(type)\n   *\n   * The `a` and `an` assertions are aliases that can be\n   * used either as language chains or to assert a value's\n   * type.\n   *\n   *     // typeof\n   *     expect('test').to.be.a('string');\n   *     expect({ foo: 'bar' }).to.be.an('object');\n   *     expect(null).to.be.a('null');\n   *     expect(undefined).to.be.an('undefined');\n   *     expect(new Error).to.be.an('error');\n   *     expect(new Promise).to.be.a('promise');\n   *     expect(new Float32Array()).to.be.a('float32array');\n   *     expect(Symbol()).to.be.a('symbol');\n   *\n   *     // es6 overrides\n   *     expect({[Symbol.toStringTag]:()=>'foo'}).to.be.a('foo');\n   *\n   *     // language chain\n   *     expect(foo).to.be.an.instanceof(Foo);\n   *\n   * @name a\n   * @alias an\n   * @param {String} type\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function an (type, msg) {\n    if (msg) flag(this, 'message', msg);\n    type = type.toLowerCase();\n    var obj = flag(this, 'object')\n      , article = ~[ 'a', 'e', 'i', 'o', 'u' ].indexOf(type.charAt(0)) ? 'an ' : 'a ';\n\n    this.assert(\n        type === _.type(obj)\n      , 'expected #{this} to be ' + article + type\n      , 'expected #{this} not to be ' + article + type\n    );\n  }\n\n  Assertion.addChainableMethod('an', an);\n  Assertion.addChainableMethod('a', an);\n\n  /**\n   * ### .include(value)\n   *\n   * The `include` and `contain` assertions can be used as either property\n   * based language chains or as methods to assert the inclusion of an object\n   * in an array or a substring in a string. When used as language chains,\n   * they toggle the `contains` flag for the `keys` assertion.\n   *\n   *     expect([1,2,3]).to.include(2);\n   *     expect('foobar').to.contain('foo');\n   *     expect({ foo: 'bar', hello: 'universe' }).to.include.keys('foo');\n   *\n   * @name include\n   * @alias contain\n   * @alias includes\n   * @alias contains\n   * @param {Object|String|Number} obj\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function includeChainingBehavior () {\n    flag(this, 'contains', true);\n  }\n\n  function include (val, msg) {\n    _.expectTypes(this, ['array', 'object', 'string']);\n\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var expected = false;\n\n    if (_.type(obj) === 'array' && _.type(val) === 'object') {\n      for (var i in obj) {\n        if (_.eql(obj[i], val)) {\n          expected = true;\n          break;\n        }\n      }\n    } else if (_.type(val) === 'object') {\n      if (!flag(this, 'negate')) {\n        for (var k in val) new Assertion(obj).property(k, val[k]);\n        return;\n      }\n      var subset = {};\n      for (var k in val) subset[k] = obj[k];\n      expected = _.eql(subset, val);\n    } else {\n      expected = (obj != undefined) && ~obj.indexOf(val);\n    }\n    this.assert(\n        expected\n      , 'expected #{this} to include ' + _.inspect(val)\n      , 'expected #{this} to not include ' + _.inspect(val));\n  }\n\n  Assertion.addChainableMethod('include', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contain', include, includeChainingBehavior);\n  Assertion.addChainableMethod('contains', include, includeChainingBehavior);\n  Assertion.addChainableMethod('includes', include, includeChainingBehavior);\n\n  /**\n   * ### .ok\n   *\n   * Asserts that the target is truthy.\n   *\n   *     expect('everything').to.be.ok;\n   *     expect(1).to.be.ok;\n   *     expect(false).to.not.be.ok;\n   *     expect(undefined).to.not.be.ok;\n   *     expect(null).to.not.be.ok;\n   *\n   * @name ok\n   * @api public\n   */\n\n  Assertion.addProperty('ok', function () {\n    this.assert(\n        flag(this, 'object')\n      , 'expected #{this} to be truthy'\n      , 'expected #{this} to be falsy');\n  });\n\n  /**\n   * ### .true\n   *\n   * Asserts that the target is `true`.\n   *\n   *     expect(true).to.be.true;\n   *     expect(1).to.not.be.true;\n   *\n   * @name true\n   * @api public\n   */\n\n  Assertion.addProperty('true', function () {\n    this.assert(\n        true === flag(this, 'object')\n      , 'expected #{this} to be true'\n      , 'expected #{this} to be false'\n      , this.negate ? false : true\n    );\n  });\n\n  /**\n   * ### .false\n   *\n   * Asserts that the target is `false`.\n   *\n   *     expect(false).to.be.false;\n   *     expect(0).to.not.be.false;\n   *\n   * @name false\n   * @api public\n   */\n\n  Assertion.addProperty('false', function () {\n    this.assert(\n        false === flag(this, 'object')\n      , 'expected #{this} to be false'\n      , 'expected #{this} to be true'\n      , this.negate ? true : false\n    );\n  });\n\n  /**\n   * ### .null\n   *\n   * Asserts that the target is `null`.\n   *\n   *     expect(null).to.be.null;\n   *     expect(undefined).to.not.be.null;\n   *\n   * @name null\n   * @api public\n   */\n\n  Assertion.addProperty('null', function () {\n    this.assert(\n        null === flag(this, 'object')\n      , 'expected #{this} to be null'\n      , 'expected #{this} not to be null'\n    );\n  });\n\n  /**\n   * ### .undefined\n   *\n   * Asserts that the target is `undefined`.\n   *\n   *     expect(undefined).to.be.undefined;\n   *     expect(null).to.not.be.undefined;\n   *\n   * @name undefined\n   * @api public\n   */\n\n  Assertion.addProperty('undefined', function () {\n    this.assert(\n        undefined === flag(this, 'object')\n      , 'expected #{this} to be undefined'\n      , 'expected #{this} not to be undefined'\n    );\n  });\n\n  /**\n   * ### .NaN\n   * Asserts that the target is `NaN`.\n   *\n   *     expect('foo').to.be.NaN;\n   *     expect(4).not.to.be.NaN;\n   *\n   * @name NaN\n   * @api public\n   */\n\n  Assertion.addProperty('NaN', function () {\n    this.assert(\n        isNaN(flag(this, 'object'))\n        , 'expected #{this} to be NaN'\n        , 'expected #{this} not to be NaN'\n    );\n  });\n\n  /**\n   * ### .exist\n   *\n   * Asserts that the target is neither `null` nor `undefined`.\n   *\n   *     var foo = 'hi'\n   *       , bar = null\n   *       , baz;\n   *\n   *     expect(foo).to.exist;\n   *     expect(bar).to.not.exist;\n   *     expect(baz).to.not.exist;\n   *\n   * @name exist\n   * @api public\n   */\n\n  Assertion.addProperty('exist', function () {\n    this.assert(\n        null != flag(this, 'object')\n      , 'expected #{this} to exist'\n      , 'expected #{this} to not exist'\n    );\n  });\n\n\n  /**\n   * ### .empty\n   *\n   * Asserts that the target's length is `0`. For arrays and strings, it checks\n   * the `length` property. For objects, it gets the count of\n   * enumerable keys.\n   *\n   *     expect([]).to.be.empty;\n   *     expect('').to.be.empty;\n   *     expect({}).to.be.empty;\n   *\n   * @name empty\n   * @api public\n   */\n\n  Assertion.addProperty('empty', function () {\n    var obj = flag(this, 'object')\n      , expected = obj;\n\n    if (Array.isArray(obj) || 'string' === typeof object) {\n      expected = obj.length;\n    } else if (typeof obj === 'object') {\n      expected = Object.keys(obj).length;\n    }\n\n    this.assert(\n        !expected\n      , 'expected #{this} to be empty'\n      , 'expected #{this} not to be empty'\n    );\n  });\n\n  /**\n   * ### .arguments\n   *\n   * Asserts that the target is an arguments object.\n   *\n   *     function test () {\n   *       expect(arguments).to.be.arguments;\n   *     }\n   *\n   * @name arguments\n   * @alias Arguments\n   * @api public\n   */\n\n  function checkArguments () {\n    var obj = flag(this, 'object')\n      , type = Object.prototype.toString.call(obj);\n    this.assert(\n        '[object Arguments]' === type\n      , 'expected #{this} to be arguments but got ' + type\n      , 'expected #{this} to not be arguments'\n    );\n  }\n\n  Assertion.addProperty('arguments', checkArguments);\n  Assertion.addProperty('Arguments', checkArguments);\n\n  /**\n   * ### .equal(value)\n   *\n   * Asserts that the target is strictly equal (`===`) to `value`.\n   * Alternately, if the `deep` flag is set, asserts that\n   * the target is deeply equal to `value`.\n   *\n   *     expect('hello').to.equal('hello');\n   *     expect(42).to.equal(42);\n   *     expect(1).to.not.equal(true);\n   *     expect({ foo: 'bar' }).to.not.equal({ foo: 'bar' });\n   *     expect({ foo: 'bar' }).to.deep.equal({ foo: 'bar' });\n   *\n   * @name equal\n   * @alias equals\n   * @alias eq\n   * @alias deep.equal\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertEqual (val, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'deep')) {\n      return this.eql(val);\n    } else {\n      this.assert(\n          val === obj\n        , 'expected #{this} to equal #{exp}'\n        , 'expected #{this} to not equal #{exp}'\n        , val\n        , this._obj\n        , true\n      );\n    }\n  }\n\n  Assertion.addMethod('equal', assertEqual);\n  Assertion.addMethod('equals', assertEqual);\n  Assertion.addMethod('eq', assertEqual);\n\n  /**\n   * ### .eql(value)\n   *\n   * Asserts that the target is deeply equal to `value`.\n   *\n   *     expect({ foo: 'bar' }).to.eql({ foo: 'bar' });\n   *     expect([ 1, 2, 3 ]).to.eql([ 1, 2, 3 ]);\n   *\n   * @name eql\n   * @alias eqls\n   * @param {Mixed} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertEql(obj, msg) {\n    if (msg) flag(this, 'message', msg);\n    this.assert(\n        _.eql(obj, flag(this, 'object'))\n      , 'expected #{this} to deeply equal #{exp}'\n      , 'expected #{this} to not deeply equal #{exp}'\n      , obj\n      , this._obj\n      , true\n    );\n  }\n\n  Assertion.addMethod('eql', assertEql);\n  Assertion.addMethod('eqls', assertEql);\n\n  /**\n   * ### .above(value)\n   *\n   * Asserts that the target is greater than `value`.\n   *\n   *     expect(10).to.be.above(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *\n   * @name above\n   * @alias gt\n   * @alias greaterThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertAbove (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len > n\n        , 'expected #{this} to have a length above #{exp} but got #{act}'\n        , 'expected #{this} to not have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj > n\n        , 'expected #{this} to be above ' + n\n        , 'expected #{this} to be at most ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('above', assertAbove);\n  Assertion.addMethod('gt', assertAbove);\n  Assertion.addMethod('greaterThan', assertAbove);\n\n  /**\n   * ### .least(value)\n   *\n   * Asserts that the target is greater than or equal to `value`.\n   *\n   *     expect(10).to.be.at.least(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a minimum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.least(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.least(3);\n   *\n   * @name least\n   * @alias gte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertLeast (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= n\n        , 'expected #{this} to have a length at least #{exp} but got #{act}'\n        , 'expected #{this} to have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj >= n\n        , 'expected #{this} to be at least ' + n\n        , 'expected #{this} to be below ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('least', assertLeast);\n  Assertion.addMethod('gte', assertLeast);\n\n  /**\n   * ### .below(value)\n   *\n   * Asserts that the target is less than `value`.\n   *\n   *     expect(5).to.be.below(10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *\n   * @name below\n   * @alias lt\n   * @alias lessThan\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertBelow (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len < n\n        , 'expected #{this} to have a length below #{exp} but got #{act}'\n        , 'expected #{this} to not have a length below #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj < n\n        , 'expected #{this} to be below ' + n\n        , 'expected #{this} to be at least ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('below', assertBelow);\n  Assertion.addMethod('lt', assertBelow);\n  Assertion.addMethod('lessThan', assertBelow);\n\n  /**\n   * ### .most(value)\n   *\n   * Asserts that the target is less than or equal to `value`.\n   *\n   *     expect(5).to.be.at.most(5);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a maximum length. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.of.at.most(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.of.at.most(3);\n   *\n   * @name most\n   * @alias lte\n   * @param {Number} value\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertMost (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len <= n\n        , 'expected #{this} to have a length at most #{exp} but got #{act}'\n        , 'expected #{this} to have a length above #{exp}'\n        , n\n        , len\n      );\n    } else {\n      this.assert(\n          obj <= n\n        , 'expected #{this} to be at most ' + n\n        , 'expected #{this} to be above ' + n\n      );\n    }\n  }\n\n  Assertion.addMethod('most', assertMost);\n  Assertion.addMethod('lte', assertMost);\n\n  /**\n   * ### .within(start, finish)\n   *\n   * Asserts that the target is within a range.\n   *\n   *     expect(7).to.be.within(5,10);\n   *\n   * Can also be used in conjunction with `length` to\n   * assert a length range. The benefit being a\n   * more informative error message than if the length\n   * was supplied directly.\n   *\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * @name within\n   * @param {Number} start lowerbound inclusive\n   * @param {Number} finish upperbound inclusive\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  Assertion.addMethod('within', function (start, finish, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , range = start + '..' + finish;\n    if (flag(this, 'doLength')) {\n      new Assertion(obj, msg).to.have.property('length');\n      var len = obj.length;\n      this.assert(\n          len >= start && len <= finish\n        , 'expected #{this} to have a length within ' + range\n        , 'expected #{this} to not have a length within ' + range\n      );\n    } else {\n      this.assert(\n          obj >= start && obj <= finish\n        , 'expected #{this} to be within ' + range\n        , 'expected #{this} to not be within ' + range\n      );\n    }\n  });\n\n  /**\n   * ### .instanceof(constructor)\n   *\n   * Asserts that the target is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , Chai = new Tea('chai');\n   *\n   *     expect(Chai).to.be.an.instanceof(Tea);\n   *     expect([ 1, 2, 3 ]).to.be.instanceof(Array);\n   *\n   * @name instanceof\n   * @param {Constructor} constructor\n   * @param {String} message _optional_\n   * @alias instanceOf\n   * @api public\n   */\n\n  function assertInstanceOf (constructor, msg) {\n    if (msg) flag(this, 'message', msg);\n    var name = _.getName(constructor);\n    this.assert(\n        flag(this, 'object') instanceof constructor\n      , 'expected #{this} to be an instance of ' + name\n      , 'expected #{this} to not be an instance of ' + name\n    );\n  };\n\n  Assertion.addMethod('instanceof', assertInstanceOf);\n  Assertion.addMethod('instanceOf', assertInstanceOf);\n\n  /**\n   * ### .property(name, [value])\n   *\n   * Asserts that the target has a property `name`, optionally asserting that\n   * the value of that property is strictly equal to  `value`.\n   * If the `deep` flag is set, you can use dot- and bracket-notation for deep\n   * references into objects and arrays.\n   *\n   *     // simple referencing\n   *     var obj = { foo: 'bar' };\n   *     expect(obj).to.have.property('foo');\n   *     expect(obj).to.have.property('foo', 'bar');\n   *\n   *     // deep referencing\n   *     var deepObj = {\n   *         green: { tea: 'matcha' }\n   *       , teas: [ 'chai', 'matcha', { tea: 'konacha' } ]\n   *     };\n   *\n   *     expect(deepObj).to.have.deep.property('green.tea', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[1]', 'matcha');\n   *     expect(deepObj).to.have.deep.property('teas[2].tea', 'konacha');\n   *\n   * You can also use an array as the starting point of a `deep.property`\n   * assertion, or traverse nested arrays.\n   *\n   *     var arr = [\n   *         [ 'chai', 'matcha', 'konacha' ]\n   *       , [ { tea: 'chai' }\n   *         , { tea: 'matcha' }\n   *         , { tea: 'konacha' } ]\n   *     ];\n   *\n   *     expect(arr).to.have.deep.property('[0][1]', 'matcha');\n   *     expect(arr).to.have.deep.property('[1][2].tea', 'konacha');\n   *\n   * Furthermore, `property` changes the subject of the assertion\n   * to be the value of that property from the original object. This\n   * permits for further chainable assertions on that property.\n   *\n   *     expect(obj).to.have.property('foo')\n   *       .that.is.a('string');\n   *     expect(deepObj).to.have.property('green')\n   *       .that.is.an('object')\n   *       .that.deep.equals({ tea: 'matcha' });\n   *     expect(deepObj).to.have.property('teas')\n   *       .that.is.an('array')\n   *       .with.deep.property('[2]')\n   *         .that.deep.equals({ tea: 'konacha' });\n   *\n   * Note that dots and bracket in `name` must be backslash-escaped when\n   * the `deep` flag is set, while they must NOT be escaped when the `deep`\n   * flag is not set.\n   *\n   *     // simple referencing\n   *     var css = { '.link[target]': 42 };\n   *     expect(css).to.have.property('.link[target]', 42);\n   *\n   *     // deep referencing\n   *     var deepCss = { '.link': { '[target]': 42 }};\n   *     expect(deepCss).to.have.deep.property('\\\\.link.\\\\[target\\\\]', 42);\n   *\n   * @name property\n   * @alias deep.property\n   * @param {String} name\n   * @param {Mixed} value (optional)\n   * @param {String} message _optional_\n   * @returns value of property for chaining\n   * @api public\n   */\n\n  Assertion.addMethod('property', function (name, val, msg) {\n    if (msg) flag(this, 'message', msg);\n\n    var isDeep = !!flag(this, 'deep')\n      , descriptor = isDeep ? 'deep property ' : 'property '\n      , negate = flag(this, 'negate')\n      , obj = flag(this, 'object')\n      , pathInfo = isDeep ? _.getPathInfo(name, obj) : null\n      , hasProperty = isDeep\n        ? pathInfo.exists\n        : _.hasProperty(name, obj)\n      , value = isDeep\n        ? pathInfo.value\n        : obj[name];\n\n    if (negate && arguments.length > 1) {\n      if (undefined === value) {\n        msg = (msg != null) ? msg + ': ' : '';\n        throw new Error(msg + _.inspect(obj) + ' has no ' + descriptor + _.inspect(name));\n      }\n    } else {\n      this.assert(\n          hasProperty\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name)\n        , 'expected #{this} to not have ' + descriptor + _.inspect(name));\n    }\n\n    if (arguments.length > 1) {\n      this.assert(\n          val === value\n        , 'expected #{this} to have a ' + descriptor + _.inspect(name) + ' of #{exp}, but got #{act}'\n        , 'expected #{this} to not have a ' + descriptor + _.inspect(name) + ' of #{act}'\n        , val\n        , value\n      );\n    }\n\n    flag(this, 'object', value);\n  });\n\n\n  /**\n   * ### .ownProperty(name)\n   *\n   * Asserts that the target has an own property `name`.\n   *\n   *     expect('test').to.have.ownProperty('length');\n   *\n   * @name ownProperty\n   * @alias haveOwnProperty\n   * @param {String} name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertOwnProperty (name, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        obj.hasOwnProperty(name)\n      , 'expected #{this} to have own property ' + _.inspect(name)\n      , 'expected #{this} to not have own property ' + _.inspect(name)\n    );\n  }\n\n  Assertion.addMethod('ownProperty', assertOwnProperty);\n  Assertion.addMethod('haveOwnProperty', assertOwnProperty);\n\n  /**\n   * ### .ownPropertyDescriptor(name[, descriptor[, message]])\n   *\n   * Asserts that the target has an own property descriptor `name`, that optionally matches `descriptor`.\n   *\n   *     expect('test').to.have.ownPropertyDescriptor('length');\n   *     expect('test').to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 4 });\n   *     expect('test').not.to.have.ownPropertyDescriptor('length', { enumerable: false, configurable: false, writable: false, value: 3 });\n   *     expect('test').ownPropertyDescriptor('length').to.have.property('enumerable', false);\n   *     expect('test').ownPropertyDescriptor('length').to.have.keys('value');\n   *\n   * @name ownPropertyDescriptor\n   * @alias haveOwnPropertyDescriptor\n   * @param {String} name\n   * @param {Object} descriptor _optional_\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertOwnPropertyDescriptor (name, descriptor, msg) {\n    if (typeof descriptor === 'string') {\n      msg = descriptor;\n      descriptor = null;\n    }\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var actualDescriptor = Object.getOwnPropertyDescriptor(Object(obj), name);\n    if (actualDescriptor && descriptor) {\n      this.assert(\n          _.eql(descriptor, actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to match ' + _.inspect(descriptor) + ', got ' + _.inspect(actualDescriptor)\n        , 'expected the own property descriptor for ' + _.inspect(name) + ' on #{this} to not match ' + _.inspect(descriptor)\n        , descriptor\n        , actualDescriptor\n        , true\n      );\n    } else {\n      this.assert(\n          actualDescriptor\n        , 'expected #{this} to have an own property descriptor for ' + _.inspect(name)\n        , 'expected #{this} to not have an own property descriptor for ' + _.inspect(name)\n      );\n    }\n    flag(this, 'object', actualDescriptor);\n  }\n\n  Assertion.addMethod('ownPropertyDescriptor', assertOwnPropertyDescriptor);\n  Assertion.addMethod('haveOwnPropertyDescriptor', assertOwnPropertyDescriptor);\n\n  /**\n   * ### .length\n   *\n   * Sets the `doLength` flag later used as a chain precursor to a value\n   * comparison for the `length` property.\n   *\n   *     expect('foo').to.have.length.above(2);\n   *     expect([ 1, 2, 3 ]).to.have.length.above(2);\n   *     expect('foo').to.have.length.below(4);\n   *     expect([ 1, 2, 3 ]).to.have.length.below(4);\n   *     expect('foo').to.have.length.within(2,4);\n   *     expect([ 1, 2, 3 ]).to.have.length.within(2,4);\n   *\n   * *Deprecation notice:* Using `length` as an assertion will be deprecated\n   * in version 2.4.0 and removed in 3.0.0. Code using the old style of\n   * asserting for `length` property value using `length(value)` should be\n   * switched to use `lengthOf(value)` instead.\n   *\n   * @name length\n   * @api public\n   */\n\n  /**\n   * ### .lengthOf(value[, message])\n   *\n   * Asserts that the target's `length` property has\n   * the expected value.\n   *\n   *     expect([ 1, 2, 3]).to.have.lengthOf(3);\n   *     expect('foobar').to.have.lengthOf(6);\n   *\n   * @name lengthOf\n   * @param {Number} length\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertLengthChain () {\n    flag(this, 'doLength', true);\n  }\n\n  function assertLength (n, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).to.have.property('length');\n    var len = obj.length;\n\n    this.assert(\n        len == n\n      , 'expected #{this} to have a length of #{exp} but got #{act}'\n      , 'expected #{this} to not have a length of #{act}'\n      , n\n      , len\n    );\n  }\n\n  Assertion.addChainableMethod('length', assertLength, assertLengthChain);\n  Assertion.addMethod('lengthOf', assertLength);\n\n  /**\n   * ### .match(regexp)\n   *\n   * Asserts that the target matches a regular expression.\n   *\n   *     expect('foobar').to.match(/^foo/);\n   *\n   * @name match\n   * @alias matches\n   * @param {RegExp} RegularExpression\n   * @param {String} message _optional_\n   * @api public\n   */\n  function assertMatch(re, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    this.assert(\n        re.exec(obj)\n      , 'expected #{this} to match ' + re\n      , 'expected #{this} not to match ' + re\n    );\n  }\n\n  Assertion.addMethod('match', assertMatch);\n  Assertion.addMethod('matches', assertMatch);\n\n  /**\n   * ### .string(string)\n   *\n   * Asserts that the string target contains another string.\n   *\n   *     expect('foobar').to.have.string('bar');\n   *\n   * @name string\n   * @param {String} string\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  Assertion.addMethod('string', function (str, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('string');\n\n    this.assert(\n        ~obj.indexOf(str)\n      , 'expected #{this} to contain ' + _.inspect(str)\n      , 'expected #{this} to not contain ' + _.inspect(str)\n    );\n  });\n\n\n  /**\n   * ### .keys(key1, [key2], [...])\n   *\n   * Asserts that the target contains any or all of the passed-in keys.\n   * Use in combination with `any`, `all`, `contains`, or `have` will affect\n   * what will pass.\n   *\n   * When used in conjunction with `any`, at least one key that is passed\n   * in must exist in the target object. This is regardless whether or not\n   * the `have` or `contain` qualifiers are used. Note, either `any` or `all`\n   * should be used in the assertion. If neither are used, the assertion is\n   * defaulted to `all`.\n   *\n   * When both `all` and `contain` are used, the target object must have at\n   * least all of the passed-in keys but may have more keys not listed.\n   *\n   * When both `all` and `have` are used, the target object must both contain\n   * all of the passed-in keys AND the number of keys in the target object must\n   * match the number of keys passed in (in other words, a target object must\n   * have all and only all of the passed-in keys).\n   *\n   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo', 'baz');\n   *     expect({ foo: 1, bar: 2 }).to.have.any.keys('foo');\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys('bar', 'baz');\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys(['foo']);\n   *     expect({ foo: 1, bar: 2 }).to.contain.any.keys({'foo': 6});\n   *     expect({ foo: 1, bar: 2 }).to.have.all.keys(['bar', 'foo']);\n   *     expect({ foo: 1, bar: 2 }).to.have.all.keys({'bar': 6, 'foo': 7});\n   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys(['bar', 'foo']);\n   *     expect({ foo: 1, bar: 2, baz: 3 }).to.contain.all.keys({'bar': 6});\n   *\n   *\n   * @name keys\n   * @alias key\n   * @param {String...|Array|Object} keys\n   * @api public\n   */\n\n  function assertKeys (keys) {\n    var obj = flag(this, 'object')\n      , str\n      , ok = true\n      , mixedArgsMsg = 'keys must be given single argument of Array|Object|String, or multiple String arguments';\n\n    switch (_.type(keys)) {\n      case \"array\":\n        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n        break;\n      case \"object\":\n        if (arguments.length > 1) throw (new Error(mixedArgsMsg));\n        keys = Object.keys(keys);\n        break;\n      default:\n        keys = Array.prototype.slice.call(arguments);\n    }\n\n    if (!keys.length) throw new Error('keys required');\n\n    var actual = Object.keys(obj)\n      , expected = keys\n      , len = keys.length\n      , any = flag(this, 'any')\n      , all = flag(this, 'all');\n\n    if (!any && !all) {\n      all = true;\n    }\n\n    // Has any\n    if (any) {\n      var intersection = expected.filter(function(key) {\n        return ~actual.indexOf(key);\n      });\n      ok = intersection.length > 0;\n    }\n\n    // Has all\n    if (all) {\n      ok = keys.every(function(key){\n        return ~actual.indexOf(key);\n      });\n      if (!flag(this, 'negate') && !flag(this, 'contains')) {\n        ok = ok && keys.length == actual.length;\n      }\n    }\n\n    // Key string\n    if (len > 1) {\n      keys = keys.map(function(key){\n        return _.inspect(key);\n      });\n      var last = keys.pop();\n      if (all) {\n        str = keys.join(', ') + ', and ' + last;\n      }\n      if (any) {\n        str = keys.join(', ') + ', or ' + last;\n      }\n    } else {\n      str = _.inspect(keys[0]);\n    }\n\n    // Form\n    str = (len > 1 ? 'keys ' : 'key ') + str;\n\n    // Have / include\n    str = (flag(this, 'contains') ? 'contain ' : 'have ') + str;\n\n    // Assertion\n    this.assert(\n        ok\n      , 'expected #{this} to ' + str\n      , 'expected #{this} to not ' + str\n      , expected.slice(0).sort()\n      , actual.sort()\n      , true\n    );\n  }\n\n  Assertion.addMethod('keys', assertKeys);\n  Assertion.addMethod('key', assertKeys);\n\n  /**\n   * ### .throw(constructor)\n   *\n   * Asserts that the function target will throw a specific error, or specific type of error\n   * (as determined using `instanceof`), optionally with a RegExp or string inclusion test\n   * for the error's message.\n   *\n   *     var err = new ReferenceError('This is a bad function.');\n   *     var fn = function () { throw err; }\n   *     expect(fn).to.throw(ReferenceError);\n   *     expect(fn).to.throw(Error);\n   *     expect(fn).to.throw(/bad function/);\n   *     expect(fn).to.not.throw('good function');\n   *     expect(fn).to.throw(ReferenceError, /bad function/);\n   *     expect(fn).to.throw(err);\n   *     expect(fn).to.not.throw(new RangeError('Out of range.'));\n   *\n   * Please note that when a throw expectation is negated, it will check each\n   * parameter independently, starting with error constructor type. The appropriate way\n   * to check for the existence of a type of error but for a message that does not match\n   * is to use `and`.\n   *\n   *     expect(fn).to.throw(ReferenceError)\n   *        .and.not.throw(/good function/);\n   *\n   * @name throw\n   * @alias throws\n   * @alias Throw\n   * @param {ErrorConstructor} constructor\n   * @param {String|RegExp} expected error message\n   * @param {String} message _optional_\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @returns error for chaining (null if no error)\n   * @api public\n   */\n\n  function assertThrows (constructor, errMsg, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    new Assertion(obj, msg).is.a('function');\n\n    var thrown = false\n      , desiredError = null\n      , name = null\n      , thrownError = null;\n\n    if (arguments.length === 0) {\n      errMsg = null;\n      constructor = null;\n    } else if (constructor && (constructor instanceof RegExp || 'string' === typeof constructor)) {\n      errMsg = constructor;\n      constructor = null;\n    } else if (constructor && constructor instanceof Error) {\n      desiredError = constructor;\n      constructor = null;\n      errMsg = null;\n    } else if (typeof constructor === 'function') {\n      name = constructor.prototype.name;\n      if (!name || (name === 'Error' && constructor !== Error)) {\n        name = constructor.name || (new constructor()).name;\n      }\n    } else {\n      constructor = null;\n    }\n\n    try {\n      obj();\n    } catch (err) {\n      // first, check desired error\n      if (desiredError) {\n        this.assert(\n            err === desiredError\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp}'\n          , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n          , (err instanceof Error ? err.toString() : err)\n        );\n\n        flag(this, 'object', err);\n        return this;\n      }\n\n      // next, check constructor\n      if (constructor) {\n        this.assert(\n            err instanceof constructor\n          , 'expected #{this} to throw #{exp} but #{act} was thrown'\n          , 'expected #{this} to not throw #{exp} but #{act} was thrown'\n          , name\n          , (err instanceof Error ? err.toString() : err)\n        );\n\n        if (!errMsg) {\n          flag(this, 'object', err);\n          return this;\n        }\n      }\n\n      // next, check message\n      var message = 'error' === _.type(err) && \"message\" in err\n        ? err.message\n        : '' + err;\n\n      if ((message != null) && errMsg && errMsg instanceof RegExp) {\n        this.assert(\n            errMsg.exec(message)\n          , 'expected #{this} to throw error matching #{exp} but got #{act}'\n          , 'expected #{this} to throw error not matching #{exp}'\n          , errMsg\n          , message\n        );\n\n        flag(this, 'object', err);\n        return this;\n      } else if ((message != null) && errMsg && 'string' === typeof errMsg) {\n        this.assert(\n            ~message.indexOf(errMsg)\n          , 'expected #{this} to throw error including #{exp} but got #{act}'\n          , 'expected #{this} to throw error not including #{act}'\n          , errMsg\n          , message\n        );\n\n        flag(this, 'object', err);\n        return this;\n      } else {\n        thrown = true;\n        thrownError = err;\n      }\n    }\n\n    var actuallyGot = ''\n      , expectedThrown = name !== null\n        ? name\n        : desiredError\n          ? '#{exp}' //_.inspect(desiredError)\n          : 'an error';\n\n    if (thrown) {\n      actuallyGot = ' but #{act} was thrown'\n    }\n\n    this.assert(\n        thrown === true\n      , 'expected #{this} to throw ' + expectedThrown + actuallyGot\n      , 'expected #{this} to not throw ' + expectedThrown + actuallyGot\n      , (desiredError instanceof Error ? desiredError.toString() : desiredError)\n      , (thrownError instanceof Error ? thrownError.toString() : thrownError)\n    );\n\n    flag(this, 'object', thrownError);\n  };\n\n  Assertion.addMethod('throw', assertThrows);\n  Assertion.addMethod('throws', assertThrows);\n  Assertion.addMethod('Throw', assertThrows);\n\n  /**\n   * ### .respondTo(method)\n   *\n   * Asserts that the object or class target will respond to a method.\n   *\n   *     Klass.prototype.bar = function(){};\n   *     expect(Klass).to.respondTo('bar');\n   *     expect(obj).to.respondTo('bar');\n   *\n   * To check if a constructor will respond to a static function,\n   * set the `itself` flag.\n   *\n   *     Klass.baz = function(){};\n   *     expect(Klass).itself.to.respondTo('baz');\n   *\n   * @name respondTo\n   * @alias respondsTo\n   * @param {String} method\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function respondTo (method, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object')\n      , itself = flag(this, 'itself')\n      , context = ('function' === _.type(obj) && !itself)\n        ? obj.prototype[method]\n        : obj[method];\n\n    this.assert(\n        'function' === typeof context\n      , 'expected #{this} to respond to ' + _.inspect(method)\n      , 'expected #{this} to not respond to ' + _.inspect(method)\n    );\n  }\n\n  Assertion.addMethod('respondTo', respondTo);\n  Assertion.addMethod('respondsTo', respondTo);\n\n  /**\n   * ### .itself\n   *\n   * Sets the `itself` flag, later used by the `respondTo` assertion.\n   *\n   *     function Foo() {}\n   *     Foo.bar = function() {}\n   *     Foo.prototype.baz = function() {}\n   *\n   *     expect(Foo).itself.to.respondTo('bar');\n   *     expect(Foo).itself.not.to.respondTo('baz');\n   *\n   * @name itself\n   * @api public\n   */\n\n  Assertion.addProperty('itself', function () {\n    flag(this, 'itself', true);\n  });\n\n  /**\n   * ### .satisfy(method)\n   *\n   * Asserts that the target passes a given truth test.\n   *\n   *     expect(1).to.satisfy(function(num) { return num > 0; });\n   *\n   * @name satisfy\n   * @alias satisfies\n   * @param {Function} matcher\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function satisfy (matcher, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n    var result = matcher(obj);\n    this.assert(\n        result\n      , 'expected #{this} to satisfy ' + _.objDisplay(matcher)\n      , 'expected #{this} to not satisfy' + _.objDisplay(matcher)\n      , this.negate ? false : true\n      , result\n    );\n  }\n\n  Assertion.addMethod('satisfy', satisfy);\n  Assertion.addMethod('satisfies', satisfy);\n\n  /**\n   * ### .closeTo(expected, delta)\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     expect(1.5).to.be.closeTo(1, 0.5);\n   *\n   * @name closeTo\n   * @alias approximately\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function closeTo(expected, delta, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n\n    new Assertion(obj, msg).is.a('number');\n    if (_.type(expected) !== 'number' || _.type(delta) !== 'number') {\n      throw new Error('the arguments to closeTo or approximately must be numbers');\n    }\n\n    this.assert(\n        Math.abs(obj - expected) <= delta\n      , 'expected #{this} to be close to ' + expected + ' +/- ' + delta\n      , 'expected #{this} not to be close to ' + expected + ' +/- ' + delta\n    );\n  }\n\n  Assertion.addMethod('closeTo', closeTo);\n  Assertion.addMethod('approximately', closeTo);\n\n  function isSubsetOf(subset, superset, cmp) {\n    return subset.every(function(elem) {\n      if (!cmp) return superset.indexOf(elem) !== -1;\n\n      return superset.some(function(elem2) {\n        return cmp(elem, elem2);\n      });\n    })\n  }\n\n  /**\n   * ### .members(set)\n   *\n   * Asserts that the target is a superset of `set`,\n   * or that the target and `set` have the same strictly-equal (===) members.\n   * Alternately, if the `deep` flag is set, set members are compared for deep\n   * equality.\n   *\n   *     expect([1, 2, 3]).to.include.members([3, 2]);\n   *     expect([1, 2, 3]).to.not.include.members([3, 2, 8]);\n   *\n   *     expect([4, 2]).to.have.members([2, 4]);\n   *     expect([5, 2]).to.not.have.members([5, 2, 1]);\n   *\n   *     expect([{ id: 1 }]).to.deep.include.members([{ id: 1 }]);\n   *\n   * @name members\n   * @param {Array} set\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  Assertion.addMethod('members', function (subset, msg) {\n    if (msg) flag(this, 'message', msg);\n    var obj = flag(this, 'object');\n\n    new Assertion(obj).to.be.an('array');\n    new Assertion(subset).to.be.an('array');\n\n    var cmp = flag(this, 'deep') ? _.eql : undefined;\n\n    if (flag(this, 'contains')) {\n      return this.assert(\n          isSubsetOf(subset, obj, cmp)\n        , 'expected #{this} to be a superset of #{act}'\n        , 'expected #{this} to not be a superset of #{act}'\n        , obj\n        , subset\n      );\n    }\n\n    this.assert(\n        isSubsetOf(obj, subset, cmp) && isSubsetOf(subset, obj, cmp)\n        , 'expected #{this} to have the same members as #{act}'\n        , 'expected #{this} to not have the same members as #{act}'\n        , obj\n        , subset\n    );\n  });\n\n  /**\n   * ### .oneOf(list)\n   *\n   * Assert that a value appears somewhere in the top level of array `list`.\n   *\n   *     expect('a').to.be.oneOf(['a', 'b', 'c']);\n   *     expect(9).to.not.be.oneOf(['z']);\n   *     expect([3]).to.not.be.oneOf([1, 2, [3]]);\n   *\n   *     var three = [3];\n   *     // for object-types, contents are not compared\n   *     expect(three).to.not.be.oneOf([1, 2, [3]]);\n   *     // comparing references works\n   *     expect(three).to.be.oneOf([1, 2, three]);\n   *\n   * @name oneOf\n   * @param {Array<*>} list\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function oneOf (list, msg) {\n    if (msg) flag(this, 'message', msg);\n    var expected = flag(this, 'object');\n    new Assertion(list).to.be.an('array');\n\n    this.assert(\n        list.indexOf(expected) > -1\n      , 'expected #{this} to be one of #{exp}'\n      , 'expected #{this} to not be one of #{exp}'\n      , list\n      , expected\n    );\n  }\n\n  Assertion.addMethod('oneOf', oneOf);\n\n\n  /**\n   * ### .change(function)\n   *\n   * Asserts that a function changes an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val += 3 };\n   *     var noChangeFn = function() { return 'foo' + 'bar'; }\n   *     expect(fn).to.change(obj, 'val');\n   *     expect(noChangFn).to.not.change(obj, 'val')\n   *\n   * @name change\n   * @alias changes\n   * @alias Change\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertChanges (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      initial !== object[prop]\n      , 'expected .' + prop + ' to change'\n      , 'expected .' + prop + ' to not change'\n    );\n  }\n\n  Assertion.addChainableMethod('change', assertChanges);\n  Assertion.addChainableMethod('changes', assertChanges);\n\n  /**\n   * ### .increase(function)\n   *\n   * Asserts that a function increases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     expect(fn).to.increase(obj, 'val');\n   *\n   * @name increase\n   * @alias increases\n   * @alias Increase\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertIncreases (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      object[prop] - initial > 0\n      , 'expected .' + prop + ' to increase'\n      , 'expected .' + prop + ' to not increase'\n    );\n  }\n\n  Assertion.addChainableMethod('increase', assertIncreases);\n  Assertion.addChainableMethod('increases', assertIncreases);\n\n  /**\n   * ### .decrease(function)\n   *\n   * Asserts that a function decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     expect(fn).to.decrease(obj, 'val');\n   *\n   * @name decrease\n   * @alias decreases\n   * @alias Decrease\n   * @param {String} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  function assertDecreases (object, prop, msg) {\n    if (msg) flag(this, 'message', msg);\n    var fn = flag(this, 'object');\n    new Assertion(object, msg).to.have.property(prop);\n    new Assertion(fn).is.a('function');\n\n    var initial = object[prop];\n    fn();\n\n    this.assert(\n      object[prop] - initial < 0\n      , 'expected .' + prop + ' to decrease'\n      , 'expected .' + prop + ' to not decrease'\n    );\n  }\n\n  Assertion.addChainableMethod('decrease', assertDecreases);\n  Assertion.addChainableMethod('decreases', assertDecreases);\n\n  /**\n   * ### .extensible\n   *\n   * Asserts that the target is extensible (can have new properties added to\n   * it).\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect({}).to.be.extensible;\n   *     expect(nonExtensibleObject).to.not.be.extensible;\n   *     expect(sealedObject).to.not.be.extensible;\n   *     expect(frozenObject).to.not.be.extensible;\n   *\n   * @name extensible\n   * @api public\n   */\n\n  Assertion.addProperty('extensible', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a non-extensible ordinary object, simply return false.\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isExtensible\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isExtensible;\n\n    try {\n      isExtensible = Object.isExtensible(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isExtensible = false;\n      else throw err;\n    }\n\n    this.assert(\n      isExtensible\n      , 'expected #{this} to be extensible'\n      , 'expected #{this} to not be extensible'\n    );\n  });\n\n  /**\n   * ### .sealed\n   *\n   * Asserts that the target is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(sealedObject).to.be.sealed;\n   *     expect(frozenObject).to.be.sealed;\n   *     expect({}).to.not.be.sealed;\n   *\n   * @name sealed\n   * @api public\n   */\n\n  Assertion.addProperty('sealed', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a sealed ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isSealed\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isSealed;\n\n    try {\n      isSealed = Object.isSealed(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isSealed = true;\n      else throw err;\n    }\n\n    this.assert(\n      isSealed\n      , 'expected #{this} to be sealed'\n      , 'expected #{this} to not be sealed'\n    );\n  });\n\n  /**\n   * ### .frozen\n   *\n   * Asserts that the target is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *\n   *     expect(frozenObject).to.be.frozen;\n   *     expect({}).to.not.be.frozen;\n   *\n   * @name frozen\n   * @api public\n   */\n\n  Assertion.addProperty('frozen', function() {\n    var obj = flag(this, 'object');\n\n    // In ES5, if the argument to this method is not an object (a primitive), then it will cause a TypeError.\n    // In ES6, a non-object argument will be treated as if it was a frozen ordinary object, simply return true.\n    // See https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/isFrozen\n    // The following provides ES6 behavior when a TypeError is thrown under ES5.\n\n    var isFrozen;\n\n    try {\n      isFrozen = Object.isFrozen(obj);\n    } catch (err) {\n      if (err instanceof TypeError) isFrozen = true;\n      else throw err;\n    }\n\n    this.assert(\n      isFrozen\n      , 'expected #{this} to be frozen'\n      , 'expected #{this} to not be frozen'\n    );\n  });\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/core/assertions.js\n ** module id = 59\n ** module chunks = 1\n **/","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  chai.expect = function (val, message) {\n    return new chai.Assertion(val, message);\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @api public\n   */\n\n  chai.expect.fail = function (actual, expected, message, operator) {\n    message = message || 'expect.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, chai.expect.fail);\n  };\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/interface/expect.js\n ** module id = 60\n ** module chunks = 1\n **/","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\nmodule.exports = function (chai, util) {\n  var Assertion = chai.Assertion;\n\n  function loadShould () {\n    // explicitly define this method as function as to have it's name to include as `ssfi`\n    function shouldGetter() {\n      if (this instanceof String || this instanceof Number || this instanceof Boolean ) {\n        return new Assertion(this.valueOf(), null, shouldGetter);\n      }\n      return new Assertion(this, null, shouldGetter);\n    }\n    function shouldSetter(value) {\n      // See https://github.com/chaijs/chai/issues/86: this makes\n      // `whatever.should = someValue` actually set `someValue`, which is\n      // especially useful for `global.should = require('chai').should()`.\n      //\n      // Note that we have to use [[DefineProperty]] instead of [[Put]]\n      // since otherwise we would trigger this very setter!\n      Object.defineProperty(this, 'should', {\n        value: value,\n        enumerable: true,\n        configurable: true,\n        writable: true\n      });\n    }\n    // modify Object.prototype to have `should`\n    Object.defineProperty(Object.prototype, 'should', {\n      set: shouldSetter\n      , get: shouldGetter\n      , configurable: true\n    });\n\n    var should = {};\n\n    /**\n     * ### .fail(actual, expected, [message], [operator])\n     *\n     * Throw a failure.\n     *\n     * @name fail\n     * @param {Mixed} actual\n     * @param {Mixed} expected\n     * @param {String} message\n     * @param {String} operator\n     * @api public\n     */\n\n    should.fail = function (actual, expected, message, operator) {\n      message = message || 'should.fail()';\n      throw new chai.AssertionError(message, {\n          actual: actual\n        , expected: expected\n        , operator: operator\n      }, should.fail);\n    };\n\n    should.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.equal(val2);\n    };\n\n    should.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.Throw(errt, errs);\n    };\n\n    should.exist = function (val, msg) {\n      new Assertion(val, msg).to.exist;\n    }\n\n    // negation\n    should.not = {}\n\n    should.not.equal = function (val1, val2, msg) {\n      new Assertion(val1, msg).to.not.equal(val2);\n    };\n\n    should.not.Throw = function (fn, errt, errs, msg) {\n      new Assertion(fn, msg).to.not.Throw(errt, errs);\n    };\n\n    should.not.exist = function (val, msg) {\n      new Assertion(val, msg).to.not.exist;\n    }\n\n    should['throw'] = should['Throw'];\n    should.not['throw'] = should.not['Throw'];\n\n    return should;\n  };\n\n  chai.should = loadShould;\n  chai.Should = loadShould;\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/interface/should.js\n ** module id = 61\n ** module chunks = 1\n **/","/*!\n * chai\n * Copyright(c) 2011-2014 Jake Luer <jake@alogicalparadox.com>\n * MIT Licensed\n */\n\n\nmodule.exports = function (chai, util) {\n\n  /*!\n   * Chai dependencies.\n   */\n\n  var Assertion = chai.Assertion\n    , flag = util.flag;\n\n  /*!\n   * Module export.\n   */\n\n  /**\n   * ### assert(expression, message)\n   *\n   * Write your own test expressions.\n   *\n   *     assert('foo' !== 'bar', 'foo is not bar');\n   *     assert(Array.isArray([]), 'empty arrays are arrays');\n   *\n   * @param {Mixed} expression to test for truthiness\n   * @param {String} message to display on error\n   * @name assert\n   * @api public\n   */\n\n  var assert = chai.assert = function (express, errmsg) {\n    var test = new Assertion(null, null, chai.assert);\n    test.assert(\n        express\n      , errmsg\n      , '[ negation message unavailable ]'\n    );\n  };\n\n  /**\n   * ### .fail(actual, expected, [message], [operator])\n   *\n   * Throw a failure. Node.js `assert` module-compatible.\n   *\n   * @name fail\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @param {String} operator\n   * @api public\n   */\n\n  assert.fail = function (actual, expected, message, operator) {\n    message = message || 'assert.fail()';\n    throw new chai.AssertionError(message, {\n        actual: actual\n      , expected: expected\n      , operator: operator\n    }, assert.fail);\n  };\n\n  /**\n   * ### .isOk(object, [message])\n   *\n   * Asserts that `object` is truthy.\n   *\n   *     assert.isOk('everything', 'everything is ok');\n   *     assert.isOk(false, 'this will fail');\n   *\n   * @name isOk\n   * @alias ok\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isOk = function (val, msg) {\n    new Assertion(val, msg).is.ok;\n  };\n\n  /**\n   * ### .isNotOk(object, [message])\n   *\n   * Asserts that `object` is falsy.\n   *\n   *     assert.isNotOk('everything', 'this will fail');\n   *     assert.isNotOk(false, 'this will pass');\n   *\n   * @name isNotOk\n   * @alias notOk\n   * @param {Mixed} object to test\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotOk = function (val, msg) {\n    new Assertion(val, msg).is.not.ok;\n  };\n\n  /**\n   * ### .equal(actual, expected, [message])\n   *\n   * Asserts non-strict equality (`==`) of `actual` and `expected`.\n   *\n   *     assert.equal(3, '3', '== coerces values to strings');\n   *\n   * @name equal\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.equal = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.equal);\n\n    test.assert(\n        exp == flag(test, 'object')\n      , 'expected #{this} to equal #{exp}'\n      , 'expected #{this} to not equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .notEqual(actual, expected, [message])\n   *\n   * Asserts non-strict inequality (`!=`) of `actual` and `expected`.\n   *\n   *     assert.notEqual(3, 4, 'these numbers are not equal');\n   *\n   * @name notEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notEqual = function (act, exp, msg) {\n    var test = new Assertion(act, msg, assert.notEqual);\n\n    test.assert(\n        exp != flag(test, 'object')\n      , 'expected #{this} to not equal #{exp}'\n      , 'expected #{this} to equal #{act}'\n      , exp\n      , act\n    );\n  };\n\n  /**\n   * ### .strictEqual(actual, expected, [message])\n   *\n   * Asserts strict equality (`===`) of `actual` and `expected`.\n   *\n   *     assert.strictEqual(true, true, 'these booleans are strictly equal');\n   *\n   * @name strictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.strictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.equal(exp);\n  };\n\n  /**\n   * ### .notStrictEqual(actual, expected, [message])\n   *\n   * Asserts strict inequality (`!==`) of `actual` and `expected`.\n   *\n   *     assert.notStrictEqual(3, '3', 'no coercion for strict equality');\n   *\n   * @name notStrictEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notStrictEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.equal(exp);\n  };\n\n  /**\n   * ### .deepEqual(actual, expected, [message])\n   *\n   * Asserts that `actual` is deeply equal to `expected`.\n   *\n   *     assert.deepEqual({ tea: 'green' }, { tea: 'green' });\n   *\n   * @name deepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.eql(exp);\n  };\n\n  /**\n   * ### .notDeepEqual(actual, expected, [message])\n   *\n   * Assert that `actual` is not deeply equal to `expected`.\n   *\n   *     assert.notDeepEqual({ tea: 'green' }, { tea: 'jasmine' });\n   *\n   * @name notDeepEqual\n   * @param {Mixed} actual\n   * @param {Mixed} expected\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepEqual = function (act, exp, msg) {\n    new Assertion(act, msg).to.not.eql(exp);\n  };\n\n   /**\n   * ### .isAbove(valueToCheck, valueToBeAbove, [message])\n   *\n   * Asserts `valueToCheck` is strictly greater than (>) `valueToBeAbove`\n   *\n   *     assert.isAbove(5, 2, '5 is strictly greater than 2');\n   *\n   * @name isAbove\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAbove\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isAbove = function (val, abv, msg) {\n    new Assertion(val, msg).to.be.above(abv);\n  };\n\n   /**\n   * ### .isAtLeast(valueToCheck, valueToBeAtLeast, [message])\n   *\n   * Asserts `valueToCheck` is greater than or equal to (>=) `valueToBeAtLeast`\n   *\n   *     assert.isAtLeast(5, 2, '5 is greater or equal to 2');\n   *     assert.isAtLeast(3, 3, '3 is greater or equal to 3');\n   *\n   * @name isAtLeast\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtLeast\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isAtLeast = function (val, atlst, msg) {\n    new Assertion(val, msg).to.be.least(atlst);\n  };\n\n   /**\n   * ### .isBelow(valueToCheck, valueToBeBelow, [message])\n   *\n   * Asserts `valueToCheck` is strictly less than (<) `valueToBeBelow`\n   *\n   *     assert.isBelow(3, 6, '3 is strictly less than 6');\n   *\n   * @name isBelow\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeBelow\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isBelow = function (val, blw, msg) {\n    new Assertion(val, msg).to.be.below(blw);\n  };\n\n   /**\n   * ### .isAtMost(valueToCheck, valueToBeAtMost, [message])\n   *\n   * Asserts `valueToCheck` is less than or equal to (<=) `valueToBeAtMost`\n   *\n   *     assert.isAtMost(3, 6, '3 is less than or equal to 6');\n   *     assert.isAtMost(4, 4, '4 is less than or equal to 4');\n   *\n   * @name isAtMost\n   * @param {Mixed} valueToCheck\n   * @param {Mixed} valueToBeAtMost\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isAtMost = function (val, atmst, msg) {\n    new Assertion(val, msg).to.be.most(atmst);\n  };\n\n  /**\n   * ### .isTrue(value, [message])\n   *\n   * Asserts that `value` is true.\n   *\n   *     var teaServed = true;\n   *     assert.isTrue(teaServed, 'the tea has been served');\n   *\n   * @name isTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isTrue = function (val, msg) {\n    new Assertion(val, msg).is['true'];\n  };\n\n  /**\n   * ### .isNotTrue(value, [message])\n   *\n   * Asserts that `value` is not true.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotTrue(tea, 'great, time for tea!');\n   *\n   * @name isNotTrue\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotTrue = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(true);\n  };\n\n  /**\n   * ### .isFalse(value, [message])\n   *\n   * Asserts that `value` is false.\n   *\n   *     var teaServed = false;\n   *     assert.isFalse(teaServed, 'no tea yet? hmm...');\n   *\n   * @name isFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isFalse = function (val, msg) {\n    new Assertion(val, msg).is['false'];\n  };\n\n  /**\n   * ### .isNotFalse(value, [message])\n   *\n   * Asserts that `value` is not false.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotFalse(tea, 'great, time for tea!');\n   *\n   * @name isNotFalse\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotFalse = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(false);\n  };\n\n  /**\n   * ### .isNull(value, [message])\n   *\n   * Asserts that `value` is null.\n   *\n   *     assert.isNull(err, 'there was no error');\n   *\n   * @name isNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNull = function (val, msg) {\n    new Assertion(val, msg).to.equal(null);\n  };\n\n  /**\n   * ### .isNotNull(value, [message])\n   *\n   * Asserts that `value` is not null.\n   *\n   *     var tea = 'tasty chai';\n   *     assert.isNotNull(tea, 'great, time for tea!');\n   *\n   * @name isNotNull\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotNull = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(null);\n  };\n\n  /**\n   * ### .isNaN\n   * Asserts that value is NaN\n   *\n   *    assert.isNaN('foo', 'foo is NaN');\n   *\n   * @name isNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNaN = function (val, msg) {\n    new Assertion(val, msg).to.be.NaN;\n  };\n\n  /**\n   * ### .isNotNaN\n   * Asserts that value is not NaN\n   *\n   *    assert.isNotNaN(4, '4 is not NaN');\n   *\n   * @name isNotNaN\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n  assert.isNotNaN = function (val, msg) {\n    new Assertion(val, msg).not.to.be.NaN;\n  };\n\n  /**\n   * ### .isUndefined(value, [message])\n   *\n   * Asserts that `value` is `undefined`.\n   *\n   *     var tea;\n   *     assert.isUndefined(tea, 'no tea defined');\n   *\n   * @name isUndefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isUndefined = function (val, msg) {\n    new Assertion(val, msg).to.equal(undefined);\n  };\n\n  /**\n   * ### .isDefined(value, [message])\n   *\n   * Asserts that `value` is not `undefined`.\n   *\n   *     var tea = 'cup of chai';\n   *     assert.isDefined(tea, 'tea has been defined');\n   *\n   * @name isDefined\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isDefined = function (val, msg) {\n    new Assertion(val, msg).to.not.equal(undefined);\n  };\n\n  /**\n   * ### .isFunction(value, [message])\n   *\n   * Asserts that `value` is a function.\n   *\n   *     function serveTea() { return 'cup of tea'; };\n   *     assert.isFunction(serveTea, 'great, we can have tea now');\n   *\n   * @name isFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isFunction = function (val, msg) {\n    new Assertion(val, msg).to.be.a('function');\n  };\n\n  /**\n   * ### .isNotFunction(value, [message])\n   *\n   * Asserts that `value` is _not_ a function.\n   *\n   *     var serveTea = [ 'heat', 'pour', 'sip' ];\n   *     assert.isNotFunction(serveTea, 'great, we have listed the steps');\n   *\n   * @name isNotFunction\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotFunction = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('function');\n  };\n\n  /**\n   * ### .isObject(value, [message])\n   *\n   * Asserts that `value` is an object (as revealed by\n   * `Object.prototype.toString`).\n   *\n   *     var selection = { name: 'Chai', serve: 'with spices' };\n   *     assert.isObject(selection, 'tea selection is an object');\n   *\n   * @name isObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isObject = function (val, msg) {\n    new Assertion(val, msg).to.be.a('object');\n  };\n\n  /**\n   * ### .isNotObject(value, [message])\n   *\n   * Asserts that `value` is _not_ an object.\n   *\n   *     var selection = 'chai'\n   *     assert.isNotObject(selection, 'tea selection is not an object');\n   *     assert.isNotObject(null, 'null is not an object');\n   *\n   * @name isNotObject\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotObject = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('object');\n  };\n\n  /**\n   * ### .isArray(value, [message])\n   *\n   * Asserts that `value` is an array.\n   *\n   *     var menu = [ 'green', 'chai', 'oolong' ];\n   *     assert.isArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isArray = function (val, msg) {\n    new Assertion(val, msg).to.be.an('array');\n  };\n\n  /**\n   * ### .isNotArray(value, [message])\n   *\n   * Asserts that `value` is _not_ an array.\n   *\n   *     var menu = 'green|chai|oolong';\n   *     assert.isNotArray(menu, 'what kind of tea do we want?');\n   *\n   * @name isNotArray\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotArray = function (val, msg) {\n    new Assertion(val, msg).to.not.be.an('array');\n  };\n\n  /**\n   * ### .isString(value, [message])\n   *\n   * Asserts that `value` is a string.\n   *\n   *     var teaOrder = 'chai';\n   *     assert.isString(teaOrder, 'order placed');\n   *\n   * @name isString\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isString = function (val, msg) {\n    new Assertion(val, msg).to.be.a('string');\n  };\n\n  /**\n   * ### .isNotString(value, [message])\n   *\n   * Asserts that `value` is _not_ a string.\n   *\n   *     var teaOrder = 4;\n   *     assert.isNotString(teaOrder, 'order placed');\n   *\n   * @name isNotString\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotString = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('string');\n  };\n\n  /**\n   * ### .isNumber(value, [message])\n   *\n   * Asserts that `value` is a number.\n   *\n   *     var cups = 2;\n   *     assert.isNumber(cups, 'how many cups');\n   *\n   * @name isNumber\n   * @param {Number} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNumber = function (val, msg) {\n    new Assertion(val, msg).to.be.a('number');\n  };\n\n  /**\n   * ### .isNotNumber(value, [message])\n   *\n   * Asserts that `value` is _not_ a number.\n   *\n   *     var cups = '2 cups please';\n   *     assert.isNotNumber(cups, 'how many cups');\n   *\n   * @name isNotNumber\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotNumber = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('number');\n  };\n\n  /**\n   * ### .isBoolean(value, [message])\n   *\n   * Asserts that `value` is a boolean.\n   *\n   *     var teaReady = true\n   *       , teaServed = false;\n   *\n   *     assert.isBoolean(teaReady, 'is the tea ready');\n   *     assert.isBoolean(teaServed, 'has tea been served');\n   *\n   * @name isBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isBoolean = function (val, msg) {\n    new Assertion(val, msg).to.be.a('boolean');\n  };\n\n  /**\n   * ### .isNotBoolean(value, [message])\n   *\n   * Asserts that `value` is _not_ a boolean.\n   *\n   *     var teaReady = 'yep'\n   *       , teaServed = 'nope';\n   *\n   *     assert.isNotBoolean(teaReady, 'is the tea ready');\n   *     assert.isNotBoolean(teaServed, 'has tea been served');\n   *\n   * @name isNotBoolean\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.isNotBoolean = function (val, msg) {\n    new Assertion(val, msg).to.not.be.a('boolean');\n  };\n\n  /**\n   * ### .typeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.typeOf({ tea: 'chai' }, 'object', 'we have an object');\n   *     assert.typeOf(['chai', 'jasmine'], 'array', 'we have an array');\n   *     assert.typeOf('tea', 'string', 'we have a string');\n   *     assert.typeOf(/tea/, 'regexp', 'we have a regular expression');\n   *     assert.typeOf(null, 'null', 'we have a null');\n   *     assert.typeOf(undefined, 'undefined', 'we have an undefined');\n   *\n   * @name typeOf\n   * @param {Mixed} value\n   * @param {String} name\n   * @param {String} message\n   * @api public\n   */\n\n  assert.typeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.a(type);\n  };\n\n  /**\n   * ### .notTypeOf(value, name, [message])\n   *\n   * Asserts that `value`'s type is _not_ `name`, as determined by\n   * `Object.prototype.toString`.\n   *\n   *     assert.notTypeOf('tea', 'number', 'strings are not numbers');\n   *\n   * @name notTypeOf\n   * @param {Mixed} value\n   * @param {String} typeof name\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notTypeOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.a(type);\n  };\n\n  /**\n   * ### .instanceOf(object, constructor, [message])\n   *\n   * Asserts that `value` is an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new Tea('chai');\n   *\n   *     assert.instanceOf(chai, Tea, 'chai is an instance of tea');\n   *\n   * @name instanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @api public\n   */\n\n  assert.instanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.be.instanceOf(type);\n  };\n\n  /**\n   * ### .notInstanceOf(object, constructor, [message])\n   *\n   * Asserts `value` is not an instance of `constructor`.\n   *\n   *     var Tea = function (name) { this.name = name; }\n   *       , chai = new String('chai');\n   *\n   *     assert.notInstanceOf(chai, Tea, 'chai is not an instance of tea');\n   *\n   * @name notInstanceOf\n   * @param {Object} object\n   * @param {Constructor} constructor\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notInstanceOf = function (val, type, msg) {\n    new Assertion(val, msg).to.not.be.instanceOf(type);\n  };\n\n  /**\n   * ### .include(haystack, needle, [message])\n   *\n   * Asserts that `haystack` includes `needle`. Works\n   * for strings and arrays.\n   *\n   *     assert.include('foobar', 'bar', 'foobar contains string \"bar\"');\n   *     assert.include([ 1, 2, 3 ], 3, 'array contains value');\n   *\n   * @name include\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @api public\n   */\n\n  assert.include = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.include).include(inc);\n  };\n\n  /**\n   * ### .notInclude(haystack, needle, [message])\n   *\n   * Asserts that `haystack` does not include `needle`. Works\n   * for strings and arrays.\n   *\n   *     assert.notInclude('foobar', 'baz', 'string not include substring');\n   *     assert.notInclude([ 1, 2, 3 ], 4, 'array not include contain value');\n   *\n   * @name notInclude\n   * @param {Array|String} haystack\n   * @param {Mixed} needle\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notInclude = function (exp, inc, msg) {\n    new Assertion(exp, msg, assert.notInclude).not.include(inc);\n  };\n\n  /**\n   * ### .match(value, regexp, [message])\n   *\n   * Asserts that `value` matches the regular expression `regexp`.\n   *\n   *     assert.match('foobar', /^foo/, 'regexp matches');\n   *\n   * @name match\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @api public\n   */\n\n  assert.match = function (exp, re, msg) {\n    new Assertion(exp, msg).to.match(re);\n  };\n\n  /**\n   * ### .notMatch(value, regexp, [message])\n   *\n   * Asserts that `value` does not match the regular expression `regexp`.\n   *\n   *     assert.notMatch('foobar', /^foo/, 'regexp does not match');\n   *\n   * @name notMatch\n   * @param {Mixed} value\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notMatch = function (exp, re, msg) {\n    new Assertion(exp, msg).to.not.match(re);\n  };\n\n  /**\n   * ### .property(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`.\n   *\n   *     assert.property({ tea: { green: 'matcha' }}, 'tea');\n   *\n   * @name property\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.property = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.property(prop);\n  };\n\n  /**\n   * ### .notProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`.\n   *\n   *     assert.notProperty({ tea: { green: 'matcha' }}, 'coffee');\n   *\n   * @name notProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop);\n  };\n\n  /**\n   * ### .deepProperty(object, property, [message])\n   *\n   * Asserts that `object` has a property named by `property`, which can be a\n   * string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.deepProperty({ tea: { green: 'matcha' }}, 'tea.green');\n   *\n   * @name deepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop);\n  };\n\n  /**\n   * ### .notDeepProperty(object, property, [message])\n   *\n   * Asserts that `object` does _not_ have a property named by `property`, which\n   * can be a string using dot- and bracket-notation for deep reference.\n   *\n   *     assert.notDeepProperty({ tea: { green: 'matcha' }}, 'tea.oolong');\n   *\n   * @name notDeepProperty\n   * @param {Object} object\n   * @param {String} property\n   * @param {String} message\n   * @api public\n   */\n\n  assert.notDeepProperty = function (obj, prop, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop);\n  };\n\n  /**\n   * ### .propertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`.\n   *\n   *     assert.propertyVal({ tea: 'is good' }, 'tea', 'is good');\n   *\n   * @name propertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.propertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.property(prop, val);\n  };\n\n  /**\n   * ### .propertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`.\n   *\n   *     assert.propertyNotVal({ tea: 'is good' }, 'tea', 'is bad');\n   *\n   * @name propertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.propertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property` with value given\n   * by `value`. `property` can use dot- and bracket-notation for deep\n   * reference.\n   *\n   *     assert.deepPropertyVal({ tea: { green: 'matcha' }}, 'tea.green', 'matcha');\n   *\n   * @name deepPropertyVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepPropertyVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .deepPropertyNotVal(object, property, value, [message])\n   *\n   * Asserts that `object` has a property named by `property`, but with a value\n   * different from that given by `value`. `property` can use dot- and\n   * bracket-notation for deep reference.\n   *\n   *     assert.deepPropertyNotVal({ tea: { green: 'matcha' }}, 'tea.green', 'konacha');\n   *\n   * @name deepPropertyNotVal\n   * @param {Object} object\n   * @param {String} property\n   * @param {Mixed} value\n   * @param {String} message\n   * @api public\n   */\n\n  assert.deepPropertyNotVal = function (obj, prop, val, msg) {\n    new Assertion(obj, msg).to.not.have.deep.property(prop, val);\n  };\n\n  /**\n   * ### .lengthOf(object, length, [message])\n   *\n   * Asserts that `object` has a `length` property with the expected value.\n   *\n   *     assert.lengthOf([1,2,3], 3, 'array has length of 3');\n   *     assert.lengthOf('foobar', 6, 'string has length of 6');\n   *\n   * @name lengthOf\n   * @param {Mixed} object\n   * @param {Number} length\n   * @param {String} message\n   * @api public\n   */\n\n  assert.lengthOf = function (exp, len, msg) {\n    new Assertion(exp, msg).to.have.length(len);\n  };\n\n  /**\n   * ### .throws(function, [constructor/string/regexp], [string/regexp], [message])\n   *\n   * Asserts that `function` will throw an error that is an instance of\n   * `constructor`, or alternately that it will throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.throws(fn, 'function throws a reference error');\n   *     assert.throws(fn, /function throws a reference error/);\n   *     assert.throws(fn, ReferenceError);\n   *     assert.throws(fn, ReferenceError, 'function throws a reference error');\n   *     assert.throws(fn, ReferenceError, /function throws a reference error/);\n   *\n   * @name throws\n   * @alias throw\n   * @alias Throw\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @api public\n   */\n\n  assert.throws = function (fn, errt, errs, msg) {\n    if ('string' === typeof errt || errt instanceof RegExp) {\n      errs = errt;\n      errt = null;\n    }\n\n    var assertErr = new Assertion(fn, msg).to.throw(errt, errs);\n    return flag(assertErr, 'object');\n  };\n\n  /**\n   * ### .doesNotThrow(function, [constructor/regexp], [message])\n   *\n   * Asserts that `function` will _not_ throw an error that is an instance of\n   * `constructor`, or alternately that it will not throw an error with message\n   * matching `regexp`.\n   *\n   *     assert.doesNotThrow(fn, Error, 'function does not throw');\n   *\n   * @name doesNotThrow\n   * @param {Function} function\n   * @param {ErrorConstructor} constructor\n   * @param {RegExp} regexp\n   * @param {String} message\n   * @see https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Error#Error_types\n   * @api public\n   */\n\n  assert.doesNotThrow = function (fn, type, msg) {\n    if ('string' === typeof type) {\n      msg = type;\n      type = null;\n    }\n\n    new Assertion(fn, msg).to.not.Throw(type);\n  };\n\n  /**\n   * ### .operator(val1, operator, val2, [message])\n   *\n   * Compares two values using `operator`.\n   *\n   *     assert.operator(1, '<', 2, 'everything is ok');\n   *     assert.operator(1, '>', 2, 'this will fail');\n   *\n   * @name operator\n   * @param {Mixed} val1\n   * @param {String} operator\n   * @param {Mixed} val2\n   * @param {String} message\n   * @api public\n   */\n\n  assert.operator = function (val, operator, val2, msg) {\n    var ok;\n    switch(operator) {\n      case '==':\n        ok = val == val2;\n        break;\n      case '===':\n        ok = val === val2;\n        break;\n      case '>':\n        ok = val > val2;\n        break;\n      case '>=':\n        ok = val >= val2;\n        break;\n      case '<':\n        ok = val < val2;\n        break;\n      case '<=':\n        ok = val <= val2;\n        break;\n      case '!=':\n        ok = val != val2;\n        break;\n      case '!==':\n        ok = val !== val2;\n        break;\n      default:\n        throw new Error('Invalid operator \"' + operator + '\"');\n    }\n    var test = new Assertion(ok, msg);\n    test.assert(\n        true === flag(test, 'object')\n      , 'expected ' + util.inspect(val) + ' to be ' + operator + ' ' + util.inspect(val2)\n      , 'expected ' + util.inspect(val) + ' to not be ' + operator + ' ' + util.inspect(val2) );\n  };\n\n  /**\n   * ### .closeTo(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.closeTo(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name closeTo\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @api public\n   */\n\n  assert.closeTo = function (act, exp, delta, msg) {\n    new Assertion(act, msg).to.be.closeTo(exp, delta);\n  };\n\n  /**\n   * ### .approximately(actual, expected, delta, [message])\n   *\n   * Asserts that the target is equal `expected`, to within a +/- `delta` range.\n   *\n   *     assert.approximately(1.5, 1, 0.5, 'numbers are close');\n   *\n   * @name approximately\n   * @param {Number} actual\n   * @param {Number} expected\n   * @param {Number} delta\n   * @param {String} message\n   * @api public\n   */\n\n  assert.approximately = function (act, exp, delta, msg) {\n    new Assertion(act, msg).to.be.approximately(exp, delta);\n  };\n\n  /**\n   * ### .sameMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members.\n   * Order is not taken into account.\n   *\n   *     assert.sameMembers([ 1, 2, 3 ], [ 2, 1, 3 ], 'same members');\n   *\n   * @name sameMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @api public\n   */\n\n  assert.sameMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg).to.have.same.members(set2);\n  }\n\n  /**\n   * ### .sameDeepMembers(set1, set2, [message])\n   *\n   * Asserts that `set1` and `set2` have the same members - using a deep equality checking.\n   * Order is not taken into account.\n   *\n   *     assert.sameDeepMembers([ {b: 3}, {a: 2}, {c: 5} ], [ {c: 5}, {b: 3}, {a: 2} ], 'same deep members');\n   *\n   * @name sameDeepMembers\n   * @param {Array} set1\n   * @param {Array} set2\n   * @param {String} message\n   * @api public\n   */\n\n  assert.sameDeepMembers = function (set1, set2, msg) {\n    new Assertion(set1, msg).to.have.same.deep.members(set2);\n  }\n\n  /**\n   * ### .includeMembers(superset, subset, [message])\n   *\n   * Asserts that `subset` is included in `superset`.\n   * Order is not taken into account.\n   *\n   *     assert.includeMembers([ 1, 2, 3 ], [ 2, 1 ], 'include members');\n   *\n   * @name includeMembers\n   * @param {Array} superset\n   * @param {Array} subset\n   * @param {String} message\n   * @api public\n   */\n\n  assert.includeMembers = function (superset, subset, msg) {\n    new Assertion(superset, msg).to.include.members(subset);\n  }\n\n  /**\n   * ### .oneOf(inList, list, [message])\n   *\n   * Asserts that non-object, non-array value `inList` appears in the flat array `list`.\n   *\n   *     assert.oneOf(1, [ 2, 1 ], 'Not found in list');\n   *\n   * @name oneOf\n   * @param {*} inList\n   * @param {Array<*>} list\n   * @param {String} message\n   * @api public\n   */\n\n  assert.oneOf = function (inList, list, msg) {\n    new Assertion(inList, msg).to.be.oneOf(list);\n  }\n\n   /**\n   * ### .changes(function, object, property)\n   *\n   * Asserts that a function changes the value of a property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 22 };\n   *     assert.changes(fn, obj, 'val');\n   *\n   * @name changes\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.changes = function (fn, obj, prop) {\n    new Assertion(fn).to.change(obj, prop);\n  }\n\n   /**\n   * ### .doesNotChange(function, object, property)\n   *\n   * Asserts that a function does not changes the value of a property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { console.log('foo'); };\n   *     assert.doesNotChange(fn, obj, 'val');\n   *\n   * @name doesNotChange\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.doesNotChange = function (fn, obj, prop) {\n    new Assertion(fn).to.not.change(obj, prop);\n  }\n\n   /**\n   * ### .increases(function, object, property)\n   *\n   * Asserts that a function increases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 13 };\n   *     assert.increases(fn, obj, 'val');\n   *\n   * @name increases\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.increases = function (fn, obj, prop) {\n    new Assertion(fn).to.increase(obj, prop);\n  }\n\n   /**\n   * ### .doesNotIncrease(function, object, property)\n   *\n   * Asserts that a function does not increase object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 8 };\n   *     assert.doesNotIncrease(fn, obj, 'val');\n   *\n   * @name doesNotIncrease\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.doesNotIncrease = function (fn, obj, prop) {\n    new Assertion(fn).to.not.increase(obj, prop);\n  }\n\n   /**\n   * ### .decreases(function, object, property)\n   *\n   * Asserts that a function decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 5 };\n   *     assert.decreases(fn, obj, 'val');\n   *\n   * @name decreases\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.decreases = function (fn, obj, prop) {\n    new Assertion(fn).to.decrease(obj, prop);\n  }\n\n   /**\n   * ### .doesNotDecrease(function, object, property)\n   *\n   * Asserts that a function does not decreases an object property\n   *\n   *     var obj = { val: 10 };\n   *     var fn = function() { obj.val = 15 };\n   *     assert.doesNotDecrease(fn, obj, 'val');\n   *\n   * @name doesNotDecrease\n   * @param {Function} modifier function\n   * @param {Object} object\n   * @param {String} property name\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.doesNotDecrease = function (fn, obj, prop) {\n    new Assertion(fn).to.not.decrease(obj, prop);\n  }\n\n  /*!\n   * ### .ifError(object)\n   *\n   * Asserts if value is not a false value, and throws if it is a true value.\n   * This is added to allow for chai to be a drop-in replacement for Node's\n   * assert class.\n   *\n   *     var err = new Error('I am a custom error');\n   *     assert.ifError(err); // Rethrows err!\n   *\n   * @name ifError\n   * @param {Object} object\n   * @api public\n   */\n\n  assert.ifError = function (val) {\n    if (val) {\n      throw(val);\n    }\n  };\n\n  /**\n   * ### .isExtensible(object)\n   *\n   * Asserts that `object` is extensible (can have new properties added to it).\n   *\n   *     assert.isExtensible({});\n   *\n   * @name isExtensible\n   * @alias extensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.isExtensible = function (obj, msg) {\n    new Assertion(obj, msg).to.be.extensible;\n  };\n\n  /**\n   * ### .isNotExtensible(object)\n   *\n   * Asserts that `object` is _not_ extensible.\n   *\n   *     var nonExtensibleObject = Object.preventExtensions({});\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.freese({});\n   *\n   *     assert.isNotExtensible(nonExtensibleObject);\n   *     assert.isNotExtensible(sealedObject);\n   *     assert.isNotExtensible(frozenObject);\n   *\n   * @name isNotExtensible\n   * @alias notExtensible\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.isNotExtensible = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.extensible;\n  };\n\n  /**\n   * ### .isSealed(object)\n   *\n   * Asserts that `object` is sealed (cannot have new properties added to it\n   * and its existing properties cannot be removed).\n   *\n   *     var sealedObject = Object.seal({});\n   *     var frozenObject = Object.seal({});\n   *\n   *     assert.isSealed(sealedObject);\n   *     assert.isSealed(frozenObject);\n   *\n   * @name isSealed\n   * @alias sealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.isSealed = function (obj, msg) {\n    new Assertion(obj, msg).to.be.sealed;\n  };\n\n  /**\n   * ### .isNotSealed(object)\n   *\n   * Asserts that `object` is _not_ sealed.\n   *\n   *     assert.isNotSealed({});\n   *\n   * @name isNotSealed\n   * @alias notSealed\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.isNotSealed = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.sealed;\n  };\n\n  /**\n   * ### .isFrozen(object)\n   *\n   * Asserts that `object` is frozen (cannot have new properties added to it\n   * and its existing properties cannot be modified).\n   *\n   *     var frozenObject = Object.freeze({});\n   *     assert.frozen(frozenObject);\n   *\n   * @name isFrozen\n   * @alias frozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.isFrozen = function (obj, msg) {\n    new Assertion(obj, msg).to.be.frozen;\n  };\n\n  /**\n   * ### .isNotFrozen(object)\n   *\n   * Asserts that `object` is _not_ frozen.\n   *\n   *     assert.isNotFrozen({});\n   *\n   * @name isNotFrozen\n   * @alias notFrozen\n   * @param {Object} object\n   * @param {String} message _optional_\n   * @api public\n   */\n\n  assert.isNotFrozen = function (obj, msg) {\n    new Assertion(obj, msg).to.not.be.frozen;\n  };\n\n  /*!\n   * Aliases.\n   */\n\n  (function alias(name, as){\n    assert[as] = assert[name];\n    return alias;\n  })\n  ('isOk', 'ok')\n  ('isNotOk', 'notOk')\n  ('throws', 'throw')\n  ('throws', 'Throw')\n  ('isExtensible', 'extensible')\n  ('isNotExtensible', 'notExtensible')\n  ('isSealed', 'sealed')\n  ('isNotSealed', 'notSealed')\n  ('isFrozen', 'frozen')\n  ('isNotFrozen', 'notFrozen');\n};\n\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./~/chai/lib/chai/interface/assert.js\n ** module id = 62\n ** module chunks = 1\n **/","var m = require('microdata');\nvar expect = require('chai').expect;\n\ndescribe('microdata', function () {\n\tit('should extract microdata from DOM element with a single metadata root', function () {\n\t\tvar data = m.extract('offer1');\n\t\texpect(data).to.deep.equal({ \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } });\n\t});\n\n\tit('should extract microdata from DOM element with multiple metadata roots', function () {\n\t\tvar data = m.extract('multiple_meta_items');\n\t\texpect(data).to.deep.equal({ '__items' : [\n\t\t\t{ \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic1\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } },\t\t\t\n\t\t\t{ \"type\": \"http://schema.org/Offer\", \"properties\": { \"name\": \"Blend-O-Matic2\", \"price\": \"$19.95\", \"reviews\": { \"type\": \"http://schema.org/AggregateRating\", \"properties\": { \"ratingValue\": \"4\", \"bestRating\": \"5\", \"ratingCount\": \"25\" } } } }\t\t\t\n\t\t]});\n\t});\n\n\tit('should extract microdata from document HEAD', function () {\n\t\tvar data = m.extractFromHead();\n\t\texpect(data).to.deep.equal({ \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\" });\n\t});\n\t\n\tdescribe('meta-data mapper', function(){\n\t\tit('should be able to replace each extracted piece of metadata', function(){\n\t\t\t\n\t\t\tm.setMapper(function(meta){\n\t\t\t\treturn {c : 'd'};\n\t\t\t});\n\t\t\tvar data = m.extractFromHead();\n\t\t\texpect(data).to.deep.equal({ \"c\" : \"d\" });\t\n\t\t});\n\t\tit('should be able to convert metadata', function(){\n\t\t\t\n\t\t\tm.setMapper(function(meta){\n\t\t\t\treturn {c : 'd', d : meta['og:description']};\n\t\t\t});\n\t\t\tvar data = m.extractFromHead();\n\t\t\texpect(data).to.deep.equal({ \"c\" : \"d\", \"d\" : \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\" });\t\n\t\t});\n\t\tit('should be \"transparent\" mappig using the noMapper', function(){\n\t\t\texpect(m.noMapper('dfd')).to.equal('dfd');\n\t\t});\n\t\tit('should provide metadata and DOM tree root element it was extracted from', function(done){\n\t\t\tm.setMapper(function(meta, el){\n\t\t\t\texpect(el.attr('id')).to.equal('offer1');\n\t\t\t\texpect(el.attr('data-event-id')).to.equal('123');\n\t\t\t\tdone();\n\t\t\t});\n\t\t\tm.extract('offer1');\n\t\t});\n\t\tit('should provide only metadata and no DOM tree root element when extracting from HEAD', function(done){\n\t\t\tm.setMapper(function(meta, el){\n\t\t\t\texpect(el).to.be.undefined;\n\t\t\t\tdone();\n\t\t\t});\n\t\t\tm.extractFromHead();\n\t\t});\n\t\tit('should handle mapper failure', function(){\n\t\t\tm.setMapper(function(meta, el){\n\t\t\t\tdasdf.asdfasdf = 5;\n\t\t\t});\n\t\t\tvar headerMeta = m.extractFromHead();\t\t\n\t\t\texpect(headerMeta).to.deep.equal({ \"og:description\": \"Velkommen til Den Norske Opera & Ballett. Her finner du informasjon om våre forestillinger, opera, ballett, konserter og andre kulturtilbud.\", \"og:url\": \"http://operaen.no/\", \"og:title\": \"Opera, Ballett og Konserter | Operaen  \\\\ Den Norske Opera & Ballett\", \"og:site_name\": \"Operaen.no\", \"og:type\": \"website\", \"keywords\": \"Den Norske Opera & Ballett, operaen, ballett, nasjonalballetten, nasjonaloperaen, operahuset, konserter, operakoret, operaorkestret, Operaen, forestillinger, operabutikken, opera, Oslo, oslo opera, operaballetten, konserter\" });\n\t\t})\n\t});\n\t\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./test/microdata.js\n ** module id = 63\n ** module chunks = 1\n **/","var cookies = require('cookies');\nbeforeEach('cleanup user and session info', function () {\n\tvar keys = cookies.keys();\n\tfor (var i = 0; i < keys.length; i++) {\n\t\tvar element = keys[i];\n\t\tcookies.removeItem(element);\n\t}\n\tkeys = cookies.keys();\n})\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./test/setup.js\n ** module id = 64\n ** module chunks = 1\n **/","var expect = require('chai').expect;\nvar info = require('version');\nvar features = require('features');\n\ndescribe('script version', function(){\n\tit('should be same as major.minor.build-feature1.feature2 format', function(){\n\t\tfeatures.defineExperiment('experiment1', 100);\n\t\tfeatures.defineExperiment('experiment2', 100);\n\t\texpect(info.version()).to.equal([info.major, info.minor, info.build].join('.') + '-experiment1.experiment2');\t\n\t});\n\tit('should be same as major.minor.build', function(){\n\t\tfeatures.clearExperiments();\n\t\texpect(info.version()).to.equal([info.major, info.minor, info.build].join('.'));\t\t\n\t});\n});\n\n\n/*****************\n ** WEBPACK FOOTER\n ** ./test/version.js\n ** module id = 65\n ** module chunks = 1\n **/"],"sourceRoot":""}